

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jul 16 19:00:32 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F18313
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0017                     	;# 
    54  0018                     	;# 
    55  0019                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  001D                     	;# 
    61  001E                     	;# 
    62  001F                     	;# 
    63  008C                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0097                     	;# 
    70  009B                     	;# 
    71  009B                     	;# 
    72  009C                     	;# 
    73  009D                     	;# 
    74  009E                     	;# 
    75  009F                     	;# 
    76  010C                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0115                     	;# 
    80  0116                     	;# 
    81  0117                     	;# 
    82  0118                     	;# 
    83  0119                     	;# 
    84  018C                     	;# 
    85  0197                     	;# 
    86  0199                     	;# 
    87  0199                     	;# 
    88  0199                     	;# 
    89  019A                     	;# 
    90  019A                     	;# 
    91  019A                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019C                     	;# 
    98  019C                     	;# 
    99  019C                     	;# 
   100  019D                     	;# 
   101  019D                     	;# 
   102  019D                     	;# 
   103  019E                     	;# 
   104  019E                     	;# 
   105  019E                     	;# 
   106  019F                     	;# 
   107  019F                     	;# 
   108  019F                     	;# 
   109  019F                     	;# 
   110  019F                     	;# 
   111  020C                     	;# 
   112  0211                     	;# 
   113  0211                     	;# 
   114  0212                     	;# 
   115  0212                     	;# 
   116  0213                     	;# 
   117  0213                     	;# 
   118  0214                     	;# 
   119  0214                     	;# 
   120  0215                     	;# 
   121  0215                     	;# 
   122  0215                     	;# 
   123  0215                     	;# 
   124  0216                     	;# 
   125  0216                     	;# 
   126  0217                     	;# 
   127  0217                     	;# 
   128  028C                     	;# 
   129  0291                     	;# 
   130  0291                     	;# 
   131  0292                     	;# 
   132  0293                     	;# 
   133  0294                     	;# 
   134  0295                     	;# 
   135  0295                     	;# 
   136  0296                     	;# 
   137  0297                     	;# 
   138  0298                     	;# 
   139  029F                     	;# 
   140  030C                     	;# 
   141  038C                     	;# 
   142  0391                     	;# 
   143  0392                     	;# 
   144  0393                     	;# 
   145  039A                     	;# 
   146  039C                     	;# 
   147  039D                     	;# 
   148  039E                     	;# 
   149  039F                     	;# 
   150  040C                     	;# 
   151  041F                     	;# 
   152  048C                     	;# 
   153  0498                     	;# 
   154  0498                     	;# 
   155  0499                     	;# 
   156  049A                     	;# 
   157  049B                     	;# 
   158  049B                     	;# 
   159  049C                     	;# 
   160  049D                     	;# 
   161  049E                     	;# 
   162  049F                     	;# 
   163  0617                     	;# 
   164  0618                     	;# 
   165  0619                     	;# 
   166  0619                     	;# 
   167  061A                     	;# 
   168  061B                     	;# 
   169  061C                     	;# 
   170  061C                     	;# 
   171  0691                     	;# 
   172  0692                     	;# 
   173  0693                     	;# 
   174  0694                     	;# 
   175  0695                     	;# 
   176  0696                     	;# 
   177  0697                     	;# 
   178  0698                     	;# 
   179  0699                     	;# 
   180  0891                     	;# 
   181  0891                     	;# 
   182  0892                     	;# 
   183  0893                     	;# 
   184  0893                     	;# 
   185  0894                     	;# 
   186  0895                     	;# 
   187  0896                     	;# 
   188  089B                     	;# 
   189  0911                     	;# 
   190  0912                     	;# 
   191  0913                     	;# 
   192  0914                     	;# 
   193  0915                     	;# 
   194  0916                     	;# 
   195  0918                     	;# 
   196  0919                     	;# 
   197  091A                     	;# 
   198  091B                     	;# 
   199  091C                     	;# 
   200  091D                     	;# 
   201  091E                     	;# 
   202  091F                     	;# 
   203  0E0F                     	;# 
   204  0E10                     	;# 
   205  0E11                     	;# 
   206  0E12                     	;# 
   207  0E13                     	;# 
   208  0E14                     	;# 
   209  0E15                     	;# 
   210  0E18                     	;# 
   211  0E1A                     	;# 
   212  0E1B                     	;# 
   213  0E1C                     	;# 
   214  0E20                     	;# 
   215  0E21                     	;# 
   216  0E22                     	;# 
   217  0E24                     	;# 
   218  0E25                     	;# 
   219  0E28                     	;# 
   220  0E29                     	;# 
   221  0E2A                     	;# 
   222  0E2B                     	;# 
   223  0E90                     	;# 
   224  0E91                     	;# 
   225  0E92                     	;# 
   226  0E94                     	;# 
   227  0E95                     	;# 
   228  0F0F                     	;# 
   229  0F10                     	;# 
   230  0F11                     	;# 
   231  0F12                     	;# 
   232  0F13                     	;# 
   233  0F14                     	;# 
   234  0F15                     	;# 
   235  0F16                     	;# 
   236  0F17                     	;# 
   237  0F18                     	;# 
   238  0F19                     	;# 
   239  0F1A                     	;# 
   240  0F1B                     	;# 
   241  0F1C                     	;# 
   242  0F1D                     	;# 
   243  0F1E                     	;# 
   244  0F1F                     	;# 
   245  0F20                     	;# 
   246  0F21                     	;# 
   247  0F22                     	;# 
   248  0F23                     	;# 
   249  0FE4                     	;# 
   250  0FE5                     	;# 
   251  0FE6                     	;# 
   252  0FE7                     	;# 
   253  0FE8                     	;# 
   254  0FE9                     	;# 
   255  0FEA                     	;# 
   256  0FEB                     	;# 
   257  0FED                     	;# 
   258  0FEE                     	;# 
   259  0FEF                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  0010                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0013                     	;# 
   277  0014                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0017                     	;# 
   281  0018                     	;# 
   282  0019                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  001D                     	;# 
   288  001E                     	;# 
   289  001F                     	;# 
   290  008C                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0097                     	;# 
   297  009B                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  0111                     	;# 
   305  0112                     	;# 
   306  0115                     	;# 
   307  0116                     	;# 
   308  0117                     	;# 
   309  0118                     	;# 
   310  0119                     	;# 
   311  018C                     	;# 
   312  0197                     	;# 
   313  0199                     	;# 
   314  0199                     	;# 
   315  0199                     	;# 
   316  019A                     	;# 
   317  019A                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019C                     	;# 
   325  019C                     	;# 
   326  019C                     	;# 
   327  019D                     	;# 
   328  019D                     	;# 
   329  019D                     	;# 
   330  019E                     	;# 
   331  019E                     	;# 
   332  019E                     	;# 
   333  019F                     	;# 
   334  019F                     	;# 
   335  019F                     	;# 
   336  019F                     	;# 
   337  019F                     	;# 
   338  020C                     	;# 
   339  0211                     	;# 
   340  0211                     	;# 
   341  0212                     	;# 
   342  0212                     	;# 
   343  0213                     	;# 
   344  0213                     	;# 
   345  0214                     	;# 
   346  0214                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0216                     	;# 
   352  0216                     	;# 
   353  0217                     	;# 
   354  0217                     	;# 
   355  028C                     	;# 
   356  0291                     	;# 
   357  0291                     	;# 
   358  0292                     	;# 
   359  0293                     	;# 
   360  0294                     	;# 
   361  0295                     	;# 
   362  0295                     	;# 
   363  0296                     	;# 
   364  0297                     	;# 
   365  0298                     	;# 
   366  029F                     	;# 
   367  030C                     	;# 
   368  038C                     	;# 
   369  0391                     	;# 
   370  0392                     	;# 
   371  0393                     	;# 
   372  039A                     	;# 
   373  039C                     	;# 
   374  039D                     	;# 
   375  039E                     	;# 
   376  039F                     	;# 
   377  040C                     	;# 
   378  041F                     	;# 
   379  048C                     	;# 
   380  0498                     	;# 
   381  0498                     	;# 
   382  0499                     	;# 
   383  049A                     	;# 
   384  049B                     	;# 
   385  049B                     	;# 
   386  049C                     	;# 
   387  049D                     	;# 
   388  049E                     	;# 
   389  049F                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  0619                     	;# 
   394  061A                     	;# 
   395  061B                     	;# 
   396  061C                     	;# 
   397  061C                     	;# 
   398  0691                     	;# 
   399  0692                     	;# 
   400  0693                     	;# 
   401  0694                     	;# 
   402  0695                     	;# 
   403  0696                     	;# 
   404  0697                     	;# 
   405  0698                     	;# 
   406  0699                     	;# 
   407  0891                     	;# 
   408  0891                     	;# 
   409  0892                     	;# 
   410  0893                     	;# 
   411  0893                     	;# 
   412  0894                     	;# 
   413  0895                     	;# 
   414  0896                     	;# 
   415  089B                     	;# 
   416  0911                     	;# 
   417  0912                     	;# 
   418  0913                     	;# 
   419  0914                     	;# 
   420  0915                     	;# 
   421  0916                     	;# 
   422  0918                     	;# 
   423  0919                     	;# 
   424  091A                     	;# 
   425  091B                     	;# 
   426  091C                     	;# 
   427  091D                     	;# 
   428  091E                     	;# 
   429  091F                     	;# 
   430  0E0F                     	;# 
   431  0E10                     	;# 
   432  0E11                     	;# 
   433  0E12                     	;# 
   434  0E13                     	;# 
   435  0E14                     	;# 
   436  0E15                     	;# 
   437  0E18                     	;# 
   438  0E1A                     	;# 
   439  0E1B                     	;# 
   440  0E1C                     	;# 
   441  0E20                     	;# 
   442  0E21                     	;# 
   443  0E22                     	;# 
   444  0E24                     	;# 
   445  0E25                     	;# 
   446  0E28                     	;# 
   447  0E29                     	;# 
   448  0E2A                     	;# 
   449  0E2B                     	;# 
   450  0E90                     	;# 
   451  0E91                     	;# 
   452  0E92                     	;# 
   453  0E94                     	;# 
   454  0E95                     	;# 
   455  0F0F                     	;# 
   456  0F10                     	;# 
   457  0F11                     	;# 
   458  0F12                     	;# 
   459  0F13                     	;# 
   460  0F14                     	;# 
   461  0F15                     	;# 
   462  0F16                     	;# 
   463  0F17                     	;# 
   464  0F18                     	;# 
   465  0F19                     	;# 
   466  0F1A                     	;# 
   467  0F1B                     	;# 
   468  0F1C                     	;# 
   469  0F1D                     	;# 
   470  0F1E                     	;# 
   471  0F1F                     	;# 
   472  0F20                     	;# 
   473  0F21                     	;# 
   474  0F22                     	;# 
   475  0F23                     	;# 
   476  0FE4                     	;# 
   477  0FE5                     	;# 
   478  0FE6                     	;# 
   479  0FE7                     	;# 
   480  0FE8                     	;# 
   481  0FE9                     	;# 
   482  0FEA                     	;# 
   483  0FEB                     	;# 
   484  0FED                     	;# 
   485  0FEE                     	;# 
   486  0FEF                     	;# 
   487  0000                     	;# 
   488  0001                     	;# 
   489  0002                     	;# 
   490  0003                     	;# 
   491  0004                     	;# 
   492  0005                     	;# 
   493  0006                     	;# 
   494  0007                     	;# 
   495  0008                     	;# 
   496  0009                     	;# 
   497  000A                     	;# 
   498  000B                     	;# 
   499  000C                     	;# 
   500  0010                     	;# 
   501  0011                     	;# 
   502  0012                     	;# 
   503  0013                     	;# 
   504  0014                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  0019                     	;# 
   511  001A                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  008C                     	;# 
   518  0090                     	;# 
   519  0091                     	;# 
   520  0092                     	;# 
   521  0093                     	;# 
   522  0094                     	;# 
   523  0097                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  009F                     	;# 
   530  010C                     	;# 
   531  0111                     	;# 
   532  0112                     	;# 
   533  0115                     	;# 
   534  0116                     	;# 
   535  0117                     	;# 
   536  0118                     	;# 
   537  0119                     	;# 
   538  018C                     	;# 
   539  0197                     	;# 
   540  0199                     	;# 
   541  0199                     	;# 
   542  0199                     	;# 
   543  019A                     	;# 
   544  019A                     	;# 
   545  019A                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019B                     	;# 
   551  019C                     	;# 
   552  019C                     	;# 
   553  019C                     	;# 
   554  019D                     	;# 
   555  019D                     	;# 
   556  019D                     	;# 
   557  019E                     	;# 
   558  019E                     	;# 
   559  019E                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  019F                     	;# 
   563  019F                     	;# 
   564  019F                     	;# 
   565  020C                     	;# 
   566  0211                     	;# 
   567  0211                     	;# 
   568  0212                     	;# 
   569  0212                     	;# 
   570  0213                     	;# 
   571  0213                     	;# 
   572  0214                     	;# 
   573  0214                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0216                     	;# 
   580  0217                     	;# 
   581  0217                     	;# 
   582  028C                     	;# 
   583  0291                     	;# 
   584  0291                     	;# 
   585  0292                     	;# 
   586  0293                     	;# 
   587  0294                     	;# 
   588  0295                     	;# 
   589  0295                     	;# 
   590  0296                     	;# 
   591  0297                     	;# 
   592  0298                     	;# 
   593  029F                     	;# 
   594  030C                     	;# 
   595  038C                     	;# 
   596  0391                     	;# 
   597  0392                     	;# 
   598  0393                     	;# 
   599  039A                     	;# 
   600  039C                     	;# 
   601  039D                     	;# 
   602  039E                     	;# 
   603  039F                     	;# 
   604  040C                     	;# 
   605  041F                     	;# 
   606  048C                     	;# 
   607  0498                     	;# 
   608  0498                     	;# 
   609  0499                     	;# 
   610  049A                     	;# 
   611  049B                     	;# 
   612  049B                     	;# 
   613  049C                     	;# 
   614  049D                     	;# 
   615  049E                     	;# 
   616  049F                     	;# 
   617  0617                     	;# 
   618  0618                     	;# 
   619  0619                     	;# 
   620  0619                     	;# 
   621  061A                     	;# 
   622  061B                     	;# 
   623  061C                     	;# 
   624  061C                     	;# 
   625  0691                     	;# 
   626  0692                     	;# 
   627  0693                     	;# 
   628  0694                     	;# 
   629  0695                     	;# 
   630  0696                     	;# 
   631  0697                     	;# 
   632  0698                     	;# 
   633  0699                     	;# 
   634  0891                     	;# 
   635  0891                     	;# 
   636  0892                     	;# 
   637  0893                     	;# 
   638  0893                     	;# 
   639  0894                     	;# 
   640  0895                     	;# 
   641  0896                     	;# 
   642  089B                     	;# 
   643  0911                     	;# 
   644  0912                     	;# 
   645  0913                     	;# 
   646  0914                     	;# 
   647  0915                     	;# 
   648  0916                     	;# 
   649  0918                     	;# 
   650  0919                     	;# 
   651  091A                     	;# 
   652  091B                     	;# 
   653  091C                     	;# 
   654  091D                     	;# 
   655  091E                     	;# 
   656  091F                     	;# 
   657  0E0F                     	;# 
   658  0E10                     	;# 
   659  0E11                     	;# 
   660  0E12                     	;# 
   661  0E13                     	;# 
   662  0E14                     	;# 
   663  0E15                     	;# 
   664  0E18                     	;# 
   665  0E1A                     	;# 
   666  0E1B                     	;# 
   667  0E1C                     	;# 
   668  0E20                     	;# 
   669  0E21                     	;# 
   670  0E22                     	;# 
   671  0E24                     	;# 
   672  0E25                     	;# 
   673  0E28                     	;# 
   674  0E29                     	;# 
   675  0E2A                     	;# 
   676  0E2B                     	;# 
   677  0E90                     	;# 
   678  0E91                     	;# 
   679  0E92                     	;# 
   680  0E94                     	;# 
   681  0E95                     	;# 
   682  0F0F                     	;# 
   683  0F10                     	;# 
   684  0F11                     	;# 
   685  0F12                     	;# 
   686  0F13                     	;# 
   687  0F14                     	;# 
   688  0F15                     	;# 
   689  0F16                     	;# 
   690  0F17                     	;# 
   691  0F18                     	;# 
   692  0F19                     	;# 
   693  0F1A                     	;# 
   694  0F1B                     	;# 
   695  0F1C                     	;# 
   696  0F1D                     	;# 
   697  0F1E                     	;# 
   698  0F1F                     	;# 
   699  0F20                     	;# 
   700  0F21                     	;# 
   701  0F22                     	;# 
   702  0F23                     	;# 
   703  0FE4                     	;# 
   704  0FE5                     	;# 
   705  0FE6                     	;# 
   706  0FE7                     	;# 
   707  0FE8                     	;# 
   708  0FE9                     	;# 
   709  0FEA                     	;# 
   710  0FEB                     	;# 
   711  0FED                     	;# 
   712  0FEE                     	;# 
   713  0FEF                     	;# 
   714  0000                     	;# 
   715  0001                     	;# 
   716  0002                     	;# 
   717  0003                     	;# 
   718  0004                     	;# 
   719  0005                     	;# 
   720  0006                     	;# 
   721  0007                     	;# 
   722  0008                     	;# 
   723  0009                     	;# 
   724  000A                     	;# 
   725  000B                     	;# 
   726  000C                     	;# 
   727  0010                     	;# 
   728  0011                     	;# 
   729  0012                     	;# 
   730  0013                     	;# 
   731  0014                     	;# 
   732  0015                     	;# 
   733  0016                     	;# 
   734  0017                     	;# 
   735  0018                     	;# 
   736  0019                     	;# 
   737  0019                     	;# 
   738  001A                     	;# 
   739  001B                     	;# 
   740  001C                     	;# 
   741  001D                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  008C                     	;# 
   745  0090                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0094                     	;# 
   750  0097                     	;# 
   751  009B                     	;# 
   752  009B                     	;# 
   753  009C                     	;# 
   754  009D                     	;# 
   755  009E                     	;# 
   756  009F                     	;# 
   757  010C                     	;# 
   758  0111                     	;# 
   759  0112                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  018C                     	;# 
   766  0197                     	;# 
   767  0199                     	;# 
   768  0199                     	;# 
   769  0199                     	;# 
   770  019A                     	;# 
   771  019A                     	;# 
   772  019A                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  019C                     	;# 
   780  019C                     	;# 
   781  019D                     	;# 
   782  019D                     	;# 
   783  019D                     	;# 
   784  019E                     	;# 
   785  019E                     	;# 
   786  019E                     	;# 
   787  019F                     	;# 
   788  019F                     	;# 
   789  019F                     	;# 
   790  019F                     	;# 
   791  019F                     	;# 
   792  020C                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0216                     	;# 
   806  0216                     	;# 
   807  0217                     	;# 
   808  0217                     	;# 
   809  028C                     	;# 
   810  0291                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0293                     	;# 
   814  0294                     	;# 
   815  0295                     	;# 
   816  0295                     	;# 
   817  0296                     	;# 
   818  0297                     	;# 
   819  0298                     	;# 
   820  029F                     	;# 
   821  030C                     	;# 
   822  038C                     	;# 
   823  0391                     	;# 
   824  0392                     	;# 
   825  0393                     	;# 
   826  039A                     	;# 
   827  039C                     	;# 
   828  039D                     	;# 
   829  039E                     	;# 
   830  039F                     	;# 
   831  040C                     	;# 
   832  041F                     	;# 
   833  048C                     	;# 
   834  0498                     	;# 
   835  0498                     	;# 
   836  0499                     	;# 
   837  049A                     	;# 
   838  049B                     	;# 
   839  049B                     	;# 
   840  049C                     	;# 
   841  049D                     	;# 
   842  049E                     	;# 
   843  049F                     	;# 
   844  0617                     	;# 
   845  0618                     	;# 
   846  0619                     	;# 
   847  0619                     	;# 
   848  061A                     	;# 
   849  061B                     	;# 
   850  061C                     	;# 
   851  061C                     	;# 
   852  0691                     	;# 
   853  0692                     	;# 
   854  0693                     	;# 
   855  0694                     	;# 
   856  0695                     	;# 
   857  0696                     	;# 
   858  0697                     	;# 
   859  0698                     	;# 
   860  0699                     	;# 
   861  0891                     	;# 
   862  0891                     	;# 
   863  0892                     	;# 
   864  0893                     	;# 
   865  0893                     	;# 
   866  0894                     	;# 
   867  0895                     	;# 
   868  0896                     	;# 
   869  089B                     	;# 
   870  0911                     	;# 
   871  0912                     	;# 
   872  0913                     	;# 
   873  0914                     	;# 
   874  0915                     	;# 
   875  0916                     	;# 
   876  0918                     	;# 
   877  0919                     	;# 
   878  091A                     	;# 
   879  091B                     	;# 
   880  091C                     	;# 
   881  091D                     	;# 
   882  091E                     	;# 
   883  091F                     	;# 
   884  0E0F                     	;# 
   885  0E10                     	;# 
   886  0E11                     	;# 
   887  0E12                     	;# 
   888  0E13                     	;# 
   889  0E14                     	;# 
   890  0E15                     	;# 
   891  0E18                     	;# 
   892  0E1A                     	;# 
   893  0E1B                     	;# 
   894  0E1C                     	;# 
   895  0E20                     	;# 
   896  0E21                     	;# 
   897  0E22                     	;# 
   898  0E24                     	;# 
   899  0E25                     	;# 
   900  0E28                     	;# 
   901  0E29                     	;# 
   902  0E2A                     	;# 
   903  0E2B                     	;# 
   904  0E90                     	;# 
   905  0E91                     	;# 
   906  0E92                     	;# 
   907  0E94                     	;# 
   908  0E95                     	;# 
   909  0F0F                     	;# 
   910  0F10                     	;# 
   911  0F11                     	;# 
   912  0F12                     	;# 
   913  0F13                     	;# 
   914  0F14                     	;# 
   915  0F15                     	;# 
   916  0F16                     	;# 
   917  0F17                     	;# 
   918  0F18                     	;# 
   919  0F19                     	;# 
   920  0F1A                     	;# 
   921  0F1B                     	;# 
   922  0F1C                     	;# 
   923  0F1D                     	;# 
   924  0F1E                     	;# 
   925  0F1F                     	;# 
   926  0F20                     	;# 
   927  0F21                     	;# 
   928  0F22                     	;# 
   929  0F23                     	;# 
   930  0FE4                     	;# 
   931  0FE5                     	;# 
   932  0FE6                     	;# 
   933  0FE7                     	;# 
   934  0FE8                     	;# 
   935  0FE9                     	;# 
   936  0FEA                     	;# 
   937  0FEB                     	;# 
   938  0FED                     	;# 
   939  0FEE                     	;# 
   940  0FEF                     	;# 
   941  000B                     _INTCON	set	11
   942  001B                     _T1CON	set	27
   943  001C                     _T1GCON	set	28
   944  001A                     _TMR1H	set	26
   945  0019                     _TMR1L	set	25
   946  005F                     _GIE	set	95
   947  005E                     _PEIE	set	94
   948  0064                     _RA4	set	100
   949  008B                     _SSP1IF	set	139
   950  008F                     _TMR1GIF	set	143
   951  0088                     _TMR1IF	set	136
   952  00D8                     _TMR1ON	set	216
   953  008C                     _TRISA	set	140
   954  0484                     _IOCIE	set	1156
   955  048B                     _SSP1IE	set	1163
   956  048F                     _TMR1GIE	set	1167
   957  0488                     _TMR1IE	set	1160
   958  0464                     _TRISA4	set	1124
   959  018C                     _ANSELA	set	396
   960  0211                     _SSP1BUF	set	529
   961  0215                     _SSP1CON1	set	533
   962  0215                     _SSP1CON1bits	set	533
   963  0217                     _SSP1CON3	set	535
   964  0214                     _SSP1STAT	set	532
   965  020C                     _WPUA	set	524
   966  028C                     _ODCONA	set	652
   967  030C                     _SLRCONA	set	780
   968  038C                     _INLVLA	set	908
   969  0919                     _OSCCON1	set	2329
   970  091A                     _OSCCON2	set	2330
   971  091B                     _OSCCON3	set	2331
   972  091D                     _OSCEN	set	2333
   973  091F                     _OSCFRQ	set	2335
   974  0E0F                     _PPSLOCK	set	3599
   975  0E20                     _SSP1CLKPPS	set	3616
   976  0E21                     _SSP1DATPPS	set	3617
   977  0E22                     _SSP1SSPPS	set	3618
   978  0E13                     _T1GPPS	set	3603
   979  0E95                     _RA5PPS	set	3733
   980                           
   981                           ; #config settings
   982  0000                     
   983                           	psect	cinit
   984  001D                     start_initialization:	
   985  001D                     __initialization:	
   986                           
   987                           ; Clear objects allocated to COMMON
   988  001D  01F0               	clrf	__pbssCOMMON& (0+127)
   989  001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   990  001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   991  0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   992  0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   993  0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   994  0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   995                           
   996                           ; Clear objects allocated to BANK0
   997  0024  3020               	movlw	low __pbssBANK0
   998  0025  0084               	movwf	4
   999  0026  3000               	movlw	high __pbssBANK0
  1000  0027  0085               	movwf	5
  1001  0028  3013               	movlw	19
  1002  0029  21CE               	fcall	clear_ram0
  1003  002A                     end_of_initialization:	
  1004                           ;End of C runtime variable initialization code
  1005                           
  1006  002A                     __end_of__initialization:	
  1007  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1008  002B  0020               	movlb	0
  1009  002C  282D               	ljmp	_main	;jump to C main() function
  1010                           
  1011                           	psect	bssCOMMON
  1012  0070                     __pbssCOMMON:	
  1013  0070                     _bufferCount:	
  1014  0070                     	ds	2
  1015  0072                     _maxTimerCount:	
  1016  0072                     	ds	2
  1017  0074                     _minTimerCount:	
  1018  0074                     	ds	2
  1019  0076                     _timerValueStatus:	
  1020  0076                     	ds	1
  1021                           
  1022                           	psect	bssBANK0
  1023  0020                     __pbssBANK0:	
  1024  0020                     _dataBuffer:	
  1025  0020                     	ds	12
  1026  002C                     _summedTimerCount:	
  1027  002C                     	ds	4
  1028  0030                     _TMR1_InterruptHandler:	
  1029  0030                     	ds	2
  1030  0032                     _PINGDriverStatus:	
  1031  0032                     	ds	1
  1032                           
  1033                           	psect	clrtext
  1034  01CE                     clear_ram0:	
  1035                           ;	Called with FSR0 containing the base address, and
  1036                           ;	WREG with the size to clear
  1037                           
  1038  01CE  0064               	clrwdt	;clear the watchdog before getting into this loop
  1039  01CF                     clrloop0:	
  1040  01CF  0180               	clrf	0	;clear RAM location pointed to by FSR
  1041  01D0  3101               	addfsr 0,1
  1042  01D1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1043  01D2  29CF               	goto	clrloop0	;have we reached the end yet?
  1044  01D3  3400               	retlw	0	;all done for this memory range, return
  1045                           
  1046                           	psect	cstackCOMMON
  1047  0077                     __pcstackCOMMON:	
  1048  0077                     ?_globalInterruptDisable:	
  1049  0077                     ?_globalInterruptEnable:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0077                     ?_intializeTimers:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0077                     ?_initializeInterrupts:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0077                     ?_initializeSpi:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0077                     ?_resetTimer:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0077                     ?_TMR1_StopTimer:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0077                     ?_peripheralInterruptDisable:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0077                     ?_clearAllFlags:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0077                     ?_peripheralInterruptEnable:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0077                     ?_timer1GateInterrupt:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0077                     ?_spiInterrupt:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0077                     ??_spiInterrupt:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0077                     ?_initialize:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0077                     ?_takeReading:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0077                     ?_main:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0077                     ?_interruptManager:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0077                     ?_TMR1_StartTimer:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0077                     ?i1_globalInterruptDisable:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0077                     ??i1_globalInterruptDisable:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0077                     ?_timer1Value:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0x0
  1111  0077                     	ds	2
  1112  0079                     ??_timer1Value:	
  1113  0079                     timer1Value@value:	
  1114                           ; 1 bytes @ 0x2
  1115                           
  1116  0079                     spiInterrupt@command:	
  1117                           ; 2 bytes @ 0x2
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x2
  1121  0079                     	ds	2
  1122  007B                     ??_timer1GateInterrupt:	
  1123  007B                     timer1GateInterrupt@timerCount:	
  1124                           ; 1 bytes @ 0x4
  1125                           
  1126                           
  1127                           ; 2 bytes @ 0x4
  1128  007B                     	ds	2
  1129  007D                     ??_interruptManager:	
  1130                           
  1131                           ; 1 bytes @ 0x6
  1132  007D                     	ds	1
  1133                           
  1134                           	psect	cstackBANK0
  1135  0033                     __pcstackBANK0:	
  1136  0033                     ??_globalInterruptDisable:	
  1137  0033                     ??_globalInterruptEnable:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0033                     ??_intializeTimers:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0033                     ??_initializeInterrupts:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0033                     ??_initializeSpi:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0033                     ??_TMR1_StopTimer:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0033                     ??_peripheralInterruptDisable:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0033                     ??_clearAllFlags:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0033                     ??_peripheralInterruptEnable:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0033                     ?_TMR1_WriteTimer:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0033                     ??_TMR1_StartTimer:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0033                     ?_storeByteForTransfer:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0033                     TMR1_WriteTimer@value:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0033                     storeByteForTransfer@data:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x0
  1178  0033                     	ds	1
  1179  0034                     initializeSpi@i:	
  1180                           
  1181                           ; 2 bytes @ 0x1
  1182  0034                     	ds	1
  1183  0035                     ??_TMR1_WriteTimer:	
  1184  0035                     ??_storeByteForTransfer:	
  1185                           ; 1 bytes @ 0x2
  1186                           
  1187  0035                     ?_storeWordForTransfer:	
  1188                           ; 1 bytes @ 0x2
  1189                           
  1190  0035                     storeWordForTransfer@data:	
  1191                           ; 2 bytes @ 0x2
  1192                           
  1193                           
  1194                           ; 2 bytes @ 0x2
  1195  0035                     	ds	1
  1196  0036                     ??_initialize:	
  1197                           
  1198                           ; 1 bytes @ 0x3
  1199  0036                     	ds	1
  1200  0037                     ??_storeWordForTransfer:	
  1201  0037                     TMR1_WriteTimer@state:	
  1202                           ; 1 bytes @ 0x4
  1203                           
  1204                           
  1205                           ; 2 bytes @ 0x4
  1206  0037                     	ds	2
  1207  0039                     ??_resetTimer:	
  1208  0039                     ??_takeReading:	
  1209                           ; 1 bytes @ 0x6
  1210                           
  1211  0039                     storeWordForTransfer@buf:	
  1212                           ; 1 bytes @ 0x6
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x6
  1216  0039                     	ds	1
  1217  003A                     takeReading@i:	
  1218                           
  1219                           ; 2 bytes @ 0x7
  1220  003A                     	ds	2
  1221  003C                     ??_main:	
  1222                           
  1223                           ; 1 bytes @ 0x9
  1224  003C                     	ds	4
  1225  0040                     main@val:	
  1226                           
  1227                           ; 2 bytes @ 0xD
  1228  0040                     	ds	2
  1229  0042                     main@result:	
  1230                           
  1231                           ; 2 bytes @ 0xF
  1232  0042                     	ds	2
  1233  0044                     main@loopCount:	
  1234                           
  1235                           ; 2 bytes @ 0x11
  1236  0044                     	ds	2
  1237                           
  1238                           	psect	maintext
  1239  002D                     __pmaintext:	
  1240 ;;
  1241 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1242 ;;
  1243 ;; *************** function _main *****************
  1244 ;; Defined at:
  1245 ;;		line 126 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  result          2   15[BANK0 ] int 
  1250 ;;  loopCount       2   17[BANK0 ] int 
  1251 ;;  val             2   13[BANK0 ] int 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : B1F/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1261 ;;      Params:         0       0       0       0
  1262 ;;      Locals:         0       6       0       0
  1263 ;;      Temps:          0       4       0       0
  1264 ;;      Totals:         0      10       0       0
  1265 ;;Total ram usage:       10 bytes
  1266 ;; Hardware stack levels required when called:    7
  1267 ;; This function calls:
  1268 ;;		_TMR1_StopTimer
  1269 ;;		_initialize
  1270 ;;		_resetTimer
  1271 ;;		_storeWordForTransfer
  1272 ;;		_takeReading
  1273 ;; This function is called by:
  1274 ;;		Startup code after reset
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _main
  1280  002D                     _main:	
  1281                           
  1282                           ;main.c: 129: initialize();
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1286  002D  207E               	fcall	_initialize
  1287                           
  1288                           ;main.c: 131: resetTimer();
  1289  002E  21BF               	fcall	_resetTimer
  1290                           
  1291                           ;main.c: 132: int val = 0;
  1292  002F  0020               	movlb	0	; select bank0
  1293  0030  01C0               	clrf	main@val
  1294  0031  01C1               	clrf	main@val+1
  1295                           
  1296                           ;main.c: 134: PINGDriverStatus.bufferEmpty = 1;
  1297  0032  1432               	bsf	_PINGDriverStatus,0
  1298                           
  1299                           ;main.c: 135: PINGDriverStatus.takingReading = 0;
  1300  0033  10B2               	bcf	_PINGDriverStatus,1
  1301  0034  286B               	goto	L1
  1302  0035                     l1376:	
  1303                           ;main.c: 151: {
  1304                           ;main.c: 153: continue;
  1305                           
  1306                           ;main.c: 146: {
  1307                           ;main.c: 147: continue;
  1308                           
  1309                           ;main.c: 141: maxTimerCount = 0x0000;
  1310                           
  1311                           ;main.c: 140: minTimerCount = 0xFFFF;
  1312                           
  1313                           ;main.c: 138: int loopCount = 1<<1;
  1314                           
  1315                           ;main.c: 137: summedTimerCount = 0x00000000;
  1316                           
  1317                           
  1318                           ;main.c: 159: {
  1319                           ;main.c: 160: takeReading();
  1320  0035  20E0               	fcall	_takeReading
  1321                           
  1322                           ;main.c: 161: loopCount--;
  1323  0036  30FF               	movlw	255
  1324  0037  0020               	movlb	0	; select bank0
  1325  0038  07C4               	addwf	main@loopCount,f
  1326  0039  30FF               	movlw	255
  1327  003A  3DC5               	addwfc	main@loopCount+1,f
  1328  003B                     l1368:	
  1329                           ;main.c: 143: while(1)
  1330                           
  1331                           ;main.c: 162: }
  1332                           
  1333                           
  1334                           ;main.c: 144: {
  1335                           ;main.c: 145: if (PINGDriverStatus.bufferEmpty == 0)
  1336  003B  1832               	btfsc	_PINGDriverStatus,0
  1337                           
  1338                           ;main.c: 148: }
  1339                           ;main.c: 150: if (PINGDriverStatus.takingReading)
  1340  003C  18B2               	btfsc	_PINGDriverStatus,1
  1341  003D  283B               	goto	l1368
  1342                           
  1343                           ;main.c: 154: }
  1344                           ;main.c: 158: if (loopCount > 0)
  1345  003E  0845               	movf	main@loopCount+1,w
  1346  003F  3A80               	xorlw	128
  1347  0040  00BC               	movwf	??_main
  1348  0041  3080               	movlw	128
  1349  0042  023C               	subwf	??_main,w
  1350  0043  1D03               	skipz
  1351  0044  2847               	goto	u475
  1352  0045  3001               	movlw	1
  1353  0046  0244               	subwf	main@loopCount,w
  1354  0047                     u475:	
  1355  0047  1803               	btfsc	3,0
  1356  0048  2835               	goto	l1376
  1357                           
  1358                           ;main.c: 163: else
  1359                           ;main.c: 164: {
  1360                           ;main.c: 167: summedTimerCount = summedTimerCount >> 1;
  1361  0049  0020               	movlb	0	; select bank0
  1362  004A  082C               	movf	_summedTimerCount,w
  1363  004B  00BC               	movwf	??_main
  1364  004C  082D               	movf	_summedTimerCount+1,w
  1365  004D  00BD               	movwf	??_main+1
  1366  004E  082E               	movf	_summedTimerCount+2,w
  1367  004F  00BE               	movwf	??_main+2
  1368  0050  082F               	movf	_summedTimerCount+3,w
  1369  0051  00BF               	movwf	??_main+3
  1370  0052  3001               	movlw	1
  1371  0053                     u485:	
  1372  0053  36BF               	lsrf	??_main+3,f
  1373  0054  0CBE               	rrf	??_main+2,f
  1374  0055  0CBD               	rrf	??_main+1,f
  1375  0056  0CBC               	rrf	??_main,f
  1376  0057  0B89               	decfsz	9,f
  1377  0058  2853               	goto	u485
  1378  0059  083F               	movf	??_main+3,w
  1379  005A  00AF               	movwf	_summedTimerCount+3
  1380  005B  083E               	movf	??_main+2,w
  1381  005C  00AE               	movwf	_summedTimerCount+2
  1382  005D  083D               	movf	??_main+1,w
  1383  005E  00AD               	movwf	_summedTimerCount+1
  1384  005F  083C               	movf	??_main,w
  1385  0060  00AC               	movwf	_summedTimerCount
  1386                           
  1387                           ;main.c: 168: int result = storeWordForTransfer(summedTimerCount&0xFFFF);
  1388  0061  082D               	movf	_summedTimerCount+1,w
  1389  0062  00B6               	movwf	storeWordForTransfer@data+1
  1390  0063  082C               	movf	_summedTimerCount,w
  1391  0064  00B5               	movwf	storeWordForTransfer@data
  1392  0065  20B1               	fcall	_storeWordForTransfer
  1393  0066  0020               	movlb	0	; select bank0
  1394  0067  0836               	movf	?_storeWordForTransfer+1,w
  1395  0068  00C3               	movwf	main@result+1
  1396  0069  0835               	movf	?_storeWordForTransfer,w
  1397  006A  00C2               	movwf	main@result
  1398  006B                     L1:	
  1399                           
  1400                           ;main.c: 170: summedTimerCount = 0x00000000;
  1401  006B  3000               	movlw	0
  1402  006C  00AF               	movwf	_summedTimerCount+3
  1403  006D  3000               	movlw	0
  1404  006E  00AE               	movwf	_summedTimerCount+2
  1405  006F  3000               	movlw	0
  1406  0070  00AD               	movwf	_summedTimerCount+1
  1407  0071  3000               	movlw	0
  1408  0072  00AC               	movwf	_summedTimerCount
  1409                           
  1410                           ;main.c: 171: loopCount = 1<<1;
  1411  0073  3002               	movlw	2
  1412  0074  00C4               	movwf	main@loopCount
  1413  0075  3000               	movlw	0
  1414  0076  00C5               	movwf	main@loopCount+1
  1415                           
  1416                           ;main.c: 172: minTimerCount = 0xFFFF;
  1417  0077  30FF               	movlw	255
  1418  0078  00F4               	movwf	_minTimerCount
  1419  0079  30FF               	movlw	255
  1420  007A  00F5               	movwf	_minTimerCount+1
  1421                           
  1422                           ;main.c: 173: maxTimerCount = 0x0000;
  1423  007B  01F2               	clrf	_maxTimerCount
  1424  007C  01F3               	clrf	_maxTimerCount+1
  1425  007D  283B               	goto	l1368
  1426  007E                     __end_of_main:	
  1427                           ;main.c: 174: }
  1428                           ;main.c: 175: }
  1429                           ;main.c: 176: TMR1_StopTimer();
  1430                           
  1431                           
  1432                           	psect	text1
  1433  00E0                     __ptext1:	
  1434 ;; *************** function _takeReading *****************
  1435 ;; Defined at:
  1436 ;;		line 103 in file "main.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  i               2    7[BANK0 ] int 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0, pclath, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1450 ;;      Params:         0       0       0       0
  1451 ;;      Locals:         0       2       0       0
  1452 ;;      Temps:          0       1       0       0
  1453 ;;      Totals:         0       3       0       0
  1454 ;;Total ram usage:        3 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    6
  1457 ;; This function calls:
  1458 ;;		_globalInterruptDisable
  1459 ;;		_resetTimer
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           
  1466                           ;psect for function _takeReading
  1467  00E0                     _takeReading:	
  1468                           
  1469                           ;main.c: 106: globalInterruptDisable();
  1470                           
  1471                           ;incstack = 0
  1472                           ; Regs used in _takeReading: [wreg+status,2+status,0+pclath+cstack]
  1473  00E0  21E2               	fcall	_globalInterruptDisable
  1474                           
  1475                           ;main.c: 108: RA4 = 0;
  1476  00E1  0020               	movlb	0	; select bank0
  1477  00E2  120C               	bcf	12,4	;volatile
  1478                           
  1479                           ;main.c: 109: TRISA4 = 0;
  1480  00E3  0021               	movlb	1	; select bank1
  1481  00E4  120C               	bcf	12,4	;volatile
  1482                           
  1483                           ;main.c: 110: RA4 = 1;
  1484  00E5  0020               	movlb	0	; select bank0
  1485  00E6  160C               	bsf	12,4	;volatile
  1486                           
  1487                           ;main.c: 113: for (int i=0; i<1; i++)
  1488  00E7  01BA               	clrf	takeReading@i
  1489  00E8  01BB               	clrf	takeReading@i+1
  1490  00E9  083B               	movf	takeReading@i+1,w
  1491  00EA  3A80               	xorlw	128
  1492  00EB  00B9               	movwf	??_takeReading
  1493  00EC  3080               	movlw	128
  1494  00ED  0239               	subwf	??_takeReading,w
  1495  00EE  1D03               	skipz
  1496  00EF  28F2               	goto	u425
  1497  00F0  3001               	movlw	1
  1498  00F1  023A               	subwf	takeReading@i,w
  1499  00F2                     u425:	
  1500  00F2  1803               	btfsc	3,0
  1501  00F3  2904               	goto	l79
  1502  00F4                     l1324:	
  1503                           
  1504                           ;main.c: 114: {
  1505  00F4  3001               	movlw	1
  1506  00F5  0020               	movlb	0	; select bank0
  1507  00F6  07BA               	addwf	takeReading@i,f
  1508  00F7  3000               	movlw	0
  1509  00F8  3DBB               	addwfc	takeReading@i+1,f
  1510  00F9  083B               	movf	takeReading@i+1,w
  1511  00FA  3A80               	xorlw	128
  1512  00FB  00B9               	movwf	??_takeReading
  1513  00FC  3080               	movlw	128
  1514  00FD  0239               	subwf	??_takeReading,w
  1515  00FE  1D03               	skipz
  1516  00FF  2902               	goto	u435
  1517  0100  3001               	movlw	1
  1518  0101  023A               	subwf	takeReading@i,w
  1519  0102                     u435:	
  1520  0102  1C03               	skipc
  1521  0103  28F4               	goto	l1324
  1522  0104                     l79:	
  1523                           
  1524                           ;main.c: 116: }
  1525                           ;main.c: 117: RA4 = 0;
  1526  0104  0020               	movlb	0	; select bank0
  1527  0105  120C               	bcf	12,4	;volatile
  1528                           
  1529                           ;main.c: 118: TRISA4 = 1;
  1530  0106  0021               	movlb	1	; select bank1
  1531  0107  160C               	bsf	12,4	;volatile
  1532                           
  1533                           ;main.c: 119: resetTimer();
  1534  0108  21BF               	fcall	_resetTimer
  1535                           
  1536                           ;main.c: 120: PINGDriverStatus.takingReading = 1;
  1537  0109  0020               	movlb	0	; select bank0
  1538  010A  14B2               	bsf	_PINGDriverStatus,1
  1539  010B  0008               	return
  1540  010C                     __end_of_takeReading:	
  1541                           
  1542                           	psect	text2
  1543  01BF                     __ptext2:	
  1544 ;; *************** function _resetTimer *****************
  1545 ;; Defined at:
  1546 ;;		line 40 in file "timers.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      void 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0, pclath, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1560 ;;      Params:         0       0       0       0
  1561 ;;      Locals:         0       0       0       0
  1562 ;;      Temps:          0       0       0       0
  1563 ;;      Totals:         0       0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    5
  1567 ;; This function calls:
  1568 ;;		_TMR1_StartTimer
  1569 ;;		_TMR1_WriteTimer
  1570 ;;		_globalInterruptEnable
  1571 ;; This function is called by:
  1572 ;;		_takeReading
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function _resetTimer
  1579  01BF                     _resetTimer:	
  1580                           
  1581                           ;timers.c: 42: TMR1_WriteTimer(0);
  1582                           
  1583                           ;incstack = 0
  1584                           ; Regs used in _resetTimer: [wreg+status,2+status,0+pclath+cstack]
  1585  01BF  3000               	movlw	0
  1586  01C0  0020               	movlb	0	; select bank0
  1587  01C1  00B3               	movwf	TMR1_WriteTimer@value
  1588  01C2  00B4               	movwf	TMR1_WriteTimer@value+1
  1589  01C3  2191               	fcall	_TMR1_WriteTimer
  1590                           
  1591                           ;timers.c: 43: globalInterruptEnable();
  1592  01C4  21D4               	fcall	_globalInterruptEnable
  1593                           
  1594                           ;timers.c: 44: TMR1_StartTimer();
  1595  01C5  21ED               	fcall	_TMR1_StartTimer
  1596  01C6  0008               	return
  1597  01C7                     __end_of_resetTimer:	
  1598                           
  1599                           	psect	text3
  1600  0191                     __ptext3:	
  1601 ;; *************** function _TMR1_WriteTimer *****************
  1602 ;; Defined at:
  1603 ;;		line 26 in file "timers.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  value           2    0[BANK0 ] int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;  state           2    4[BANK0 ] int 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, status,0, pclath, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1617 ;;      Params:         0       2       0       0
  1618 ;;      Locals:         0       2       0       0
  1619 ;;      Temps:          0       2       0       0
  1620 ;;      Totals:         0       6       0       0
  1621 ;;Total ram usage:        6 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    4
  1624 ;; This function calls:
  1625 ;;		_TMR1_StopTimer
  1626 ;; This function is called by:
  1627 ;;		_resetTimer
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           
  1632                           ;psect for function _TMR1_WriteTimer
  1633  0191                     _TMR1_WriteTimer:	
  1634                           
  1635                           ;timers.c: 28: int state = TMR1ON;
  1636                           
  1637                           ;incstack = 0
  1638                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2+status,0+pclath+cstack]
  1639  0191  1003               	clrc
  1640  0192  0020               	movlb	0	; select bank0
  1641  0193  181B               	btfsc	27,0	;volatile
  1642  0194  1403               	setc
  1643  0195  3000               	movlw	0
  1644  0196  3D09               	addwfc	9,w
  1645  0197  00B5               	movwf	??_TMR1_WriteTimer
  1646  0198  01B6               	clrf	??_TMR1_WriteTimer+1
  1647  0199  0835               	movf	??_TMR1_WriteTimer,w
  1648  019A  00B7               	movwf	TMR1_WriteTimer@state
  1649  019B  0836               	movf	??_TMR1_WriteTimer+1,w
  1650  019C  00B8               	movwf	TMR1_WriteTimer@state+1
  1651                           
  1652                           ;timers.c: 29: TMR1_StopTimer();
  1653  019D  21EA               	fcall	_TMR1_StopTimer
  1654                           
  1655                           ;timers.c: 30: TMR1H = value>>8;
  1656  019E  0020               	movlb	0	; select bank0
  1657  019F  0834               	movf	TMR1_WriteTimer@value+1,w
  1658  01A0  009A               	movwf	26	;volatile
  1659                           
  1660                           ;timers.c: 31: TMR1L = value&0xFF;
  1661  01A1  0833               	movf	TMR1_WriteTimer@value,w
  1662  01A2  0099               	movwf	25	;volatile
  1663                           
  1664                           ;timers.c: 32: TMR1ON = state;
  1665  01A3  1C37               	btfss	TMR1_WriteTimer@state,0
  1666  01A4  29A8               	goto	u390
  1667  01A5  0020               	movlb	0	; select bank0
  1668  01A6  141B               	bsf	27,0	;volatile
  1669  01A7  0008               	return
  1670  01A8                     u390:	
  1671  01A8  0020               	movlb	0	; select bank0
  1672  01A9  101B               	bcf	27,0	;volatile
  1673  01AA  0008               	return
  1674  01AB                     __end_of_TMR1_WriteTimer:	
  1675                           
  1676                           	psect	text4
  1677  01EA                     __ptext4:	
  1678 ;; *************** function _TMR1_StopTimer *****************
  1679 ;; Defined at:
  1680 ;;		line 21 in file "timers.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  1    wreg      void 
  1687 ;; Registers used:
  1688 ;;		None
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1694 ;;      Params:         0       0       0       0
  1695 ;;      Locals:         0       0       0       0
  1696 ;;      Temps:          0       0       0       0
  1697 ;;      Totals:         0       0       0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    3
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;;		_TMR1_WriteTimer
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _TMR1_StopTimer
  1711  01EA                     _TMR1_StopTimer:	
  1712                           
  1713                           ;timers.c: 23: TMR1ON = 0;
  1714                           
  1715                           ;incstack = 0
  1716                           ; Regs used in _TMR1_StopTimer: []
  1717  01EA  0020               	movlb	0	; select bank0
  1718  01EB  101B               	bcf	27,0	;volatile
  1719  01EC  0008               	return
  1720  01ED                     __end_of_TMR1_StopTimer:	
  1721                           
  1722                           	psect	text5
  1723  01ED                     __ptext5:	
  1724 ;; *************** function _TMR1_StartTimer *****************
  1725 ;; Defined at:
  1726 ;;		line 35 in file "timers.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;		None
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		None
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1740 ;;      Params:         0       0       0       0
  1741 ;;      Locals:         0       0       0       0
  1742 ;;      Temps:          0       0       0       0
  1743 ;;      Totals:         0       0       0       0
  1744 ;;Total ram usage:        0 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    3
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_resetTimer
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function _TMR1_StartTimer
  1756  01ED                     _TMR1_StartTimer:	
  1757                           
  1758                           ;timers.c: 37: TMR1ON = 1;
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _TMR1_StartTimer: []
  1762  01ED  0020               	movlb	0	; select bank0
  1763  01EE  141B               	bsf	27,0	;volatile
  1764  01EF  0008               	return
  1765  01F0                     __end_of_TMR1_StartTimer:	
  1766                           
  1767                           	psect	text6
  1768  00B1                     __ptext6:	
  1769 ;; *************** function _storeWordForTransfer *****************
  1770 ;; Defined at:
  1771 ;;		line 52 in file "spi.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  data            2    2[BANK0 ] unsigned int 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  buf             2    6[BANK0 ] short 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  2    2[BANK0 ] int 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1785 ;;      Params:         0       2       0       0
  1786 ;;      Locals:         0       2       0       0
  1787 ;;      Temps:          0       2       0       0
  1788 ;;      Totals:         0       6       0       0
  1789 ;;Total ram usage:        6 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    4
  1792 ;; This function calls:
  1793 ;;		_storeByteForTransfer
  1794 ;; This function is called by:
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           
  1800                           ;psect for function _storeWordForTransfer
  1801  00B1                     _storeWordForTransfer:	
  1802                           
  1803                           ;spi.c: 56: if (bufferCount == 6)
  1804                           
  1805                           ;incstack = 0
  1806                           ; Regs used in _storeWordForTransfer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1807  00B1  3006               	movlw	6
  1808  00B2  0670               	xorwf	_bufferCount,w
  1809  00B3  0471               	iorwf	_bufferCount+1,w
  1810  00B4  1D03               	btfss	3,2
  1811  00B5  28BC               	goto	l1336
  1812                           
  1813                           ;spi.c: 57: {
  1814                           ;spi.c: 58: return -1;
  1815  00B6  30FF               	movlw	255
  1816  00B7  0020               	movlb	0	; select bank0
  1817  00B8  00B5               	movwf	?_storeWordForTransfer
  1818  00B9  30FF               	movlw	255
  1819  00BA  00B6               	movwf	?_storeWordForTransfer+1
  1820  00BB  0008               	return
  1821  00BC                     l1336:	
  1822                           
  1823                           ;spi.c: 59: }
  1824                           ;spi.c: 60: short buf = data & 0xFF;
  1825  00BC  30FF               	movlw	255
  1826  00BD  0020               	movlb	0	; select bank0
  1827  00BE  0535               	andwf	storeWordForTransfer@data,w
  1828  00BF  00B9               	movwf	storeWordForTransfer@buf
  1829  00C0  3000               	movlw	0
  1830  00C1  0536               	andwf	storeWordForTransfer@data+1,w
  1831  00C2  00BA               	movwf	storeWordForTransfer@buf+1
  1832                           
  1833                           ;spi.c: 61: storeByteForTransfer(buf);
  1834  00C3  083A               	movf	storeWordForTransfer@buf+1,w
  1835  00C4  00B4               	movwf	storeByteForTransfer@data+1
  1836  00C5  0839               	movf	storeWordForTransfer@buf,w
  1837  00C6  00B3               	movwf	storeByteForTransfer@data
  1838  00C7  2176               	fcall	_storeByteForTransfer
  1839                           
  1840                           ;spi.c: 62: buf = (data >> 8) & 0xFF;
  1841  00C8  0020               	movlb	0	; select bank0
  1842  00C9  0836               	movf	storeWordForTransfer@data+1,w
  1843  00CA  00B8               	movwf	??_storeWordForTransfer+1
  1844  00CB  0835               	movf	storeWordForTransfer@data,w
  1845  00CC  00B7               	movwf	??_storeWordForTransfer
  1846  00CD  0838               	movf	??_storeWordForTransfer+1,w
  1847  00CE  00B7               	movwf	??_storeWordForTransfer
  1848  00CF  01B8               	clrf	??_storeWordForTransfer+1
  1849  00D0  30FF               	movlw	255
  1850  00D1  0537               	andwf	??_storeWordForTransfer,w
  1851  00D2  00B9               	movwf	storeWordForTransfer@buf
  1852  00D3  3000               	movlw	0
  1853  00D4  0538               	andwf	??_storeWordForTransfer+1,w
  1854  00D5  00BA               	movwf	storeWordForTransfer@buf+1
  1855                           
  1856                           ;spi.c: 63: storeByteForTransfer(buf);
  1857  00D6  083A               	movf	storeWordForTransfer@buf+1,w
  1858  00D7  00B4               	movwf	storeByteForTransfer@data+1
  1859  00D8  0839               	movf	storeWordForTransfer@buf,w
  1860  00D9  00B3               	movwf	storeByteForTransfer@data
  1861  00DA  2176               	fcall	_storeByteForTransfer
  1862                           
  1863                           ;spi.c: 64: PINGDriverStatus.bufferEmpty = 0;
  1864  00DB  0020               	movlb	0	; select bank0
  1865  00DC  1032               	bcf	_PINGDriverStatus,0
  1866                           
  1867                           ;spi.c: 65: return 0;
  1868  00DD  01B5               	clrf	?_storeWordForTransfer
  1869  00DE  01B6               	clrf	?_storeWordForTransfer+1
  1870  00DF  0008               	return
  1871  00E0                     __end_of_storeWordForTransfer:	
  1872                           
  1873                           	psect	text7
  1874  0176                     __ptext7:	
  1875 ;; *************** function _storeByteForTransfer *****************
  1876 ;; Defined at:
  1877 ;;		line 41 in file "spi.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  data            2    0[BANK0 ] unsigned short 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1891 ;;      Params:         0       2       0       0
  1892 ;;      Locals:         0       0       0       0
  1893 ;;      Temps:          0       0       0       0
  1894 ;;      Totals:         0       2       0       0
  1895 ;;Total ram usage:        2 bytes
  1896 ;; Hardware stack levels used:    1
  1897 ;; Hardware stack levels required when called:    3
  1898 ;; This function calls:
  1899 ;;		Nothing
  1900 ;; This function is called by:
  1901 ;;		_storeWordForTransfer
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           
  1906                           ;psect for function _storeByteForTransfer
  1907  0176                     _storeByteForTransfer:	
  1908                           
  1909                           ;spi.c: 43: dataBuffer[bufferCount] = data;
  1910                           
  1911                           ;incstack = 0
  1912                           ; Regs used in _storeByteForTransfer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1913  0176  3570               	lslf	_bufferCount,w
  1914  0177  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  1915  0178  0086               	movwf	6
  1916  0179  0187               	clrf	7
  1917  017A  0020               	movlb	0	; select bank0
  1918  017B  0833               	movf	storeByteForTransfer@data,w
  1919  017C  3FC0               	movwi [0]fsr1
  1920  017D  0834               	movf	storeByteForTransfer@data+1,w
  1921  017E  3FC1               	movwi [1]fsr1
  1922                           
  1923                           ;spi.c: 44: bufferCount++;
  1924  017F  3001               	movlw	1
  1925  0180  07F0               	addwf	_bufferCount,f
  1926  0181  3000               	movlw	0
  1927  0182  3DF1               	addwfc	_bufferCount+1,f
  1928                           
  1929                           ;spi.c: 45: if (bufferCount == 6)
  1930  0183  3006               	movlw	6
  1931  0184  0670               	xorwf	_bufferCount,w
  1932  0185  0471               	iorwf	_bufferCount+1,w
  1933  0186  1D03               	btfss	3,2
  1934  0187  0008               	return
  1935                           
  1936                           ;spi.c: 46: {
  1937                           ;spi.c: 48: SSP1BUF = dataBuffer[bufferCount-1];
  1938  0188  3570               	lslf	_bufferCount,w
  1939  0189  3EFE               	addlw	254
  1940  018A  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  1941  018B  0086               	movwf	6
  1942  018C  0187               	clrf	7
  1943  018D  0801               	movf	1,w
  1944  018E  0024               	movlb	4	; select bank4
  1945  018F  0091               	movwf	17	;volatile
  1946  0190  0008               	return
  1947  0191                     __end_of_storeByteForTransfer:	
  1948                           
  1949                           	psect	text8
  1950  007E                     __ptext8:	
  1951 ;; *************** function _initialize *****************
  1952 ;; Defined at:
  1953 ;;		line 59 in file "main.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;		None
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1967 ;;      Params:         0       0       0       0
  1968 ;;      Locals:         0       0       0       0
  1969 ;;      Temps:          0       0       0       0
  1970 ;;      Totals:         0       0       0       0
  1971 ;;Total ram usage:        0 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    6
  1974 ;; This function calls:
  1975 ;;		_globalInterruptDisable
  1976 ;;		_globalInterruptEnable
  1977 ;;		_initializeInterrupts
  1978 ;;		_initializeSpi
  1979 ;;		_intializeTimers
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           
  1986                           ;psect for function _initialize
  1987  007E                     _initialize:	
  1988                           
  1989                           ;main.c: 63: OSCFRQ = 0x6;
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1993  007E  3006               	movlw	6
  1994  007F  0032               	movlb	18	; select bank18
  1995  0080  009F               	movwf	31	;volatile
  1996                           
  1997                           ;main.c: 64: OSCCON1 = 0x0;
  1998  0081  0199               	clrf	25	;volatile
  1999                           
  2000                           ;main.c: 65: OSCCON2 = 0x0;
  2001  0082  019A               	clrf	26	;volatile
  2002                           
  2003                           ;main.c: 66: OSCCON3 = 0x0;
  2004  0083  019B               	clrf	27	;volatile
  2005                           
  2006                           ;main.c: 67: OSCEN = 0x64;
  2007  0084  3064               	movlw	100
  2008  0085  009D               	movwf	29	;volatile
  2009                           
  2010                           ;main.c: 68: INTCON = 0x0;
  2011  0086  018B               	clrf	11	;volatile
  2012                           
  2013                           ;main.c: 71: TRISA = 0x1F;
  2014  0087  301F               	movlw	31
  2015  0088  0021               	movlb	1	; select bank1
  2016  0089  008C               	movwf	12	;volatile
  2017                           
  2018                           ;main.c: 72: ANSELA = 0x00;
  2019  008A  0023               	movlb	3	; select bank3
  2020  008B  018C               	clrf	12	;volatile
  2021                           
  2022                           ;main.c: 73: WPUA = 0x00;
  2023  008C  0024               	movlb	4	; select bank4
  2024  008D  018C               	clrf	12	;volatile
  2025                           
  2026                           ;main.c: 74: ODCONA = 0x00;
  2027  008E  0025               	movlb	5	; select bank5
  2028  008F  018C               	clrf	12	;volatile
  2029                           
  2030                           ;main.c: 75: SLRCONA = 0x00;
  2031  0090  0026               	movlb	6	; select bank6
  2032  0091  018C               	clrf	12	;volatile
  2033                           
  2034                           ;main.c: 76: INLVLA = 0x00;
  2035  0092  0027               	movlb	7	; select bank7
  2036  0093  018C               	clrf	12	;volatile
  2037                           
  2038                           ;main.c: 79: globalInterruptDisable();
  2039  0094  21E2               	fcall	_globalInterruptDisable
  2040                           
  2041                           ;main.c: 80: PPSLOCK = 0x55;
  2042  0095  3055               	movlw	85
  2043  0096  003C               	movlb	28	; select bank28
  2044  0097  008F               	movwf	15	;volatile
  2045                           
  2046                           ;main.c: 81: PPSLOCK = 0xAA;
  2047  0098  30AA               	movlw	170
  2048  0099  008F               	movwf	15	;volatile
  2049                           
  2050                           ;main.c: 82: PPSLOCK = 0x00;
  2051  009A  018F               	clrf	15	;volatile
  2052                           
  2053                           ;main.c: 84: SSP1CLKPPS = 0x1;
  2054  009B  3001               	movlw	1
  2055  009C  00A0               	movwf	32	;volatile
  2056                           
  2057                           ;main.c: 85: SSP1DATPPS = 0x2;
  2058  009D  3002               	movlw	2
  2059  009E  00A1               	movwf	33	;volatile
  2060                           
  2061                           ;main.c: 86: SSP1SSPPS = 0x0;
  2062  009F  01A2               	clrf	34	;volatile
  2063                           
  2064                           ;main.c: 87: RA5PPS = 0x19;
  2065  00A0  3019               	movlw	25
  2066  00A1  003D               	movlb	29	; select bank29
  2067  00A2  0095               	movwf	21	;volatile
  2068                           
  2069                           ;main.c: 88: T1GPPS = 0x4;
  2070  00A3  3004               	movlw	4
  2071  00A4  003C               	movlb	28	; select bank28
  2072  00A5  0093               	movwf	19	;volatile
  2073                           
  2074                           ;main.c: 91: PPSLOCK = 0x55;
  2075  00A6  3055               	movlw	85
  2076  00A7  008F               	movwf	15	;volatile
  2077                           
  2078                           ;main.c: 92: PPSLOCK = 0xAA;
  2079  00A8  30AA               	movlw	170
  2080  00A9  008F               	movwf	15	;volatile
  2081                           
  2082                           ;main.c: 93: PPSLOCK = 0x1;
  2083  00AA  3001               	movlw	1
  2084  00AB  008F               	movwf	15	;volatile
  2085                           
  2086                           ;main.c: 95: globalInterruptEnable();
  2087  00AC  21D4               	fcall	_globalInterruptEnable
  2088                           
  2089                           ;main.c: 96: intializeTimers();
  2090  00AD  21C7               	fcall	_intializeTimers
  2091                           
  2092                           ;main.c: 97: initializeInterrupts();
  2093  00AE  21AB               	fcall	_initializeInterrupts
  2094                           
  2095                           ;main.c: 98: initializeSpi();
  2096  00AF  2134               	fcall	_initializeSpi
  2097  00B0  0008               	return
  2098  00B1                     __end_of_initialize:	
  2099                           
  2100                           	psect	text9
  2101  01C7                     __ptext9:	
  2102 ;; *************** function _intializeTimers *****************
  2103 ;; Defined at:
  2104 ;;		line 9 in file "timers.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;		None
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2118 ;;      Params:         0       0       0       0
  2119 ;;      Locals:         0       0       0       0
  2120 ;;      Temps:          0       0       0       0
  2121 ;;      Totals:         0       0       0       0
  2122 ;;Total ram usage:        0 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    3
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_initialize
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           
  2133                           ;psect for function _intializeTimers
  2134  01C7                     _intializeTimers:	
  2135                           
  2136                           ;timers.c: 12: T1CON = 0x0C;
  2137                           
  2138                           ;incstack = 0
  2139                           ; Regs used in _intializeTimers: [wreg]
  2140  01C7  300C               	movlw	12
  2141  01C8  0020               	movlb	0	; select bank0
  2142  01C9  009B               	movwf	27	;volatile
  2143                           
  2144                           ;timers.c: 15: T1GCON = 0xC0;
  2145  01CA  30C0               	movlw	192
  2146  01CB  009C               	movwf	28	;volatile
  2147                           
  2148                           ;timers.c: 18: TMR1ON = 1;
  2149  01CC  141B               	bsf	27,0	;volatile
  2150  01CD  0008               	return
  2151  01CE                     __end_of_intializeTimers:	
  2152                           
  2153                           	psect	text10
  2154  0134                     __ptext10:	
  2155 ;; *************** function _initializeSpi *****************
  2156 ;; Defined at:
  2157 ;;		line 8 in file "spi.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  i               2    1[BANK0 ] int 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2171 ;;      Params:         0       0       0       0
  2172 ;;      Locals:         0       2       0       0
  2173 ;;      Temps:          0       1       0       0
  2174 ;;      Totals:         0       3       0       0
  2175 ;;Total ram usage:        3 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    3
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_initialize
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _initializeSpi
  2187  0134                     _initializeSpi:	
  2188                           
  2189                           ;spi.c: 11: SSP1CON1 = 0x0;
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in _initializeSpi: [wreg+fsr1l+fsr1h+status,2+status,0]
  2193  0134  0024               	movlb	4	; select bank4
  2194  0135  0195               	clrf	21	;volatile
  2195                           
  2196                           ;spi.c: 12: SSP1STAT = 0x0;
  2197  0136  0194               	clrf	20	;volatile
  2198                           
  2199                           ;spi.c: 13: SSP1CON1bits.SSPM = 0x4;
  2200  0137  0815               	movf	21,w	;volatile
  2201  0138  39F0               	andlw	-16
  2202  0139  3804               	iorlw	4
  2203  013A  0095               	movwf	21	;volatile
  2204                           
  2205                           ;spi.c: 14: SSP1CON3 = 0x0;
  2206  013B  0197               	clrf	23	;volatile
  2207                           
  2208                           ;spi.c: 15: SSP1CON1bits.SSPEN = 0x1;
  2209  013C  1695               	bsf	21,5	;volatile
  2210                           
  2211                           ;spi.c: 18: bufferCount = 0x0;
  2212  013D  01F0               	clrf	_bufferCount
  2213  013E  01F1               	clrf	_bufferCount+1
  2214                           
  2215                           ;spi.c: 19: for (int i=0; i<6; i++)
  2216  013F  0020               	movlb	0	; select bank0
  2217  0140  01B4               	clrf	initializeSpi@i
  2218  0141  01B5               	clrf	initializeSpi@i+1
  2219  0142                     L2:	
  2220  0142  0835               	movf	initializeSpi@i+1,w
  2221  0143  3A80               	xorlw	128
  2222  0144  00B3               	movwf	??_initializeSpi
  2223  0145  3080               	movlw	128
  2224  0146  0233               	subwf	??_initializeSpi,w
  2225  0147  1D03               	skipz
  2226  0148  294B               	goto	u225
  2227  0149  3006               	movlw	6
  2228  014A  0234               	subwf	initializeSpi@i,w
  2229  014B                     u225:	
  2230  014B  1803               	btfsc	3,0
  2231  014C  0008               	return
  2232                           
  2233                           ;spi.c: 20: {
  2234                           ;spi.c: 21: dataBuffer[i] = 0x0;
  2235  014D  0020               	movlb	0	; select bank0
  2236  014E  3534               	lslf	initializeSpi@i,w
  2237  014F  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  2238  0150  0086               	movwf	6
  2239  0151  0187               	clrf	7
  2240  0152  3000               	movlw	0
  2241  0153  3FC0               	movwi [0]fsr1
  2242  0154  3FC1               	movwi [1]fsr1
  2243  0155  3001               	movlw	1
  2244  0156  07B4               	addwf	initializeSpi@i,f
  2245  0157  3000               	movlw	0
  2246  0158  3DB5               	addwfc	initializeSpi@i+1,f
  2247  0159  2942               	goto	L2
  2248  015A                     __end_of_initializeSpi:	
  2249                           
  2250                           	psect	text11
  2251  01AB                     __ptext11:	
  2252 ;; *************** function _initializeInterrupts *****************
  2253 ;; Defined at:
  2254 ;;		line 6 in file "interrupts.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		status,2, status,0, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2268 ;;      Params:         0       0       0       0
  2269 ;;      Locals:         0       0       0       0
  2270 ;;      Temps:          0       0       0       0
  2271 ;;      Totals:         0       0       0       0
  2272 ;;Total ram usage:        0 bytes
  2273 ;; Hardware stack levels used:    1
  2274 ;; Hardware stack levels required when called:    5
  2275 ;; This function calls:
  2276 ;;		_clearAllFlags
  2277 ;;		_globalInterruptDisable
  2278 ;;		_globalInterruptEnable
  2279 ;;		_peripheralInterruptDisable
  2280 ;;		_peripheralInterruptEnable
  2281 ;; This function is called by:
  2282 ;;		_initialize
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _initializeInterrupts
  2288  01AB                     _initializeInterrupts:	
  2289                           
  2290                           ;interrupts.c: 8: globalInterruptDisable();
  2291                           
  2292                           ;incstack = 0
  2293                           ; Regs used in _initializeInterrupts: [status,2+status,0+pclath+cstack]
  2294  01AB  21E2               	fcall	_globalInterruptDisable
  2295                           
  2296                           ;interrupts.c: 9: peripheralInterruptDisable();
  2297  01AC  21F0               	fcall	_peripheralInterruptDisable
  2298                           
  2299                           ;interrupts.c: 10: clearAllFlags();
  2300  01AD  21D9               	fcall	_clearAllFlags
  2301                           
  2302                           ;interrupts.c: 13: TMR1GIE = 1;
  2303  01AE  0021               	movlb	1	; select bank1
  2304  01AF  1791               	bsf	17,7	;volatile
  2305                           
  2306                           ;interrupts.c: 14: TMR1IE = 1;
  2307  01B0  1411               	bsf	17,0	;volatile
  2308                           
  2309                           ;interrupts.c: 17: SSP1IE = 1;
  2310  01B1  1591               	bsf	17,3	;volatile
  2311                           
  2312                           ;interrupts.c: 19: globalInterruptEnable();
  2313  01B2  21D4               	fcall	_globalInterruptEnable
  2314                           
  2315                           ;interrupts.c: 20: peripheralInterruptEnable();
  2316  01B3  21DE               	fcall	_peripheralInterruptEnable
  2317  01B4  0008               	return
  2318  01B5                     __end_of_initializeInterrupts:	
  2319                           
  2320                           	psect	text12
  2321  01DE                     __ptext12:	
  2322 ;; *************** function _peripheralInterruptEnable *****************
  2323 ;; Defined at:
  2324 ;;		line 49 in file "interrupts.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;		None
  2327 ;; Auto vars:     Size  Location     Type
  2328 ;;		None
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		None
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2338 ;;      Params:         0       0       0       0
  2339 ;;      Locals:         0       0       0       0
  2340 ;;      Temps:          0       0       0       0
  2341 ;;      Totals:         0       0       0       0
  2342 ;;Total ram usage:        0 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    3
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_initializeInterrupts
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function _peripheralInterruptEnable
  2354  01DE                     _peripheralInterruptEnable:	
  2355                           
  2356                           ;interrupts.c: 52: PEIE = 1;
  2357                           
  2358                           ;incstack = 0
  2359                           ; Regs used in _peripheralInterruptEnable: []
  2360  01DE  170B               	bsf	11,6	;volatile
  2361                           
  2362                           ;interrupts.c: 53: IOCIE = 1;
  2363  01DF  0021               	movlb	1	; select bank1
  2364  01E0  1610               	bsf	16,4	;volatile
  2365  01E1  0008               	return
  2366  01E2                     __end_of_peripheralInterruptEnable:	
  2367                           
  2368                           	psect	text13
  2369  01F0                     __ptext13:	
  2370 ;; *************** function _peripheralInterruptDisable *****************
  2371 ;; Defined at:
  2372 ;;		line 44 in file "interrupts.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;		None
  2375 ;; Auto vars:     Size  Location     Type
  2376 ;;		None
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		None
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2386 ;;      Params:         0       0       0       0
  2387 ;;      Locals:         0       0       0       0
  2388 ;;      Temps:          0       0       0       0
  2389 ;;      Totals:         0       0       0       0
  2390 ;;Total ram usage:        0 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    3
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_initializeInterrupts
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function _peripheralInterruptDisable
  2402  01F0                     _peripheralInterruptDisable:	
  2403                           
  2404                           ;interrupts.c: 46: PEIE = 0;
  2405                           
  2406                           ;incstack = 0
  2407                           ; Regs used in _peripheralInterruptDisable: []
  2408  01F0  130B               	bcf	11,6	;volatile
  2409  01F1  0008               	return
  2410  01F2                     __end_of_peripheralInterruptDisable:	
  2411                           
  2412                           	psect	text14
  2413  01D4                     __ptext14:	
  2414 ;; *************** function _globalInterruptEnable *****************
  2415 ;; Defined at:
  2416 ;;		line 37 in file "interrupts.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		status,2, status,0, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2430 ;;      Params:         0       0       0       0
  2431 ;;      Locals:         0       0       0       0
  2432 ;;      Temps:          0       0       0       0
  2433 ;;      Totals:         0       0       0       0
  2434 ;;Total ram usage:        0 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    4
  2437 ;; This function calls:
  2438 ;;		_clearAllFlags
  2439 ;; This function is called by:
  2440 ;;		_initialize
  2441 ;;		_initializeInterrupts
  2442 ;;		_resetTimer
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function _globalInterruptEnable
  2448  01D4                     _globalInterruptEnable:	
  2449                           
  2450                           ;interrupts.c: 39: clearAllFlags();
  2451                           
  2452                           ;incstack = 0
  2453                           ; Regs used in _globalInterruptEnable: [status,2+status,0+pclath+cstack]
  2454  01D4  21D9               	fcall	_clearAllFlags
  2455                           
  2456                           ;interrupts.c: 40: TMR1GIE = 1;
  2457  01D5  0021               	movlb	1	; select bank1
  2458  01D6  1791               	bsf	17,7	;volatile
  2459                           
  2460                           ;interrupts.c: 41: GIE = 1;
  2461  01D7  178B               	bsf	11,7	;volatile
  2462  01D8  0008               	return
  2463  01D9                     __end_of_globalInterruptEnable:	
  2464                           
  2465                           	psect	text15
  2466  01D9                     __ptext15:	
  2467 ;; *************** function _clearAllFlags *****************
  2468 ;; Defined at:
  2469 ;;		line 24 in file "interrupts.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;		None
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		None
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2483 ;;      Params:         0       0       0       0
  2484 ;;      Locals:         0       0       0       0
  2485 ;;      Temps:          0       0       0       0
  2486 ;;      Totals:         0       0       0       0
  2487 ;;Total ram usage:        0 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    3
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_initializeInterrupts
  2494 ;;		_globalInterruptEnable
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _clearAllFlags
  2500  01D9                     _clearAllFlags:	
  2501                           
  2502                           ;interrupts.c: 26: TMR1GIF = 0;
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in _clearAllFlags: []
  2506  01D9  0020               	movlb	0	; select bank0
  2507  01DA  1391               	bcf	17,7	;volatile
  2508                           
  2509                           ;interrupts.c: 27: SSP1IF = 0;
  2510  01DB  1191               	bcf	17,3	;volatile
  2511                           
  2512                           ;interrupts.c: 28: TMR1IF = 0;
  2513  01DC  1011               	bcf	17,0	;volatile
  2514  01DD  0008               	return
  2515  01DE                     __end_of_clearAllFlags:	
  2516                           
  2517                           	psect	text16
  2518  01E2                     __ptext16:	
  2519 ;; *************** function _globalInterruptDisable *****************
  2520 ;; Defined at:
  2521 ;;		line 31 in file "interrupts.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;		None
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      void 
  2528 ;; Registers used:
  2529 ;;		None
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2535 ;;      Params:         0       0       0       0
  2536 ;;      Locals:         0       0       0       0
  2537 ;;      Temps:          0       0       0       0
  2538 ;;      Totals:         0       0       0       0
  2539 ;;Total ram usage:        0 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    3
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_initialize
  2546 ;;		_takeReading
  2547 ;;		_initializeInterrupts
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function _globalInterruptDisable
  2553  01E2                     _globalInterruptDisable:	
  2554                           
  2555                           ;interrupts.c: 33: TMR1GIE = 0;
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _globalInterruptDisable: []
  2559  01E2  0021               	movlb	1	; select bank1
  2560  01E3  1391               	bcf	17,7	;volatile
  2561                           
  2562                           ;interrupts.c: 34: GIE = 0;
  2563  01E4  138B               	bcf	11,7	;volatile
  2564  01E5  0008               	return
  2565  01E6                     __end_of_globalInterruptDisable:	
  2566                           
  2567                           	psect	intentry
  2568  0004                     __pintentry:	
  2569 ;; *************** function _interruptManager *****************
  2570 ;; Defined at:
  2571 ;;		line 56 in file "interrupts.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2585 ;;      Params:         0       0       0       0
  2586 ;;      Locals:         0       0       0       0
  2587 ;;      Temps:          1       0       0       0
  2588 ;;      Totals:         1       0       0       0
  2589 ;;Total ram usage:        1 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    2
  2592 ;; This function calls:
  2593 ;;		_spiInterrupt
  2594 ;;		_timer1GateInterrupt
  2595 ;; This function is called by:
  2596 ;;		Interrupt level 1
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600  0004                     _interruptManager:	
  2601                           
  2602                           ;incstack = 0
  2603                           ; Regs used in _interruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2604  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2605  0005  3180               	pagesel	$
  2606  0006  0020               	movlb	0	; select bank0
  2607  0007  087F               	movf	127,w
  2608  0008  00FD               	movwf	??_interruptManager
  2609                           
  2610                           ;interrupts.c: 58: if (TMR1GIE == 1 && TMR1GIF == 1)
  2611  0009  0021               	movlb	1	; select bank1
  2612  000A  1F91               	btfss	17,7	;volatile
  2613  000B  2810               	goto	i1l1198
  2614  000C  0020               	movlb	0	; select bank0
  2615  000D  1F91               	btfss	17,7	;volatile
  2616  000E  2810               	goto	i1l1198
  2617                           
  2618                           ;interrupts.c: 59: {
  2619                           ;interrupts.c: 61: timer1GateInterrupt();
  2620  000F  210C               	fcall	_timer1GateInterrupt
  2621  0010                     i1l1198:	
  2622                           
  2623                           ;interrupts.c: 62: }
  2624                           ;interrupts.c: 64: if (SSP1IE == 1 && SSP1IF == 1)
  2625  0010  0021               	movlb	1	; select bank1
  2626  0011  1D91               	btfss	17,3	;volatile
  2627  0012  2817               	goto	i1l151
  2628  0013  0020               	movlb	0	; select bank0
  2629  0014  1D91               	btfss	17,3	;volatile
  2630  0015  2817               	goto	i1l151
  2631                           
  2632                           ;interrupts.c: 65: {
  2633                           ;interrupts.c: 66: spiInterrupt();
  2634  0016  215A               	fcall	_spiInterrupt
  2635  0017                     i1l151:	
  2636  0017  087D               	movf	??_interruptManager,w
  2637  0018  0020               	movlb	0	; select bank0
  2638  0019  00FF               	movwf	127
  2639  001A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2640  001B  0009               	retfie
  2641  001C                     __end_of_interruptManager:	
  2642                           
  2643                           	psect	text18
  2644  010C                     __ptext18:	
  2645 ;; *************** function _timer1GateInterrupt *****************
  2646 ;; Defined at:
  2647 ;;		line 53 in file "timers.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  timerCount      2    4[COMMON] unsigned int 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2661 ;;      Params:         0       0       0       0
  2662 ;;      Locals:         2       0       0       0
  2663 ;;      Temps:          0       0       0       0
  2664 ;;      Totals:         2       0       0       0
  2665 ;;Total ram usage:        2 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    1
  2668 ;; This function calls:
  2669 ;;		_timer1Value
  2670 ;;		i1_globalInterruptDisable
  2671 ;; This function is called by:
  2672 ;;		_interruptManager
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           
  2677                           ;psect for function _timer1GateInterrupt
  2678  010C                     _timer1GateInterrupt:	
  2679                           
  2680                           ;timers.c: 55: globalInterruptDisable();
  2681                           
  2682                           ;incstack = 0
  2683                           ; Regs used in _timer1GateInterrupt: [wreg+status,2+status,0+pclath+cstack]
  2684  010C  21E6               	fcall	i1_globalInterruptDisable
  2685                           
  2686                           ;timers.c: 56: unsigned int timerCount = timer1Value();
  2687  010D  21B5               	fcall	_timer1Value
  2688  010E  0878               	movf	?_timer1Value+1,w
  2689  010F  00FC               	movwf	timer1GateInterrupt@timerCount+1
  2690  0110  0877               	movf	?_timer1Value,w
  2691  0111  00FB               	movwf	timer1GateInterrupt@timerCount
  2692                           
  2693                           ;timers.c: 57: summedTimerCount += timerCount;
  2694  0112  087B               	movf	timer1GateInterrupt@timerCount,w
  2695  0113  0020               	movlb	0	; select bank0
  2696  0114  07AC               	addwf	_summedTimerCount,f
  2697  0115  087C               	movf	timer1GateInterrupt@timerCount+1,w
  2698  0116  3DAD               	addwfc	_summedTimerCount+1,f
  2699  0117  3000               	movlw	0
  2700  0118  3DAE               	addwfc	_summedTimerCount+2,f
  2701  0119  3DAF               	addwfc	_summedTimerCount+3,f
  2702                           
  2703                           ;timers.c: 60: if (timerCount < minTimerCount)
  2704  011A  0875               	movf	_minTimerCount+1,w
  2705  011B  027C               	subwf	timer1GateInterrupt@timerCount+1,w
  2706  011C  1D03               	skipz
  2707  011D  2920               	goto	u28_25
  2708  011E  0874               	movf	_minTimerCount,w
  2709  011F  027B               	subwf	timer1GateInterrupt@timerCount,w
  2710  0120                     u28_25:	
  2711  0120  1803               	skipnc
  2712  0121  2926               	goto	i1l198
  2713                           
  2714                           ;timers.c: 61: {
  2715                           ;timers.c: 62: minTimerCount = timerCount;
  2716  0122  087C               	movf	timer1GateInterrupt@timerCount+1,w
  2717  0123  00F5               	movwf	_minTimerCount+1
  2718  0124  087B               	movf	timer1GateInterrupt@timerCount,w
  2719  0125  00F4               	movwf	_minTimerCount
  2720  0126                     i1l198:	
  2721                           
  2722                           ;timers.c: 63: }
  2723                           ;timers.c: 64: if (timerCount > maxTimerCount)
  2724  0126  087C               	movf	timer1GateInterrupt@timerCount+1,w
  2725  0127  0273               	subwf	_maxTimerCount+1,w
  2726  0128  1D03               	skipz
  2727  0129  292C               	goto	u29_25
  2728  012A  087B               	movf	timer1GateInterrupt@timerCount,w
  2729  012B  0272               	subwf	_maxTimerCount,w
  2730  012C                     u29_25:	
  2731  012C  1803               	skipnc
  2732  012D  2932               	goto	i1l1138
  2733                           
  2734                           ;timers.c: 65: {
  2735                           ;timers.c: 66: maxTimerCount = timerCount;
  2736  012E  087C               	movf	timer1GateInterrupt@timerCount+1,w
  2737  012F  00F3               	movwf	_maxTimerCount+1
  2738  0130  087B               	movf	timer1GateInterrupt@timerCount,w
  2739  0131  00F2               	movwf	_maxTimerCount
  2740  0132                     i1l1138:	
  2741                           
  2742                           ;timers.c: 67: }
  2743                           ;timers.c: 68: PINGDriverStatus.takingReading = 0;
  2744  0132  10B2               	bcf	_PINGDriverStatus,1
  2745  0133  0008               	return
  2746  0134                     __end_of_timer1GateInterrupt:	
  2747                           
  2748                           	psect	text19
  2749  01E6                     __ptext19:	
  2750 ;; *************** function i1_globalInterruptDisable *****************
  2751 ;; Defined at:
  2752 ;;		line 31 in file "interrupts.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		None
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2766 ;;      Params:         0       0       0       0
  2767 ;;      Locals:         0       0       0       0
  2768 ;;      Temps:          0       0       0       0
  2769 ;;      Totals:         0       0       0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_timer1GateInterrupt
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           
  2780                           ;psect for function i1_globalInterruptDisable
  2781  01E6                     i1_globalInterruptDisable:	
  2782                           
  2783                           ;interrupts.c: 33: TMR1GIE = 0;
  2784                           
  2785                           ;incstack = 0
  2786                           ; Regs used in i1_globalInterruptDisable: []
  2787  01E6  0021               	movlb	1	; select bank1
  2788  01E7  1391               	bcf	17,7	;volatile
  2789                           
  2790                           ;interrupts.c: 34: GIE = 0;
  2791  01E8  138B               	bcf	11,7	;volatile
  2792  01E9  0008               	return
  2793  01EA                     __end_ofi1_globalInterruptDisable:	
  2794                           
  2795                           	psect	text20
  2796  01B5                     __ptext20:	
  2797 ;; *************** function _timer1Value *****************
  2798 ;; Defined at:
  2799 ;;		line 47 in file "timers.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;		None
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  value           2    2[COMMON] int 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  2    0[COMMON] int 
  2806 ;; Registers used:
  2807 ;;		wreg
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2813 ;;      Params:         2       0       0       0
  2814 ;;      Locals:         2       0       0       0
  2815 ;;      Temps:          0       0       0       0
  2816 ;;      Totals:         4       0       0       0
  2817 ;;Total ram usage:        4 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_timer1GateInterrupt
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function _timer1Value
  2828  01B5                     _timer1Value:	
  2829                           
  2830                           ;timers.c: 49: int value = (TMR1H<<8) | TMR1L;
  2831                           
  2832                           ;incstack = 0
  2833                           ; Regs used in _timer1Value: [wreg]
  2834  01B5  0020               	movlb	0	; select bank0
  2835  01B6  081A               	movf	26,w	;volatile
  2836  01B7  00FA               	movwf	timer1Value@value+1
  2837  01B8  0819               	movf	25,w	;volatile
  2838  01B9  00F9               	movwf	timer1Value@value
  2839                           
  2840                           ;timers.c: 50: return value;
  2841  01BA  087A               	movf	timer1Value@value+1,w
  2842  01BB  00F8               	movwf	?_timer1Value+1
  2843  01BC  0879               	movf	timer1Value@value,w
  2844  01BD  00F7               	movwf	?_timer1Value
  2845  01BE  0008               	return
  2846  01BF                     __end_of_timer1Value:	
  2847                           
  2848                           	psect	text21
  2849  015A                     __ptext21:	
  2850 ;; *************** function _spiInterrupt *****************
  2851 ;; Defined at:
  2852 ;;		line 25 in file "spi.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  command         2    2[COMMON] int 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2866 ;;      Params:         0       0       0       0
  2867 ;;      Locals:         2       0       0       0
  2868 ;;      Temps:          2       0       0       0
  2869 ;;      Totals:         4       0       0       0
  2870 ;;Total ram usage:        4 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_interruptManager
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function _spiInterrupt
  2881  015A                     _spiInterrupt:	
  2882                           
  2883                           ;spi.c: 28: int command = SSP1BUF;
  2884                           
  2885                           ;incstack = 0
  2886                           ; Regs used in _spiInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  2887  015A  0024               	movlb	4	; select bank4
  2888  015B  0811               	movf	17,w	;volatile
  2889  015C  00F7               	movwf	??_spiInterrupt
  2890  015D  01F8               	clrf	??_spiInterrupt+1
  2891  015E  0877               	movf	??_spiInterrupt,w
  2892  015F  00F9               	movwf	spiInterrupt@command
  2893  0160  0878               	movf	??_spiInterrupt+1,w
  2894  0161  00FA               	movwf	spiInterrupt@command+1
  2895                           
  2896                           ;spi.c: 29: bufferCount--;
  2897  0162  30FF               	movlw	255
  2898  0163  07F0               	addwf	_bufferCount,f
  2899  0164  30FF               	movlw	255
  2900  0165  3DF1               	addwfc	_bufferCount+1,f
  2901                           
  2902                           ;spi.c: 30: if (bufferCount == 0)
  2903  0166  0870               	movf	_bufferCount,w
  2904  0167  0471               	iorwf	_bufferCount+1,w
  2905  0168  1D03               	btfss	3,2
  2906  0169  296D               	goto	i1l1146
  2907                           
  2908                           ;spi.c: 31: {
  2909                           ;spi.c: 33: PINGDriverStatus.bufferEmpty = 1;
  2910  016A  0020               	movlb	0	; select bank0
  2911  016B  1432               	bsf	_PINGDriverStatus,0
  2912                           
  2913                           ;spi.c: 34: }
  2914  016C  0008               	return
  2915  016D                     i1l1146:	
  2916                           
  2917                           ;spi.c: 35: else
  2918                           ;spi.c: 36: {
  2919                           ;spi.c: 37: SSP1BUF = dataBuffer[bufferCount-1];
  2920  016D  3570               	lslf	_bufferCount,w
  2921  016E  3EFE               	addlw	254
  2922  016F  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  2923  0170  0086               	movwf	6
  2924  0171  0187               	clrf	7
  2925  0172  0801               	movf	1,w
  2926  0173  0024               	movlb	4	; select bank4
  2927  0174  0091               	movwf	17	;volatile
  2928  0175  0008               	return
  2929  0176                     __end_of_spiInterrupt:	
  2930  007E                     btemp	set	126	;btemp
  2931  007E                     int$flags	set	126
  2932  007E                     wtemp	set	126
  2933  007E                     wtemp0	set	126
  2934  0080                     wtemp1	set	128
  2935  0082                     wtemp2	set	130
  2936  0084                     wtemp3	set	132
  2937  0086                     wtemp4	set	134
  2938  0088                     wtemp5	set	136
  2939  007F                     wtemp6	set	127
  2940  007E                     ttemp	set	126
  2941  007E                     ttemp0	set	126
  2942  0081                     ttemp1	set	129
  2943  0084                     ttemp2	set	132
  2944  0087                     ttemp3	set	135
  2945  007F                     ttemp4	set	127
  2946  007E                     ltemp	set	126
  2947  007E                     ltemp0	set	126
  2948  0082                     ltemp1	set	130
  2949  0086                     ltemp2	set	134
  2950  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     19      38
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interruptManager in COMMON

    _interruptManager->_timer1GateInterrupt
    _timer1GateInterrupt->_timer1Value

Critical Paths under _main in BANK0

    _main->_takeReading
    _resetTimer->_TMR1_WriteTimer
    _storeWordForTransfer->_storeByteForTransfer
    _initialize->_initializeSpi

Critical Paths under _interruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     860
                                              9 BANK0     10    10      0
                     _TMR1_StopTimer
                         _initialize
                         _resetTimer
               _storeWordForTransfer
                        _takeReading
 ---------------------------------------------------------------------------------
 (1) _takeReading                                          3     3      0     229
                                              6 BANK0      3     3      0
             _globalInterruptDisable
                         _resetTimer
 ---------------------------------------------------------------------------------
 (2) _resetTimer                                           0     0      0     161
                    _TMR1_StartTimer
                    _TMR1_WriteTimer
              _globalInterruptEnable
 ---------------------------------------------------------------------------------
 (3) _TMR1_WriteTimer                                      6     4      2     161
                                              0 BANK0      6     4      2
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (4) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _storeWordForTransfer                                 6     4      2     356
                                              2 BANK0      6     4      2
               _storeByteForTransfer
 ---------------------------------------------------------------------------------
 (2) _storeByteForTransfer                                 2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0      68
             _globalInterruptDisable
              _globalInterruptEnable
               _initializeInterrupts
                      _initializeSpi
                    _intializeTimers
 ---------------------------------------------------------------------------------
 (2) _intializeTimers                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializeSpi                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _initializeInterrupts                                 0     0      0       0
                      _clearAllFlags
             _globalInterruptDisable
              _globalInterruptEnable
         _peripheralInterruptDisable
          _peripheralInterruptEnable
 ---------------------------------------------------------------------------------
 (3) _peripheralInterruptEnable                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _peripheralInterruptDisable                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _globalInterruptEnable                                0     0      0       0
                      _clearAllFlags
 ---------------------------------------------------------------------------------
 (4) _clearAllFlags                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _globalInterruptDisable                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interruptManager                                     1     1      0     135
                                              6 COMMON     1     1      0
                       _spiInterrupt
                _timer1GateInterrupt
 ---------------------------------------------------------------------------------
 (6) _timer1GateInterrupt                                  2     2      0     134
                                              4 COMMON     2     2      0
                        _timer1Value
           i1_globalInterruptDisable
 ---------------------------------------------------------------------------------
 (7) i1_globalInterruptDisable                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _timer1Value                                          4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _spiInterrupt                                         4     4      0       1
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR1_StopTimer
   _initialize
     _globalInterruptDisable
     _globalInterruptEnable
       _clearAllFlags
     _initializeInterrupts
       _clearAllFlags
       _globalInterruptDisable
       _globalInterruptEnable
         _clearAllFlags
       _peripheralInterruptDisable
       _peripheralInterruptEnable
     _initializeSpi
     _intializeTimers
   _resetTimer
     _TMR1_StartTimer
     _TMR1_WriteTimer
       _TMR1_StopTimer
     _globalInterruptEnable
       _clearAllFlags
   _storeWordForTransfer
     _storeByteForTransfer
   _takeReading
     _globalInterruptDisable
     _resetTimer
       _TMR1_StartTimer
       _TMR1_WriteTimer
         _TMR1_StopTimer
       _globalInterruptEnable
         _clearAllFlags

 _interruptManager (ROOT)
   _spiInterrupt
   _timer1GateInterrupt
     _timer1Value
     i1_globalInterruptDisable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      34       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      26       6       47.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      34      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jul 16 19:00:32 2016

                        __CFG_CP$OFF 0000                                   l79 0104  
                        __CFG_LVP$ON 0000                                  _GIE 005F  
                                _RA4 0064                                  u225 014B  
                                u425 00F2                         __CFG_CPD$OFF 0000  
                                u435 0102                                  u390 01A8  
                                u475 0047                                  u485 0053  
                                wreg 0009      __size_of_globalInterruptDisable 0004  
                               l1324 00F4                                 l1336 00BC  
                               l1376 0035                                 l1368 003B  
                               _PEIE 005E                                 _WPUA 020C  
        ?_peripheralInterruptDisable 0077                         __CFG_WRT$OFF 0000  
                               _main 002D                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
           __end_of_interruptManager 001C                        __CFG_BORV$LOW 0000  
      __size_of_storeWordForTransfer 002F                                 start 001C  
                               ttemp 007E                                 wtemp 007E  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
             ??_initializeInterrupts 0033                                ?_main 0077  
                      __CFG_WDTE$OFF 0000                      _TMR1_StartTimer 01ED  
                              _T1CON 001B                                _IOCIE 0484  
                     __CFG_DEBUG$OFF 0000                                i1l151 0017  
                              i1l198 0126                                _OSCEN 091D  
                              _TMR1H 001A                                _TMR1L 0019  
                              u28_25 0120                                u29_25 012C  
                              _TRISA 008C                        __CFG_PWRTE$ON 0000  
         ??i1_globalInterruptDisable 0077                       __CFG_FCMEN$OFF 0000  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                __end_of_clearAllFlags 01DE  
                    _TMR1_WriteTimer 0191                         ?_takeReading 0077  
                    __initialization 001D               _globalInterruptDisable 01E2  
                       __end_of_main 007E                               ??_main 003C  
                      _maxTimerCount 0072                               _ANSELA 018C  
                             _T1GCON 001C                               _T1GPPS 0E13  
                             _RA5PPS 0E95                               i1l1146 016D  
                             i1l1138 0132                               _ODCONA 028C  
                             i1l1198 0010                               _INLVLA 038C  
                             _INTCON 000B                               _OSCFRQ 091F  
                             _TMR1IE 0488                               _TMR1IF 0088  
                             _TMR1ON 00D8                               _SSP1IE 048B  
                             _SSP1IF 008B                               _TRISA4 0464  
       __end_of_storeByteForTransfer 0191                        main@loopCount 0044  
            __end_of_TMR1_StartTimer 01F0                         ?_timer1Value 0077  
                     __CFG_STVREN$ON 0000       __size_of_globalInterruptEnable 0005  
      __end_of_globalInterruptEnable 01D9           ?_peripheralInterruptEnable 0077  
             __size_of_initializeSpi 0026              __end_of_TMR1_WriteTimer 01AB  
            __end_of__initialization 002A                        _minTimerCount 0074  
                     __pcstackCOMMON 0077             __size_of_intializeTimers 0007  
                   timer1Value@value 0079                           _dataBuffer 0020  
       __size_of_timer1GateInterrupt 0028                           __pbssBANK0 0020  
                  ?_interruptManager 0077                           __pmaintext 002D  
                      _initializeSpi 0134                 __size_of_takeReading 002C  
                 ??_interruptManager 007D                     ?_TMR1_StartTimer 0077  
                         __pintentry 0004                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_TMR1_StopTimer 0003         __end_of_storeWordForTransfer 00E0  
               _storeByteForTransfer 0176                              _OSCCON1 0919  
                            _OSCCON2 091A                              _OSCCON3 091B  
                            _TMR1GIE 048F                              _TMR1GIF 008F  
                            _SLRCONA 030C                              _PPSLOCK 0E0F  
                            _SSP1BUF 0211                     ?_TMR1_WriteTimer 0033  
            ?_globalInterruptDisable 0077                       ?_initializeSpi 0077  
      __size_of_initializeInterrupts 000A                 __size_of_timer1Value 000A  
                         _initialize 007E                              __ptext1 00E0  
                            __ptext2 01BF                              __ptext3 0191  
                            __ptext4 01EA                              __ptext5 01ED  
                            __ptext6 00B1                              __ptext7 0176  
                            __ptext8 007E                              __ptext9 01C7  
                      ?_spiInterrupt 0077                    ??_intializeTimers 0033  
              ?_storeByteForTransfer 0033                              clrloop0 01CF  
                            main@val 0040                 end_of_initialization 002A  
     __end_of_globalInterruptDisable 01E6                     _PINGDriverStatus 0032  
                         _resetTimer 01BF    __size_ofi1_globalInterruptDisable 0004  
          ?i1_globalInterruptDisable 0077                       ??_spiInterrupt 0077  
                          _SSP1SSPPS 0E22               __size_of_clearAllFlags 0005  
        ??_peripheralInterruptEnable 0033                     __CFG_FEXTOSC$OFF 0000  
               TMR1_WriteTimer@value 0033                 TMR1_WriteTimer@state 0037  
                    ??_initializeSpi 0033                 _storeWordForTransfer 00B1  
                         main@result 0042                  _timer1GateInterrupt 010C  
                        ?_initialize 0077                       _TMR1_StopTimer 01EA  
             ??_storeByteForTransfer 0035                  start_initialization 001D  
              _globalInterruptEnable 01D4                 ?_timer1GateInterrupt 0077  
                       takeReading@i 003A         ??_peripheralInterruptDisable 0033  
              ?_storeWordForTransfer 0035                        _clearAllFlags 01D9  
          _peripheralInterruptEnable 01DE                          ?_resetTimer 0077  
                   __CFG_LPBOREN$OFF 0000               __end_of_TMR1_StopTimer 01ED  
          __size_of_interruptManager 0018                          __pbssCOMMON 0070  
                          ___latbits 0000  __size_of_peripheralInterruptDisable 0002  
                      __pcstackBANK0 0033                ??_timer1GateInterrupt 007B  
      timer1GateInterrupt@timerCount 007B                 __end_of_spiInterrupt 0176  
                __size_of_initialize 0033                       ?_clearAllFlags 0077  
                      ??_takeReading 0039                  spiInterrupt@command 0079  
                    _intializeTimers 01C7                      ?_TMR1_StopTimer 0077  
                   __CFG_PPS1WAY$OFF 0000             __size_of_TMR1_StartTimer 0003  
             ?_globalInterruptEnable 0077                  __size_of_resetTimer 0008  
   __end_ofi1_globalInterruptDisable 01EA             storeByteForTransfer@data 0033  
       __end_of_initializeInterrupts 01B5               ??_storeWordForTransfer 0037  
                          clear_ram0 01CE                          _bufferCount 0070  
           __size_of_TMR1_WriteTimer 001A                        ??_timer1Value 0079  
                           _SSP1CON1 0215                             _SSP1CON3 0217  
                           _SSP1STAT 0214                  __end_of_takeReading 010C  
                   _summedTimerCount 002C   __end_of_peripheralInterruptDisable 01F2  
         _peripheralInterruptDisable 01F0                      ??_clearAllFlags 0033  
            __end_of_intializeTimers 01CE                         ??_initialize 0036  
 __size_of_peripheralInterruptEnable 0004                  __end_of_timer1Value 01BF  
                   _interruptManager 0004                _TMR1_InterruptHandler 0030  
                           __ptext10 0134                             __ptext11 01AB  
                           __ptext20 01B5                             __ptext12 01DE  
                           __ptext21 015A                             __ptext13 01F0  
                           __ptext14 01D4                             __ptext15 01D9  
                           __ptext16 01E2                             __ptext18 010C  
                           __ptext19 01E6                         _SSP1CON1bits 0215  
              __size_of_spiInterrupt 001C                     _timerValueStatus 0076  
                  ??_TMR1_StartTimer 0033             i1_globalInterruptDisable 01E6  
                      __size_of_main 0051                   __end_of_initialize 00B1  
                        _takeReading 00E0                         ??_resetTimer 0039  
              __end_of_initializeSpi 015A                             int$flags 007E  
               _initializeInterrupts 01AB                    ??_TMR1_WriteTimer 0035  
                     initializeSpi@i 0034                         _spiInterrupt 015A  
  __end_of_peripheralInterruptEnable 01E2        __size_of_storeByteForTransfer 001B  
           ??_globalInterruptDisable 0033                   __end_of_resetTimer 01C7  
                           intlevel1 0000                     ?_intializeTimers 0077  
                  __CFG_CLKOUTEN$OFF 0000                     ??_TMR1_StopTimer 0033  
                        _timer1Value 01B5                ?_initializeInterrupts 0077  
            ??_globalInterruptEnable 0033          __end_of_timer1GateInterrupt 0134  
                         _SSP1DATPPS 0E21                           _SSP1CLKPPS 0E20  
           storeWordForTransfer@data 0035              storeWordForTransfer@buf 0039  
