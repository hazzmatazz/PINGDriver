

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sun Jul 17 06:10:40 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F18313
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0017                     	;# 
    54  0018                     	;# 
    55  0019                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  001D                     	;# 
    61  001E                     	;# 
    62  001F                     	;# 
    63  008C                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0097                     	;# 
    70  009B                     	;# 
    71  009B                     	;# 
    72  009C                     	;# 
    73  009D                     	;# 
    74  009E                     	;# 
    75  009F                     	;# 
    76  010C                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0115                     	;# 
    80  0116                     	;# 
    81  0117                     	;# 
    82  0118                     	;# 
    83  0119                     	;# 
    84  018C                     	;# 
    85  0197                     	;# 
    86  0199                     	;# 
    87  0199                     	;# 
    88  0199                     	;# 
    89  019A                     	;# 
    90  019A                     	;# 
    91  019A                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019C                     	;# 
    98  019C                     	;# 
    99  019C                     	;# 
   100  019D                     	;# 
   101  019D                     	;# 
   102  019D                     	;# 
   103  019E                     	;# 
   104  019E                     	;# 
   105  019E                     	;# 
   106  019F                     	;# 
   107  019F                     	;# 
   108  019F                     	;# 
   109  019F                     	;# 
   110  019F                     	;# 
   111  020C                     	;# 
   112  0211                     	;# 
   113  0211                     	;# 
   114  0212                     	;# 
   115  0212                     	;# 
   116  0213                     	;# 
   117  0213                     	;# 
   118  0214                     	;# 
   119  0214                     	;# 
   120  0215                     	;# 
   121  0215                     	;# 
   122  0215                     	;# 
   123  0215                     	;# 
   124  0216                     	;# 
   125  0216                     	;# 
   126  0217                     	;# 
   127  0217                     	;# 
   128  028C                     	;# 
   129  0291                     	;# 
   130  0291                     	;# 
   131  0292                     	;# 
   132  0293                     	;# 
   133  0294                     	;# 
   134  0295                     	;# 
   135  0295                     	;# 
   136  0296                     	;# 
   137  0297                     	;# 
   138  0298                     	;# 
   139  029F                     	;# 
   140  030C                     	;# 
   141  038C                     	;# 
   142  0391                     	;# 
   143  0392                     	;# 
   144  0393                     	;# 
   145  039A                     	;# 
   146  039C                     	;# 
   147  039D                     	;# 
   148  039E                     	;# 
   149  039F                     	;# 
   150  040C                     	;# 
   151  041F                     	;# 
   152  048C                     	;# 
   153  0498                     	;# 
   154  0498                     	;# 
   155  0499                     	;# 
   156  049A                     	;# 
   157  049B                     	;# 
   158  049B                     	;# 
   159  049C                     	;# 
   160  049D                     	;# 
   161  049E                     	;# 
   162  049F                     	;# 
   163  0617                     	;# 
   164  0618                     	;# 
   165  0619                     	;# 
   166  0619                     	;# 
   167  061A                     	;# 
   168  061B                     	;# 
   169  061C                     	;# 
   170  061C                     	;# 
   171  0691                     	;# 
   172  0692                     	;# 
   173  0693                     	;# 
   174  0694                     	;# 
   175  0695                     	;# 
   176  0696                     	;# 
   177  0697                     	;# 
   178  0698                     	;# 
   179  0699                     	;# 
   180  0891                     	;# 
   181  0891                     	;# 
   182  0892                     	;# 
   183  0893                     	;# 
   184  0893                     	;# 
   185  0894                     	;# 
   186  0895                     	;# 
   187  0896                     	;# 
   188  089B                     	;# 
   189  0911                     	;# 
   190  0912                     	;# 
   191  0913                     	;# 
   192  0914                     	;# 
   193  0915                     	;# 
   194  0916                     	;# 
   195  0918                     	;# 
   196  0919                     	;# 
   197  091A                     	;# 
   198  091B                     	;# 
   199  091C                     	;# 
   200  091D                     	;# 
   201  091E                     	;# 
   202  091F                     	;# 
   203  0E0F                     	;# 
   204  0E10                     	;# 
   205  0E11                     	;# 
   206  0E12                     	;# 
   207  0E13                     	;# 
   208  0E14                     	;# 
   209  0E15                     	;# 
   210  0E18                     	;# 
   211  0E1A                     	;# 
   212  0E1B                     	;# 
   213  0E1C                     	;# 
   214  0E20                     	;# 
   215  0E21                     	;# 
   216  0E22                     	;# 
   217  0E24                     	;# 
   218  0E25                     	;# 
   219  0E28                     	;# 
   220  0E29                     	;# 
   221  0E2A                     	;# 
   222  0E2B                     	;# 
   223  0E90                     	;# 
   224  0E91                     	;# 
   225  0E92                     	;# 
   226  0E94                     	;# 
   227  0E95                     	;# 
   228  0F0F                     	;# 
   229  0F10                     	;# 
   230  0F11                     	;# 
   231  0F12                     	;# 
   232  0F13                     	;# 
   233  0F14                     	;# 
   234  0F15                     	;# 
   235  0F16                     	;# 
   236  0F17                     	;# 
   237  0F18                     	;# 
   238  0F19                     	;# 
   239  0F1A                     	;# 
   240  0F1B                     	;# 
   241  0F1C                     	;# 
   242  0F1D                     	;# 
   243  0F1E                     	;# 
   244  0F1F                     	;# 
   245  0F20                     	;# 
   246  0F21                     	;# 
   247  0F22                     	;# 
   248  0F23                     	;# 
   249  0FE4                     	;# 
   250  0FE5                     	;# 
   251  0FE6                     	;# 
   252  0FE7                     	;# 
   253  0FE8                     	;# 
   254  0FE9                     	;# 
   255  0FEA                     	;# 
   256  0FEB                     	;# 
   257  0FED                     	;# 
   258  0FEE                     	;# 
   259  0FEF                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  0010                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0013                     	;# 
   277  0014                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0017                     	;# 
   281  0018                     	;# 
   282  0019                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  001D                     	;# 
   288  001E                     	;# 
   289  001F                     	;# 
   290  008C                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0097                     	;# 
   297  009B                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  0111                     	;# 
   305  0112                     	;# 
   306  0115                     	;# 
   307  0116                     	;# 
   308  0117                     	;# 
   309  0118                     	;# 
   310  0119                     	;# 
   311  018C                     	;# 
   312  0197                     	;# 
   313  0199                     	;# 
   314  0199                     	;# 
   315  0199                     	;# 
   316  019A                     	;# 
   317  019A                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019C                     	;# 
   325  019C                     	;# 
   326  019C                     	;# 
   327  019D                     	;# 
   328  019D                     	;# 
   329  019D                     	;# 
   330  019E                     	;# 
   331  019E                     	;# 
   332  019E                     	;# 
   333  019F                     	;# 
   334  019F                     	;# 
   335  019F                     	;# 
   336  019F                     	;# 
   337  019F                     	;# 
   338  020C                     	;# 
   339  0211                     	;# 
   340  0211                     	;# 
   341  0212                     	;# 
   342  0212                     	;# 
   343  0213                     	;# 
   344  0213                     	;# 
   345  0214                     	;# 
   346  0214                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0216                     	;# 
   352  0216                     	;# 
   353  0217                     	;# 
   354  0217                     	;# 
   355  028C                     	;# 
   356  0291                     	;# 
   357  0291                     	;# 
   358  0292                     	;# 
   359  0293                     	;# 
   360  0294                     	;# 
   361  0295                     	;# 
   362  0295                     	;# 
   363  0296                     	;# 
   364  0297                     	;# 
   365  0298                     	;# 
   366  029F                     	;# 
   367  030C                     	;# 
   368  038C                     	;# 
   369  0391                     	;# 
   370  0392                     	;# 
   371  0393                     	;# 
   372  039A                     	;# 
   373  039C                     	;# 
   374  039D                     	;# 
   375  039E                     	;# 
   376  039F                     	;# 
   377  040C                     	;# 
   378  041F                     	;# 
   379  048C                     	;# 
   380  0498                     	;# 
   381  0498                     	;# 
   382  0499                     	;# 
   383  049A                     	;# 
   384  049B                     	;# 
   385  049B                     	;# 
   386  049C                     	;# 
   387  049D                     	;# 
   388  049E                     	;# 
   389  049F                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  0619                     	;# 
   394  061A                     	;# 
   395  061B                     	;# 
   396  061C                     	;# 
   397  061C                     	;# 
   398  0691                     	;# 
   399  0692                     	;# 
   400  0693                     	;# 
   401  0694                     	;# 
   402  0695                     	;# 
   403  0696                     	;# 
   404  0697                     	;# 
   405  0698                     	;# 
   406  0699                     	;# 
   407  0891                     	;# 
   408  0891                     	;# 
   409  0892                     	;# 
   410  0893                     	;# 
   411  0893                     	;# 
   412  0894                     	;# 
   413  0895                     	;# 
   414  0896                     	;# 
   415  089B                     	;# 
   416  0911                     	;# 
   417  0912                     	;# 
   418  0913                     	;# 
   419  0914                     	;# 
   420  0915                     	;# 
   421  0916                     	;# 
   422  0918                     	;# 
   423  0919                     	;# 
   424  091A                     	;# 
   425  091B                     	;# 
   426  091C                     	;# 
   427  091D                     	;# 
   428  091E                     	;# 
   429  091F                     	;# 
   430  0E0F                     	;# 
   431  0E10                     	;# 
   432  0E11                     	;# 
   433  0E12                     	;# 
   434  0E13                     	;# 
   435  0E14                     	;# 
   436  0E15                     	;# 
   437  0E18                     	;# 
   438  0E1A                     	;# 
   439  0E1B                     	;# 
   440  0E1C                     	;# 
   441  0E20                     	;# 
   442  0E21                     	;# 
   443  0E22                     	;# 
   444  0E24                     	;# 
   445  0E25                     	;# 
   446  0E28                     	;# 
   447  0E29                     	;# 
   448  0E2A                     	;# 
   449  0E2B                     	;# 
   450  0E90                     	;# 
   451  0E91                     	;# 
   452  0E92                     	;# 
   453  0E94                     	;# 
   454  0E95                     	;# 
   455  0F0F                     	;# 
   456  0F10                     	;# 
   457  0F11                     	;# 
   458  0F12                     	;# 
   459  0F13                     	;# 
   460  0F14                     	;# 
   461  0F15                     	;# 
   462  0F16                     	;# 
   463  0F17                     	;# 
   464  0F18                     	;# 
   465  0F19                     	;# 
   466  0F1A                     	;# 
   467  0F1B                     	;# 
   468  0F1C                     	;# 
   469  0F1D                     	;# 
   470  0F1E                     	;# 
   471  0F1F                     	;# 
   472  0F20                     	;# 
   473  0F21                     	;# 
   474  0F22                     	;# 
   475  0F23                     	;# 
   476  0FE4                     	;# 
   477  0FE5                     	;# 
   478  0FE6                     	;# 
   479  0FE7                     	;# 
   480  0FE8                     	;# 
   481  0FE9                     	;# 
   482  0FEA                     	;# 
   483  0FEB                     	;# 
   484  0FED                     	;# 
   485  0FEE                     	;# 
   486  0FEF                     	;# 
   487  0000                     	;# 
   488  0001                     	;# 
   489  0002                     	;# 
   490  0003                     	;# 
   491  0004                     	;# 
   492  0005                     	;# 
   493  0006                     	;# 
   494  0007                     	;# 
   495  0008                     	;# 
   496  0009                     	;# 
   497  000A                     	;# 
   498  000B                     	;# 
   499  000C                     	;# 
   500  0010                     	;# 
   501  0011                     	;# 
   502  0012                     	;# 
   503  0013                     	;# 
   504  0014                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  0019                     	;# 
   511  001A                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  008C                     	;# 
   518  0090                     	;# 
   519  0091                     	;# 
   520  0092                     	;# 
   521  0093                     	;# 
   522  0094                     	;# 
   523  0097                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  009F                     	;# 
   530  010C                     	;# 
   531  0111                     	;# 
   532  0112                     	;# 
   533  0115                     	;# 
   534  0116                     	;# 
   535  0117                     	;# 
   536  0118                     	;# 
   537  0119                     	;# 
   538  018C                     	;# 
   539  0197                     	;# 
   540  0199                     	;# 
   541  0199                     	;# 
   542  0199                     	;# 
   543  019A                     	;# 
   544  019A                     	;# 
   545  019A                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019B                     	;# 
   551  019C                     	;# 
   552  019C                     	;# 
   553  019C                     	;# 
   554  019D                     	;# 
   555  019D                     	;# 
   556  019D                     	;# 
   557  019E                     	;# 
   558  019E                     	;# 
   559  019E                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  019F                     	;# 
   563  019F                     	;# 
   564  019F                     	;# 
   565  020C                     	;# 
   566  0211                     	;# 
   567  0211                     	;# 
   568  0212                     	;# 
   569  0212                     	;# 
   570  0213                     	;# 
   571  0213                     	;# 
   572  0214                     	;# 
   573  0214                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0216                     	;# 
   580  0217                     	;# 
   581  0217                     	;# 
   582  028C                     	;# 
   583  0291                     	;# 
   584  0291                     	;# 
   585  0292                     	;# 
   586  0293                     	;# 
   587  0294                     	;# 
   588  0295                     	;# 
   589  0295                     	;# 
   590  0296                     	;# 
   591  0297                     	;# 
   592  0298                     	;# 
   593  029F                     	;# 
   594  030C                     	;# 
   595  038C                     	;# 
   596  0391                     	;# 
   597  0392                     	;# 
   598  0393                     	;# 
   599  039A                     	;# 
   600  039C                     	;# 
   601  039D                     	;# 
   602  039E                     	;# 
   603  039F                     	;# 
   604  040C                     	;# 
   605  041F                     	;# 
   606  048C                     	;# 
   607  0498                     	;# 
   608  0498                     	;# 
   609  0499                     	;# 
   610  049A                     	;# 
   611  049B                     	;# 
   612  049B                     	;# 
   613  049C                     	;# 
   614  049D                     	;# 
   615  049E                     	;# 
   616  049F                     	;# 
   617  0617                     	;# 
   618  0618                     	;# 
   619  0619                     	;# 
   620  0619                     	;# 
   621  061A                     	;# 
   622  061B                     	;# 
   623  061C                     	;# 
   624  061C                     	;# 
   625  0691                     	;# 
   626  0692                     	;# 
   627  0693                     	;# 
   628  0694                     	;# 
   629  0695                     	;# 
   630  0696                     	;# 
   631  0697                     	;# 
   632  0698                     	;# 
   633  0699                     	;# 
   634  0891                     	;# 
   635  0891                     	;# 
   636  0892                     	;# 
   637  0893                     	;# 
   638  0893                     	;# 
   639  0894                     	;# 
   640  0895                     	;# 
   641  0896                     	;# 
   642  089B                     	;# 
   643  0911                     	;# 
   644  0912                     	;# 
   645  0913                     	;# 
   646  0914                     	;# 
   647  0915                     	;# 
   648  0916                     	;# 
   649  0918                     	;# 
   650  0919                     	;# 
   651  091A                     	;# 
   652  091B                     	;# 
   653  091C                     	;# 
   654  091D                     	;# 
   655  091E                     	;# 
   656  091F                     	;# 
   657  0E0F                     	;# 
   658  0E10                     	;# 
   659  0E11                     	;# 
   660  0E12                     	;# 
   661  0E13                     	;# 
   662  0E14                     	;# 
   663  0E15                     	;# 
   664  0E18                     	;# 
   665  0E1A                     	;# 
   666  0E1B                     	;# 
   667  0E1C                     	;# 
   668  0E20                     	;# 
   669  0E21                     	;# 
   670  0E22                     	;# 
   671  0E24                     	;# 
   672  0E25                     	;# 
   673  0E28                     	;# 
   674  0E29                     	;# 
   675  0E2A                     	;# 
   676  0E2B                     	;# 
   677  0E90                     	;# 
   678  0E91                     	;# 
   679  0E92                     	;# 
   680  0E94                     	;# 
   681  0E95                     	;# 
   682  0F0F                     	;# 
   683  0F10                     	;# 
   684  0F11                     	;# 
   685  0F12                     	;# 
   686  0F13                     	;# 
   687  0F14                     	;# 
   688  0F15                     	;# 
   689  0F16                     	;# 
   690  0F17                     	;# 
   691  0F18                     	;# 
   692  0F19                     	;# 
   693  0F1A                     	;# 
   694  0F1B                     	;# 
   695  0F1C                     	;# 
   696  0F1D                     	;# 
   697  0F1E                     	;# 
   698  0F1F                     	;# 
   699  0F20                     	;# 
   700  0F21                     	;# 
   701  0F22                     	;# 
   702  0F23                     	;# 
   703  0FE4                     	;# 
   704  0FE5                     	;# 
   705  0FE6                     	;# 
   706  0FE7                     	;# 
   707  0FE8                     	;# 
   708  0FE9                     	;# 
   709  0FEA                     	;# 
   710  0FEB                     	;# 
   711  0FED                     	;# 
   712  0FEE                     	;# 
   713  0FEF                     	;# 
   714  0000                     	;# 
   715  0001                     	;# 
   716  0002                     	;# 
   717  0003                     	;# 
   718  0004                     	;# 
   719  0005                     	;# 
   720  0006                     	;# 
   721  0007                     	;# 
   722  0008                     	;# 
   723  0009                     	;# 
   724  000A                     	;# 
   725  000B                     	;# 
   726  000C                     	;# 
   727  0010                     	;# 
   728  0011                     	;# 
   729  0012                     	;# 
   730  0013                     	;# 
   731  0014                     	;# 
   732  0015                     	;# 
   733  0016                     	;# 
   734  0017                     	;# 
   735  0018                     	;# 
   736  0019                     	;# 
   737  0019                     	;# 
   738  001A                     	;# 
   739  001B                     	;# 
   740  001C                     	;# 
   741  001D                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  008C                     	;# 
   745  0090                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0094                     	;# 
   750  0097                     	;# 
   751  009B                     	;# 
   752  009B                     	;# 
   753  009C                     	;# 
   754  009D                     	;# 
   755  009E                     	;# 
   756  009F                     	;# 
   757  010C                     	;# 
   758  0111                     	;# 
   759  0112                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  018C                     	;# 
   766  0197                     	;# 
   767  0199                     	;# 
   768  0199                     	;# 
   769  0199                     	;# 
   770  019A                     	;# 
   771  019A                     	;# 
   772  019A                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  019C                     	;# 
   780  019C                     	;# 
   781  019D                     	;# 
   782  019D                     	;# 
   783  019D                     	;# 
   784  019E                     	;# 
   785  019E                     	;# 
   786  019E                     	;# 
   787  019F                     	;# 
   788  019F                     	;# 
   789  019F                     	;# 
   790  019F                     	;# 
   791  019F                     	;# 
   792  020C                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0216                     	;# 
   806  0216                     	;# 
   807  0217                     	;# 
   808  0217                     	;# 
   809  028C                     	;# 
   810  0291                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0293                     	;# 
   814  0294                     	;# 
   815  0295                     	;# 
   816  0295                     	;# 
   817  0296                     	;# 
   818  0297                     	;# 
   819  0298                     	;# 
   820  029F                     	;# 
   821  030C                     	;# 
   822  038C                     	;# 
   823  0391                     	;# 
   824  0392                     	;# 
   825  0393                     	;# 
   826  039A                     	;# 
   827  039C                     	;# 
   828  039D                     	;# 
   829  039E                     	;# 
   830  039F                     	;# 
   831  040C                     	;# 
   832  041F                     	;# 
   833  048C                     	;# 
   834  0498                     	;# 
   835  0498                     	;# 
   836  0499                     	;# 
   837  049A                     	;# 
   838  049B                     	;# 
   839  049B                     	;# 
   840  049C                     	;# 
   841  049D                     	;# 
   842  049E                     	;# 
   843  049F                     	;# 
   844  0617                     	;# 
   845  0618                     	;# 
   846  0619                     	;# 
   847  0619                     	;# 
   848  061A                     	;# 
   849  061B                     	;# 
   850  061C                     	;# 
   851  061C                     	;# 
   852  0691                     	;# 
   853  0692                     	;# 
   854  0693                     	;# 
   855  0694                     	;# 
   856  0695                     	;# 
   857  0696                     	;# 
   858  0697                     	;# 
   859  0698                     	;# 
   860  0699                     	;# 
   861  0891                     	;# 
   862  0891                     	;# 
   863  0892                     	;# 
   864  0893                     	;# 
   865  0893                     	;# 
   866  0894                     	;# 
   867  0895                     	;# 
   868  0896                     	;# 
   869  089B                     	;# 
   870  0911                     	;# 
   871  0912                     	;# 
   872  0913                     	;# 
   873  0914                     	;# 
   874  0915                     	;# 
   875  0916                     	;# 
   876  0918                     	;# 
   877  0919                     	;# 
   878  091A                     	;# 
   879  091B                     	;# 
   880  091C                     	;# 
   881  091D                     	;# 
   882  091E                     	;# 
   883  091F                     	;# 
   884  0E0F                     	;# 
   885  0E10                     	;# 
   886  0E11                     	;# 
   887  0E12                     	;# 
   888  0E13                     	;# 
   889  0E14                     	;# 
   890  0E15                     	;# 
   891  0E18                     	;# 
   892  0E1A                     	;# 
   893  0E1B                     	;# 
   894  0E1C                     	;# 
   895  0E20                     	;# 
   896  0E21                     	;# 
   897  0E22                     	;# 
   898  0E24                     	;# 
   899  0E25                     	;# 
   900  0E28                     	;# 
   901  0E29                     	;# 
   902  0E2A                     	;# 
   903  0E2B                     	;# 
   904  0E90                     	;# 
   905  0E91                     	;# 
   906  0E92                     	;# 
   907  0E94                     	;# 
   908  0E95                     	;# 
   909  0F0F                     	;# 
   910  0F10                     	;# 
   911  0F11                     	;# 
   912  0F12                     	;# 
   913  0F13                     	;# 
   914  0F14                     	;# 
   915  0F15                     	;# 
   916  0F16                     	;# 
   917  0F17                     	;# 
   918  0F18                     	;# 
   919  0F19                     	;# 
   920  0F1A                     	;# 
   921  0F1B                     	;# 
   922  0F1C                     	;# 
   923  0F1D                     	;# 
   924  0F1E                     	;# 
   925  0F1F                     	;# 
   926  0F20                     	;# 
   927  0F21                     	;# 
   928  0F22                     	;# 
   929  0F23                     	;# 
   930  0FE4                     	;# 
   931  0FE5                     	;# 
   932  0FE6                     	;# 
   933  0FE7                     	;# 
   934  0FE8                     	;# 
   935  0FE9                     	;# 
   936  0FEA                     	;# 
   937  0FEB                     	;# 
   938  0FED                     	;# 
   939  0FEE                     	;# 
   940  0FEF                     	;# 
   941  000B                     _INTCON	set	11
   942  001B                     _T1CON	set	27
   943  001C                     _T1GCON	set	28
   944  001A                     _TMR1H	set	26
   945  0019                     _TMR1L	set	25
   946  005F                     _GIE	set	95
   947  005E                     _PEIE	set	94
   948  0064                     _RA4	set	100
   949  008B                     _SSP1IF	set	139
   950  008F                     _TMR1GIF	set	143
   951  0088                     _TMR1IF	set	136
   952  00D8                     _TMR1ON	set	216
   953  008C                     _TRISA	set	140
   954  0484                     _IOCIE	set	1156
   955  048B                     _SSP1IE	set	1163
   956  048F                     _TMR1GIE	set	1167
   957  0488                     _TMR1IE	set	1160
   958  0464                     _TRISA4	set	1124
   959  018C                     _ANSELA	set	396
   960  0211                     _SSP1BUF	set	529
   961  0215                     _SSP1CON1	set	533
   962  0215                     _SSP1CON1bits	set	533
   963  0217                     _SSP1CON3	set	535
   964  0214                     _SSP1STAT	set	532
   965  020C                     _WPUA	set	524
   966  028C                     _ODCONA	set	652
   967  030C                     _SLRCONA	set	780
   968  038C                     _INLVLA	set	908
   969  0919                     _OSCCON1	set	2329
   970  091A                     _OSCCON2	set	2330
   971  091B                     _OSCCON3	set	2331
   972  091D                     _OSCEN	set	2333
   973  091F                     _OSCFRQ	set	2335
   974  0E0F                     _PPSLOCK	set	3599
   975  0E20                     _SSP1CLKPPS	set	3616
   976  0E21                     _SSP1DATPPS	set	3617
   977  0E22                     _SSP1SSPPS	set	3618
   978  0E13                     _T1GPPS	set	3603
   979  0E95                     _RA5PPS	set	3733
   980                           
   981                           ; #config settings
   982  0000                     
   983                           	psect	cinit
   984  001D                     start_initialization:	
   985  001D                     __initialization:	
   986                           
   987                           ; Clear objects allocated to COMMON
   988  001D  01F7               	clrf	__pbssCOMMON& (0+127)
   989  001E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   990  001F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   991  0020  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   992  0021  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   993                           
   994                           ; Clear objects allocated to BANK0
   995  0022  3020               	movlw	low __pbssBANK0
   996  0023  0084               	movwf	4
   997  0024  3000               	movlw	high __pbssBANK0
   998  0025  0085               	movwf	5
   999  0026  3015               	movlw	21
  1000  0027  21E0               	fcall	clear_ram0
  1001  0028                     end_of_initialization:	
  1002                           ;End of C runtime variable initialization code
  1003                           
  1004  0028                     __end_of__initialization:	
  1005  0028  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1006  0029  0020               	movlb	0
  1007  002A  282B               	ljmp	_main	;jump to C main() function
  1008                           
  1009                           	psect	bssCOMMON
  1010  0077                     __pbssCOMMON:	
  1011  0077                     _TMR1_InterruptHandler:	
  1012  0077                     	ds	2
  1013  0079                     _bufferCount:	
  1014  0079                     	ds	2
  1015  007B                     _timerValueStatus:	
  1016  007B                     	ds	1
  1017                           
  1018                           	psect	bssBANK0
  1019  0020                     __pbssBANK0:	
  1020  0020                     _dataBuffer:	
  1021  0020                     	ds	12
  1022  002C                     _summedTimerCount:	
  1023  002C                     	ds	4
  1024  0030                     _maxTimerCount:	
  1025  0030                     	ds	2
  1026  0032                     _minTimerCount:	
  1027  0032                     	ds	2
  1028  0034                     _PINGDriverStatus:	
  1029  0034                     	ds	1
  1030                           
  1031                           	psect	clrtext
  1032  01E0                     clear_ram0:	
  1033                           ;	Called with FSR0 containing the base address, and
  1034                           ;	WREG with the size to clear
  1035                           
  1036  01E0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1037  01E1                     clrloop0:	
  1038  01E1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1039  01E2  3101               	addfsr 0,1
  1040  01E3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1041  01E4  29E1               	goto	clrloop0	;have we reached the end yet?
  1042  01E5  3400               	retlw	0	;all done for this memory range, return
  1043                           
  1044                           	psect	cstackCOMMON
  1045  0070                     __pcstackCOMMON:	
  1046  0070                     ?_globalInterruptDisable:	
  1047  0070                     ?_globalInterruptEnable:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0070                     ?_intializeTimers:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0070                     ?_initializeInterrupts:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0070                     ?_initializeSpi:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0070                     ?_resetTimer:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0070                     ?_TMR1_StopTimer:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0070                     ?_peripheralInterruptDisable:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_clearAllFlags:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?_peripheralInterruptEnable:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_timer1GateInterrupt:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_spiInterrupt:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ??_spiInterrupt:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_initialize:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?_takeReading:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_main:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_interruptManager:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ?_TMR1_StartTimer:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?i1_globalInterruptDisable:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ??i1_globalInterruptDisable:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_timer1Value:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107                           
  1108                           ; 2 bytes @ 0x0
  1109  0070                     	ds	2
  1110  0072                     ??_timer1Value:	
  1111  0072                     timer1Value@value:	
  1112                           ; 1 bytes @ 0x2
  1113                           
  1114  0072                     spiInterrupt@command:	
  1115                           ; 2 bytes @ 0x2
  1116                           
  1117                           
  1118                           ; 2 bytes @ 0x2
  1119  0072                     	ds	2
  1120  0074                     ??_timer1GateInterrupt:	
  1121  0074                     timer1GateInterrupt@timerCount:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124                           
  1125                           ; 2 bytes @ 0x4
  1126  0074                     	ds	2
  1127  0076                     ??_interruptManager:	
  1128                           
  1129                           ; 1 bytes @ 0x6
  1130  0076                     	ds	1
  1131                           
  1132                           	psect	cstackBANK0
  1133  0035                     __pcstackBANK0:	
  1134  0035                     ??_globalInterruptDisable:	
  1135  0035                     ??_globalInterruptEnable:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0035                     ??_intializeTimers:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0035                     ??_initializeInterrupts:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0035                     ??_initializeSpi:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0035                     ??_TMR1_StopTimer:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0035                     ??_peripheralInterruptDisable:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0035                     ??_clearAllFlags:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0035                     ??_peripheralInterruptEnable:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0035                     ?_TMR1_WriteTimer:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0035                     ??_TMR1_StartTimer:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0035                     ?_storeByteForTransfer:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0035                     TMR1_WriteTimer@value:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0035                     storeByteForTransfer@data:	
  1172                           ; 2 bytes @ 0x0
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x0
  1176  0035                     	ds	1
  1177  0036                     initializeSpi@i:	
  1178                           
  1179                           ; 2 bytes @ 0x1
  1180  0036                     	ds	1
  1181  0037                     ??_TMR1_WriteTimer:	
  1182  0037                     ??_storeByteForTransfer:	
  1183                           ; 1 bytes @ 0x2
  1184                           
  1185  0037                     ?_storeWordForTransfer:	
  1186                           ; 1 bytes @ 0x2
  1187                           
  1188  0037                     storeWordForTransfer@data:	
  1189                           ; 2 bytes @ 0x2
  1190                           
  1191                           
  1192                           ; 2 bytes @ 0x2
  1193  0037                     	ds	1
  1194  0038                     ??_initialize:	
  1195                           
  1196                           ; 1 bytes @ 0x3
  1197  0038                     	ds	1
  1198  0039                     ??_storeWordForTransfer:	
  1199  0039                     TMR1_WriteTimer@state:	
  1200                           ; 1 bytes @ 0x4
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0x4
  1204  0039                     	ds	2
  1205  003B                     ??_resetTimer:	
  1206  003B                     ??_takeReading:	
  1207                           ; 1 bytes @ 0x6
  1208                           
  1209  003B                     storeWordForTransfer@buf:	
  1210                           ; 1 bytes @ 0x6
  1211                           
  1212                           
  1213                           ; 2 bytes @ 0x6
  1214  003B                     	ds	1
  1215  003C                     takeReading@i:	
  1216                           
  1217                           ; 2 bytes @ 0x7
  1218  003C                     	ds	2
  1219  003E                     ??_main:	
  1220                           
  1221                           ; 1 bytes @ 0x9
  1222  003E                     	ds	4
  1223  0042                     main@val:	
  1224                           
  1225                           ; 2 bytes @ 0xD
  1226  0042                     	ds	2
  1227  0044                     main@result:	
  1228                           
  1229                           ; 2 bytes @ 0xF
  1230  0044                     	ds	2
  1231  0046                     main@loopCount:	
  1232                           
  1233                           ; 2 bytes @ 0x11
  1234  0046                     	ds	2
  1235                           
  1236                           	psect	maintext
  1237  002B                     __pmaintext:	
  1238 ;;
  1239 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1240 ;;
  1241 ;; *************** function _main *****************
  1242 ;; Defined at:
  1243 ;;		line 126 in file "main.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  result          2   15[BANK0 ] int 
  1248 ;;  loopCount       2   17[BANK0 ] int 
  1249 ;;  val             2   13[BANK0 ] int 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : B1F/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1259 ;;      Params:         0       0       0       0
  1260 ;;      Locals:         0       6       0       0
  1261 ;;      Temps:          0       4       0       0
  1262 ;;      Totals:         0      10       0       0
  1263 ;;Total ram usage:       10 bytes
  1264 ;; Hardware stack levels required when called:    7
  1265 ;; This function calls:
  1266 ;;		_TMR1_StopTimer
  1267 ;;		_initialize
  1268 ;;		_resetTimer
  1269 ;;		_storeWordForTransfer
  1270 ;;		_takeReading
  1271 ;; This function is called by:
  1272 ;;		Startup code after reset
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           
  1277                           ;psect for function _main
  1278  002B                     _main:	
  1279                           
  1280                           ;main.c: 129: initialize();
  1281                           
  1282                           ;incstack = 0
  1283                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1284  002B  2090               	fcall	_initialize
  1285                           
  1286                           ;main.c: 131: resetTimer();
  1287  002C  21D1               	fcall	_resetTimer
  1288                           
  1289                           ;main.c: 132: int val = 0;
  1290  002D  0020               	movlb	0	; select bank0
  1291  002E  01C2               	clrf	main@val
  1292  002F  01C3               	clrf	main@val+1
  1293                           
  1294                           ;main.c: 134: PINGDriverStatus.bufferEmpty = 1;
  1295  0030  1434               	bsf	_PINGDriverStatus,0
  1296                           
  1297                           ;main.c: 135: PINGDriverStatus.takingReading = 0;
  1298  0031  10B4               	bcf	_PINGDriverStatus,1
  1299  0032  287D               	goto	L1
  1300  0033                     l1384:	
  1301                           ;main.c: 151: {
  1302                           ;main.c: 153: continue;
  1303                           
  1304                           ;main.c: 146: {
  1305                           ;main.c: 147: continue;
  1306                           
  1307                           ;main.c: 141: maxTimerCount = 0x0000;
  1308                           
  1309                           ;main.c: 140: minTimerCount = 0xFFFF;
  1310                           
  1311                           ;main.c: 138: int loopCount = 1<<1;
  1312                           
  1313                           ;main.c: 137: summedTimerCount = 0x00000000;
  1314                           
  1315                           
  1316                           ;main.c: 159: {
  1317                           ;main.c: 160: takeReading();
  1318  0033  20F2               	fcall	_takeReading
  1319                           
  1320                           ;main.c: 161: loopCount--;
  1321  0034  30FF               	movlw	255
  1322  0035  0020               	movlb	0	; select bank0
  1323  0036  07C6               	addwf	main@loopCount,f
  1324  0037  30FF               	movlw	255
  1325  0038  3DC7               	addwfc	main@loopCount+1,f
  1326  0039                     l1376:	
  1327                           ;main.c: 143: while(1)
  1328                           
  1329                           ;main.c: 162: }
  1330                           
  1331                           
  1332                           ;main.c: 144: {
  1333                           ;main.c: 145: if (PINGDriverStatus.bufferEmpty == 0)
  1334  0039  1834               	btfsc	_PINGDriverStatus,0
  1335                           
  1336                           ;main.c: 148: }
  1337                           ;main.c: 150: if (PINGDriverStatus.takingReading)
  1338  003A  18B4               	btfsc	_PINGDriverStatus,1
  1339  003B  2839               	goto	l1376
  1340                           
  1341                           ;main.c: 154: }
  1342                           ;main.c: 158: if (loopCount > 0)
  1343  003C  0847               	movf	main@loopCount+1,w
  1344  003D  3A80               	xorlw	128
  1345  003E  00BE               	movwf	??_main
  1346  003F  3080               	movlw	128
  1347  0040  023E               	subwf	??_main,w
  1348  0041  1D03               	skipz
  1349  0042  2845               	goto	u475
  1350  0043  3001               	movlw	1
  1351  0044  0246               	subwf	main@loopCount,w
  1352  0045                     u475:	
  1353  0045  1803               	btfsc	3,0
  1354  0046  2833               	goto	l1384
  1355                           
  1356                           ;main.c: 163: else
  1357                           ;main.c: 164: {
  1358                           ;main.c: 167: summedTimerCount = summedTimerCount >> 1;
  1359  0047  0020               	movlb	0	; select bank0
  1360  0048  082C               	movf	_summedTimerCount,w
  1361  0049  00BE               	movwf	??_main
  1362  004A  082D               	movf	_summedTimerCount+1,w
  1363  004B  00BF               	movwf	??_main+1
  1364  004C  082E               	movf	_summedTimerCount+2,w
  1365  004D  00C0               	movwf	??_main+2
  1366  004E  082F               	movf	_summedTimerCount+3,w
  1367  004F  00C1               	movwf	??_main+3
  1368  0050  3001               	movlw	1
  1369  0051                     u485:	
  1370  0051  36C1               	lsrf	??_main+3,f
  1371  0052  0CC0               	rrf	??_main+2,f
  1372  0053  0CBF               	rrf	??_main+1,f
  1373  0054  0CBE               	rrf	??_main,f
  1374  0055  0B89               	decfsz	9,f
  1375  0056  2851               	goto	u485
  1376  0057  0841               	movf	??_main+3,w
  1377  0058  00AF               	movwf	_summedTimerCount+3
  1378  0059  0840               	movf	??_main+2,w
  1379  005A  00AE               	movwf	_summedTimerCount+2
  1380  005B  083F               	movf	??_main+1,w
  1381  005C  00AD               	movwf	_summedTimerCount+1
  1382  005D  083E               	movf	??_main,w
  1383  005E  00AC               	movwf	_summedTimerCount
  1384                           
  1385                           ;main.c: 168: int result = storeWordForTransfer(summedTimerCount&0xFFFF);
  1386  005F  082D               	movf	_summedTimerCount+1,w
  1387  0060  00B8               	movwf	storeWordForTransfer@data+1
  1388  0061  082C               	movf	_summedTimerCount,w
  1389  0062  00B7               	movwf	storeWordForTransfer@data
  1390  0063  20C3               	fcall	_storeWordForTransfer
  1391  0064  0020               	movlb	0	; select bank0
  1392  0065  0838               	movf	?_storeWordForTransfer+1,w
  1393  0066  00C5               	movwf	main@result+1
  1394  0067  0837               	movf	?_storeWordForTransfer,w
  1395  0068  00C4               	movwf	main@result
  1396                           
  1397                           ;main.c: 169: result = storeWordForTransfer(minTimerCount);
  1398  0069  0833               	movf	_minTimerCount+1,w
  1399  006A  00B8               	movwf	storeWordForTransfer@data+1
  1400  006B  0832               	movf	_minTimerCount,w
  1401  006C  00B7               	movwf	storeWordForTransfer@data
  1402  006D  20C3               	fcall	_storeWordForTransfer
  1403  006E  0020               	movlb	0	; select bank0
  1404  006F  0838               	movf	?_storeWordForTransfer+1,w
  1405  0070  00C5               	movwf	main@result+1
  1406  0071  0837               	movf	?_storeWordForTransfer,w
  1407  0072  00C4               	movwf	main@result
  1408                           
  1409                           ;main.c: 170: result = storeWordForTransfer(maxTimerCount);
  1410  0073  0831               	movf	_maxTimerCount+1,w
  1411  0074  00B8               	movwf	storeWordForTransfer@data+1
  1412  0075  0830               	movf	_maxTimerCount,w
  1413  0076  00B7               	movwf	storeWordForTransfer@data
  1414  0077  20C3               	fcall	_storeWordForTransfer
  1415  0078  0020               	movlb	0	; select bank0
  1416  0079  0838               	movf	?_storeWordForTransfer+1,w
  1417  007A  00C5               	movwf	main@result+1
  1418  007B  0837               	movf	?_storeWordForTransfer,w
  1419  007C  00C4               	movwf	main@result
  1420  007D                     L1:	
  1421                           
  1422                           ;main.c: 172: summedTimerCount = 0x00000000;
  1423  007D  3000               	movlw	0
  1424  007E  00AF               	movwf	_summedTimerCount+3
  1425  007F  3000               	movlw	0
  1426  0080  00AE               	movwf	_summedTimerCount+2
  1427  0081  3000               	movlw	0
  1428  0082  00AD               	movwf	_summedTimerCount+1
  1429  0083  3000               	movlw	0
  1430  0084  00AC               	movwf	_summedTimerCount
  1431                           
  1432                           ;main.c: 173: loopCount = 1<<1;
  1433  0085  3002               	movlw	2
  1434  0086  00C6               	movwf	main@loopCount
  1435  0087  3000               	movlw	0
  1436  0088  00C7               	movwf	main@loopCount+1
  1437                           
  1438                           ;main.c: 174: minTimerCount = 0xFFFF;
  1439  0089  30FF               	movlw	255
  1440  008A  00B2               	movwf	_minTimerCount
  1441  008B  30FF               	movlw	255
  1442  008C  00B3               	movwf	_minTimerCount+1
  1443                           
  1444                           ;main.c: 175: maxTimerCount = 0x0000;
  1445  008D  01B0               	clrf	_maxTimerCount
  1446  008E  01B1               	clrf	_maxTimerCount+1
  1447  008F  2839               	goto	l1376
  1448  0090                     __end_of_main:	
  1449                           ;main.c: 176: }
  1450                           ;main.c: 177: }
  1451                           ;main.c: 178: TMR1_StopTimer();
  1452                           
  1453                           
  1454                           	psect	text1
  1455  00F2                     __ptext1:	
  1456 ;; *************** function _takeReading *****************
  1457 ;; Defined at:
  1458 ;;		line 103 in file "main.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  i               2    7[BANK0 ] int 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0, pclath, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1472 ;;      Params:         0       0       0       0
  1473 ;;      Locals:         0       2       0       0
  1474 ;;      Temps:          0       1       0       0
  1475 ;;      Totals:         0       3       0       0
  1476 ;;Total ram usage:        3 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    6
  1479 ;; This function calls:
  1480 ;;		_globalInterruptDisable
  1481 ;;		_resetTimer
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           
  1488                           ;psect for function _takeReading
  1489  00F2                     _takeReading:	
  1490                           
  1491                           ;main.c: 106: globalInterruptDisable();
  1492                           
  1493                           ;incstack = 0
  1494                           ; Regs used in _takeReading: [wreg+status,2+status,0+pclath+cstack]
  1495  00F2  21F4               	fcall	_globalInterruptDisable
  1496                           
  1497                           ;main.c: 108: RA4 = 0;
  1498  00F3  0020               	movlb	0	; select bank0
  1499  00F4  120C               	bcf	12,4	;volatile
  1500                           
  1501                           ;main.c: 109: TRISA4 = 0;
  1502  00F5  0021               	movlb	1	; select bank1
  1503  00F6  120C               	bcf	12,4	;volatile
  1504                           
  1505                           ;main.c: 110: RA4 = 1;
  1506  00F7  0020               	movlb	0	; select bank0
  1507  00F8  160C               	bsf	12,4	;volatile
  1508                           
  1509                           ;main.c: 113: for (int i=0; i<1; i++)
  1510  00F9  01BC               	clrf	takeReading@i
  1511  00FA  01BD               	clrf	takeReading@i+1
  1512  00FB  083D               	movf	takeReading@i+1,w
  1513  00FC  3A80               	xorlw	128
  1514  00FD  00BB               	movwf	??_takeReading
  1515  00FE  3080               	movlw	128
  1516  00FF  023B               	subwf	??_takeReading,w
  1517  0100  1D03               	skipz
  1518  0101  2904               	goto	u425
  1519  0102  3001               	movlw	1
  1520  0103  023C               	subwf	takeReading@i,w
  1521  0104                     u425:	
  1522  0104  1803               	btfsc	3,0
  1523  0105  2916               	goto	l79
  1524  0106                     l1332:	
  1525                           
  1526                           ;main.c: 114: {
  1527  0106  3001               	movlw	1
  1528  0107  0020               	movlb	0	; select bank0
  1529  0108  07BC               	addwf	takeReading@i,f
  1530  0109  3000               	movlw	0
  1531  010A  3DBD               	addwfc	takeReading@i+1,f
  1532  010B  083D               	movf	takeReading@i+1,w
  1533  010C  3A80               	xorlw	128
  1534  010D  00BB               	movwf	??_takeReading
  1535  010E  3080               	movlw	128
  1536  010F  023B               	subwf	??_takeReading,w
  1537  0110  1D03               	skipz
  1538  0111  2914               	goto	u435
  1539  0112  3001               	movlw	1
  1540  0113  023C               	subwf	takeReading@i,w
  1541  0114                     u435:	
  1542  0114  1C03               	skipc
  1543  0115  2906               	goto	l1332
  1544  0116                     l79:	
  1545                           
  1546                           ;main.c: 116: }
  1547                           ;main.c: 117: RA4 = 0;
  1548  0116  0020               	movlb	0	; select bank0
  1549  0117  120C               	bcf	12,4	;volatile
  1550                           
  1551                           ;main.c: 118: TRISA4 = 1;
  1552  0118  0021               	movlb	1	; select bank1
  1553  0119  160C               	bsf	12,4	;volatile
  1554                           
  1555                           ;main.c: 119: resetTimer();
  1556  011A  21D1               	fcall	_resetTimer
  1557                           
  1558                           ;main.c: 120: PINGDriverStatus.takingReading = 1;
  1559  011B  0020               	movlb	0	; select bank0
  1560  011C  14B4               	bsf	_PINGDriverStatus,1
  1561  011D  0008               	return
  1562  011E                     __end_of_takeReading:	
  1563                           
  1564                           	psect	text2
  1565  01D1                     __ptext2:	
  1566 ;; *************** function _resetTimer *****************
  1567 ;; Defined at:
  1568 ;;		line 40 in file "timers.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;		None
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;		None
  1573 ;; Return value:  Size  Location     Type
  1574 ;;                  1    wreg      void 
  1575 ;; Registers used:
  1576 ;;		wreg, status,2, status,0, pclath, cstack
  1577 ;; Tracked objects:
  1578 ;;		On entry : 0/0
  1579 ;;		On exit  : 0/0
  1580 ;;		Unchanged: 0/0
  1581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1582 ;;      Params:         0       0       0       0
  1583 ;;      Locals:         0       0       0       0
  1584 ;;      Temps:          0       0       0       0
  1585 ;;      Totals:         0       0       0       0
  1586 ;;Total ram usage:        0 bytes
  1587 ;; Hardware stack levels used:    1
  1588 ;; Hardware stack levels required when called:    5
  1589 ;; This function calls:
  1590 ;;		_TMR1_StartTimer
  1591 ;;		_TMR1_WriteTimer
  1592 ;;		_globalInterruptEnable
  1593 ;; This function is called by:
  1594 ;;		_takeReading
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function _resetTimer
  1601  01D1                     _resetTimer:	
  1602                           
  1603                           ;timers.c: 42: TMR1_WriteTimer(0);
  1604                           
  1605                           ;incstack = 0
  1606                           ; Regs used in _resetTimer: [wreg+status,2+status,0+pclath+cstack]
  1607  01D1  3000               	movlw	0
  1608  01D2  0020               	movlb	0	; select bank0
  1609  01D3  00B5               	movwf	TMR1_WriteTimer@value
  1610  01D4  00B6               	movwf	TMR1_WriteTimer@value+1
  1611  01D5  21A3               	fcall	_TMR1_WriteTimer
  1612                           
  1613                           ;timers.c: 43: globalInterruptEnable();
  1614  01D6  21E6               	fcall	_globalInterruptEnable
  1615                           
  1616                           ;timers.c: 44: TMR1_StartTimer();
  1617  01D7  21FF               	fcall	_TMR1_StartTimer
  1618  01D8  0008               	return
  1619  01D9                     __end_of_resetTimer:	
  1620                           
  1621                           	psect	text3
  1622  01A3                     __ptext3:	
  1623 ;; *************** function _TMR1_WriteTimer *****************
  1624 ;; Defined at:
  1625 ;;		line 26 in file "timers.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  value           2    0[BANK0 ] int 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  state           2    4[BANK0 ] int 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2, status,0, pclath, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1639 ;;      Params:         0       2       0       0
  1640 ;;      Locals:         0       2       0       0
  1641 ;;      Temps:          0       2       0       0
  1642 ;;      Totals:         0       6       0       0
  1643 ;;Total ram usage:        6 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    4
  1646 ;; This function calls:
  1647 ;;		_TMR1_StopTimer
  1648 ;; This function is called by:
  1649 ;;		_resetTimer
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _TMR1_WriteTimer
  1655  01A3                     _TMR1_WriteTimer:	
  1656                           
  1657                           ;timers.c: 28: int state = TMR1ON;
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2+status,0+pclath+cstack]
  1661  01A3  1003               	clrc
  1662  01A4  0020               	movlb	0	; select bank0
  1663  01A5  181B               	btfsc	27,0	;volatile
  1664  01A6  1403               	setc
  1665  01A7  3000               	movlw	0
  1666  01A8  3D09               	addwfc	9,w
  1667  01A9  00B7               	movwf	??_TMR1_WriteTimer
  1668  01AA  01B8               	clrf	??_TMR1_WriteTimer+1
  1669  01AB  0837               	movf	??_TMR1_WriteTimer,w
  1670  01AC  00B9               	movwf	TMR1_WriteTimer@state
  1671  01AD  0838               	movf	??_TMR1_WriteTimer+1,w
  1672  01AE  00BA               	movwf	TMR1_WriteTimer@state+1
  1673                           
  1674                           ;timers.c: 29: TMR1_StopTimer();
  1675  01AF  21FC               	fcall	_TMR1_StopTimer
  1676                           
  1677                           ;timers.c: 30: TMR1H = value>>8;
  1678  01B0  0020               	movlb	0	; select bank0
  1679  01B1  0836               	movf	TMR1_WriteTimer@value+1,w
  1680  01B2  009A               	movwf	26	;volatile
  1681                           
  1682                           ;timers.c: 31: TMR1L = value&0xFF;
  1683  01B3  0835               	movf	TMR1_WriteTimer@value,w
  1684  01B4  0099               	movwf	25	;volatile
  1685                           
  1686                           ;timers.c: 32: TMR1ON = state;
  1687  01B5  1C39               	btfss	TMR1_WriteTimer@state,0
  1688  01B6  29BA               	goto	u390
  1689  01B7  0020               	movlb	0	; select bank0
  1690  01B8  141B               	bsf	27,0	;volatile
  1691  01B9  0008               	return
  1692  01BA                     u390:	
  1693  01BA  0020               	movlb	0	; select bank0
  1694  01BB  101B               	bcf	27,0	;volatile
  1695  01BC  0008               	return
  1696  01BD                     __end_of_TMR1_WriteTimer:	
  1697                           
  1698                           	psect	text4
  1699  01FC                     __ptext4:	
  1700 ;; *************** function _TMR1_StopTimer *****************
  1701 ;; Defined at:
  1702 ;;		line 21 in file "timers.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		None
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1716 ;;      Params:         0       0       0       0
  1717 ;;      Locals:         0       0       0       0
  1718 ;;      Temps:          0       0       0       0
  1719 ;;      Totals:         0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    3
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;;		_TMR1_WriteTimer
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           
  1732                           ;psect for function _TMR1_StopTimer
  1733  01FC                     _TMR1_StopTimer:	
  1734                           
  1735                           ;timers.c: 23: TMR1ON = 0;
  1736                           
  1737                           ;incstack = 0
  1738                           ; Regs used in _TMR1_StopTimer: []
  1739  01FC  0020               	movlb	0	; select bank0
  1740  01FD  101B               	bcf	27,0	;volatile
  1741  01FE  0008               	return
  1742  01FF                     __end_of_TMR1_StopTimer:	
  1743                           
  1744                           	psect	text5
  1745  01FF                     __ptext5:	
  1746 ;; *************** function _TMR1_StartTimer *****************
  1747 ;; Defined at:
  1748 ;;		line 35 in file "timers.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		None
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1762 ;;      Params:         0       0       0       0
  1763 ;;      Locals:         0       0       0       0
  1764 ;;      Temps:          0       0       0       0
  1765 ;;      Totals:         0       0       0       0
  1766 ;;Total ram usage:        0 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    3
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_resetTimer
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _TMR1_StartTimer
  1778  01FF                     _TMR1_StartTimer:	
  1779                           
  1780                           ;timers.c: 37: TMR1ON = 1;
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _TMR1_StartTimer: []
  1784  01FF  0020               	movlb	0	; select bank0
  1785  0200  141B               	bsf	27,0	;volatile
  1786  0201  0008               	return
  1787  0202                     __end_of_TMR1_StartTimer:	
  1788                           
  1789                           	psect	text6
  1790  00C3                     __ptext6:	
  1791 ;; *************** function _storeWordForTransfer *****************
  1792 ;; Defined at:
  1793 ;;		line 52 in file "spi.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  data            2    2[BANK0 ] unsigned int 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  buf             2    6[BANK0 ] short 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  2    2[BANK0 ] int 
  1800 ;; Registers used:
  1801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1807 ;;      Params:         0       2       0       0
  1808 ;;      Locals:         0       2       0       0
  1809 ;;      Temps:          0       2       0       0
  1810 ;;      Totals:         0       6       0       0
  1811 ;;Total ram usage:        6 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    4
  1814 ;; This function calls:
  1815 ;;		_storeByteForTransfer
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           
  1822                           ;psect for function _storeWordForTransfer
  1823  00C3                     _storeWordForTransfer:	
  1824                           
  1825                           ;spi.c: 56: if (bufferCount == 6)
  1826                           
  1827                           ;incstack = 0
  1828                           ; Regs used in _storeWordForTransfer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1829  00C3  3006               	movlw	6
  1830  00C4  0679               	xorwf	_bufferCount,w
  1831  00C5  047A               	iorwf	_bufferCount+1,w
  1832  00C6  1D03               	btfss	3,2
  1833  00C7  28CE               	goto	l1344
  1834                           
  1835                           ;spi.c: 57: {
  1836                           ;spi.c: 58: return -1;
  1837  00C8  30FF               	movlw	255
  1838  00C9  0020               	movlb	0	; select bank0
  1839  00CA  00B7               	movwf	?_storeWordForTransfer
  1840  00CB  30FF               	movlw	255
  1841  00CC  00B8               	movwf	?_storeWordForTransfer+1
  1842  00CD  0008               	return
  1843  00CE                     l1344:	
  1844                           
  1845                           ;spi.c: 59: }
  1846                           ;spi.c: 60: short buf = data & 0xFF;
  1847  00CE  30FF               	movlw	255
  1848  00CF  0020               	movlb	0	; select bank0
  1849  00D0  0537               	andwf	storeWordForTransfer@data,w
  1850  00D1  00BB               	movwf	storeWordForTransfer@buf
  1851  00D2  3000               	movlw	0
  1852  00D3  0538               	andwf	storeWordForTransfer@data+1,w
  1853  00D4  00BC               	movwf	storeWordForTransfer@buf+1
  1854                           
  1855                           ;spi.c: 61: storeByteForTransfer(buf);
  1856  00D5  083C               	movf	storeWordForTransfer@buf+1,w
  1857  00D6  00B6               	movwf	storeByteForTransfer@data+1
  1858  00D7  083B               	movf	storeWordForTransfer@buf,w
  1859  00D8  00B5               	movwf	storeByteForTransfer@data
  1860  00D9  2188               	fcall	_storeByteForTransfer
  1861                           
  1862                           ;spi.c: 62: buf = (data >> 8) & 0xFF;
  1863  00DA  0020               	movlb	0	; select bank0
  1864  00DB  0838               	movf	storeWordForTransfer@data+1,w
  1865  00DC  00BA               	movwf	??_storeWordForTransfer+1
  1866  00DD  0837               	movf	storeWordForTransfer@data,w
  1867  00DE  00B9               	movwf	??_storeWordForTransfer
  1868  00DF  083A               	movf	??_storeWordForTransfer+1,w
  1869  00E0  00B9               	movwf	??_storeWordForTransfer
  1870  00E1  01BA               	clrf	??_storeWordForTransfer+1
  1871  00E2  30FF               	movlw	255
  1872  00E3  0539               	andwf	??_storeWordForTransfer,w
  1873  00E4  00BB               	movwf	storeWordForTransfer@buf
  1874  00E5  3000               	movlw	0
  1875  00E6  053A               	andwf	??_storeWordForTransfer+1,w
  1876  00E7  00BC               	movwf	storeWordForTransfer@buf+1
  1877                           
  1878                           ;spi.c: 63: storeByteForTransfer(buf);
  1879  00E8  083C               	movf	storeWordForTransfer@buf+1,w
  1880  00E9  00B6               	movwf	storeByteForTransfer@data+1
  1881  00EA  083B               	movf	storeWordForTransfer@buf,w
  1882  00EB  00B5               	movwf	storeByteForTransfer@data
  1883  00EC  2188               	fcall	_storeByteForTransfer
  1884                           
  1885                           ;spi.c: 64: PINGDriverStatus.bufferEmpty = 0;
  1886  00ED  0020               	movlb	0	; select bank0
  1887  00EE  1034               	bcf	_PINGDriverStatus,0
  1888                           
  1889                           ;spi.c: 65: return 0;
  1890  00EF  01B7               	clrf	?_storeWordForTransfer
  1891  00F0  01B8               	clrf	?_storeWordForTransfer+1
  1892  00F1  0008               	return
  1893  00F2                     __end_of_storeWordForTransfer:	
  1894                           
  1895                           	psect	text7
  1896  0188                     __ptext7:	
  1897 ;; *************** function _storeByteForTransfer *****************
  1898 ;; Defined at:
  1899 ;;		line 41 in file "spi.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  data            2    0[BANK0 ] unsigned short 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1913 ;;      Params:         0       2       0       0
  1914 ;;      Locals:         0       0       0       0
  1915 ;;      Temps:          0       0       0       0
  1916 ;;      Totals:         0       2       0       0
  1917 ;;Total ram usage:        2 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    3
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_storeWordForTransfer
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _storeByteForTransfer
  1929  0188                     _storeByteForTransfer:	
  1930                           
  1931                           ;spi.c: 43: dataBuffer[bufferCount] = data;
  1932                           
  1933                           ;incstack = 0
  1934                           ; Regs used in _storeByteForTransfer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1935  0188  3579               	lslf	_bufferCount,w
  1936  0189  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  1937  018A  0086               	movwf	6
  1938  018B  0187               	clrf	7
  1939  018C  0020               	movlb	0	; select bank0
  1940  018D  0835               	movf	storeByteForTransfer@data,w
  1941  018E  3FC0               	movwi [0]fsr1
  1942  018F  0836               	movf	storeByteForTransfer@data+1,w
  1943  0190  3FC1               	movwi [1]fsr1
  1944                           
  1945                           ;spi.c: 44: bufferCount++;
  1946  0191  3001               	movlw	1
  1947  0192  07F9               	addwf	_bufferCount,f
  1948  0193  3000               	movlw	0
  1949  0194  3DFA               	addwfc	_bufferCount+1,f
  1950                           
  1951                           ;spi.c: 45: if (bufferCount == 6)
  1952  0195  3006               	movlw	6
  1953  0196  0679               	xorwf	_bufferCount,w
  1954  0197  047A               	iorwf	_bufferCount+1,w
  1955  0198  1D03               	btfss	3,2
  1956  0199  0008               	return
  1957                           
  1958                           ;spi.c: 46: {
  1959                           ;spi.c: 48: SSP1BUF = dataBuffer[bufferCount-1];
  1960  019A  3579               	lslf	_bufferCount,w
  1961  019B  3EFE               	addlw	254
  1962  019C  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  1963  019D  0086               	movwf	6
  1964  019E  0187               	clrf	7
  1965  019F  0801               	movf	1,w
  1966  01A0  0024               	movlb	4	; select bank4
  1967  01A1  0091               	movwf	17	;volatile
  1968  01A2  0008               	return
  1969  01A3                     __end_of_storeByteForTransfer:	
  1970                           
  1971                           	psect	text8
  1972  0090                     __ptext8:	
  1973 ;; *************** function _initialize *****************
  1974 ;; Defined at:
  1975 ;;		line 59 in file "main.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1989 ;;      Params:         0       0       0       0
  1990 ;;      Locals:         0       0       0       0
  1991 ;;      Temps:          0       0       0       0
  1992 ;;      Totals:         0       0       0       0
  1993 ;;Total ram usage:        0 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    6
  1996 ;; This function calls:
  1997 ;;		_globalInterruptDisable
  1998 ;;		_globalInterruptEnable
  1999 ;;		_initializeInterrupts
  2000 ;;		_initializeSpi
  2001 ;;		_intializeTimers
  2002 ;; This function is called by:
  2003 ;;		_main
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           
  2008                           ;psect for function _initialize
  2009  0090                     _initialize:	
  2010                           
  2011                           ;main.c: 63: OSCFRQ = 0x6;
  2012                           
  2013                           ;incstack = 0
  2014                           ; Regs used in _initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2015  0090  3006               	movlw	6
  2016  0091  0032               	movlb	18	; select bank18
  2017  0092  009F               	movwf	31	;volatile
  2018                           
  2019                           ;main.c: 64: OSCCON1 = 0x0;
  2020  0093  0199               	clrf	25	;volatile
  2021                           
  2022                           ;main.c: 65: OSCCON2 = 0x0;
  2023  0094  019A               	clrf	26	;volatile
  2024                           
  2025                           ;main.c: 66: OSCCON3 = 0x0;
  2026  0095  019B               	clrf	27	;volatile
  2027                           
  2028                           ;main.c: 67: OSCEN = 0x64;
  2029  0096  3064               	movlw	100
  2030  0097  009D               	movwf	29	;volatile
  2031                           
  2032                           ;main.c: 68: INTCON = 0x0;
  2033  0098  018B               	clrf	11	;volatile
  2034                           
  2035                           ;main.c: 71: TRISA = 0x1F;
  2036  0099  301F               	movlw	31
  2037  009A  0021               	movlb	1	; select bank1
  2038  009B  008C               	movwf	12	;volatile
  2039                           
  2040                           ;main.c: 72: ANSELA = 0x00;
  2041  009C  0023               	movlb	3	; select bank3
  2042  009D  018C               	clrf	12	;volatile
  2043                           
  2044                           ;main.c: 73: WPUA = 0x00;
  2045  009E  0024               	movlb	4	; select bank4
  2046  009F  018C               	clrf	12	;volatile
  2047                           
  2048                           ;main.c: 74: ODCONA = 0x00;
  2049  00A0  0025               	movlb	5	; select bank5
  2050  00A1  018C               	clrf	12	;volatile
  2051                           
  2052                           ;main.c: 75: SLRCONA = 0x00;
  2053  00A2  0026               	movlb	6	; select bank6
  2054  00A3  018C               	clrf	12	;volatile
  2055                           
  2056                           ;main.c: 76: INLVLA = 0x00;
  2057  00A4  0027               	movlb	7	; select bank7
  2058  00A5  018C               	clrf	12	;volatile
  2059                           
  2060                           ;main.c: 79: globalInterruptDisable();
  2061  00A6  21F4               	fcall	_globalInterruptDisable
  2062                           
  2063                           ;main.c: 80: PPSLOCK = 0x55;
  2064  00A7  3055               	movlw	85
  2065  00A8  003C               	movlb	28	; select bank28
  2066  00A9  008F               	movwf	15	;volatile
  2067                           
  2068                           ;main.c: 81: PPSLOCK = 0xAA;
  2069  00AA  30AA               	movlw	170
  2070  00AB  008F               	movwf	15	;volatile
  2071                           
  2072                           ;main.c: 82: PPSLOCK = 0x00;
  2073  00AC  018F               	clrf	15	;volatile
  2074                           
  2075                           ;main.c: 84: SSP1CLKPPS = 0x1;
  2076  00AD  3001               	movlw	1
  2077  00AE  00A0               	movwf	32	;volatile
  2078                           
  2079                           ;main.c: 85: SSP1DATPPS = 0x2;
  2080  00AF  3002               	movlw	2
  2081  00B0  00A1               	movwf	33	;volatile
  2082                           
  2083                           ;main.c: 86: SSP1SSPPS = 0x0;
  2084  00B1  01A2               	clrf	34	;volatile
  2085                           
  2086                           ;main.c: 87: RA5PPS = 0x19;
  2087  00B2  3019               	movlw	25
  2088  00B3  003D               	movlb	29	; select bank29
  2089  00B4  0095               	movwf	21	;volatile
  2090                           
  2091                           ;main.c: 88: T1GPPS = 0x4;
  2092  00B5  3004               	movlw	4
  2093  00B6  003C               	movlb	28	; select bank28
  2094  00B7  0093               	movwf	19	;volatile
  2095                           
  2096                           ;main.c: 91: PPSLOCK = 0x55;
  2097  00B8  3055               	movlw	85
  2098  00B9  008F               	movwf	15	;volatile
  2099                           
  2100                           ;main.c: 92: PPSLOCK = 0xAA;
  2101  00BA  30AA               	movlw	170
  2102  00BB  008F               	movwf	15	;volatile
  2103                           
  2104                           ;main.c: 93: PPSLOCK = 0x1;
  2105  00BC  3001               	movlw	1
  2106  00BD  008F               	movwf	15	;volatile
  2107                           
  2108                           ;main.c: 95: globalInterruptEnable();
  2109  00BE  21E6               	fcall	_globalInterruptEnable
  2110                           
  2111                           ;main.c: 96: intializeTimers();
  2112  00BF  21D9               	fcall	_intializeTimers
  2113                           
  2114                           ;main.c: 97: initializeInterrupts();
  2115  00C0  21BD               	fcall	_initializeInterrupts
  2116                           
  2117                           ;main.c: 98: initializeSpi();
  2118  00C1  2146               	fcall	_initializeSpi
  2119  00C2  0008               	return
  2120  00C3                     __end_of_initialize:	
  2121                           
  2122                           	psect	text9
  2123  01D9                     __ptext9:	
  2124 ;; *************** function _intializeTimers *****************
  2125 ;; Defined at:
  2126 ;;		line 9 in file "timers.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2140 ;;      Params:         0       0       0       0
  2141 ;;      Locals:         0       0       0       0
  2142 ;;      Temps:          0       0       0       0
  2143 ;;      Totals:         0       0       0       0
  2144 ;;Total ram usage:        0 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    3
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_initialize
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _intializeTimers
  2156  01D9                     _intializeTimers:	
  2157                           
  2158                           ;timers.c: 12: T1CON = 0x0C;
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _intializeTimers: [wreg]
  2162  01D9  300C               	movlw	12
  2163  01DA  0020               	movlb	0	; select bank0
  2164  01DB  009B               	movwf	27	;volatile
  2165                           
  2166                           ;timers.c: 15: T1GCON = 0xC0;
  2167  01DC  30C0               	movlw	192
  2168  01DD  009C               	movwf	28	;volatile
  2169                           
  2170                           ;timers.c: 18: TMR1ON = 1;
  2171  01DE  141B               	bsf	27,0	;volatile
  2172  01DF  0008               	return
  2173  01E0                     __end_of_intializeTimers:	
  2174                           
  2175                           	psect	text10
  2176  0146                     __ptext10:	
  2177 ;; *************** function _initializeSpi *****************
  2178 ;; Defined at:
  2179 ;;		line 8 in file "spi.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  i               2    1[BANK0 ] int 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      void 
  2186 ;; Registers used:
  2187 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2193 ;;      Params:         0       0       0       0
  2194 ;;      Locals:         0       2       0       0
  2195 ;;      Temps:          0       1       0       0
  2196 ;;      Totals:         0       3       0       0
  2197 ;;Total ram usage:        3 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    3
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_initialize
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _initializeSpi
  2209  0146                     _initializeSpi:	
  2210                           
  2211                           ;spi.c: 11: SSP1CON1 = 0x0;
  2212                           
  2213                           ;incstack = 0
  2214                           ; Regs used in _initializeSpi: [wreg+fsr1l+fsr1h+status,2+status,0]
  2215  0146  0024               	movlb	4	; select bank4
  2216  0147  0195               	clrf	21	;volatile
  2217                           
  2218                           ;spi.c: 12: SSP1STAT = 0x0;
  2219  0148  0194               	clrf	20	;volatile
  2220                           
  2221                           ;spi.c: 13: SSP1CON1bits.SSPM = 0x4;
  2222  0149  0815               	movf	21,w	;volatile
  2223  014A  39F0               	andlw	-16
  2224  014B  3804               	iorlw	4
  2225  014C  0095               	movwf	21	;volatile
  2226                           
  2227                           ;spi.c: 14: SSP1CON3 = 0x0;
  2228  014D  0197               	clrf	23	;volatile
  2229                           
  2230                           ;spi.c: 15: SSP1CON1bits.SSPEN = 0x1;
  2231  014E  1695               	bsf	21,5	;volatile
  2232                           
  2233                           ;spi.c: 18: bufferCount = 0x0;
  2234  014F  01F9               	clrf	_bufferCount
  2235  0150  01FA               	clrf	_bufferCount+1
  2236                           
  2237                           ;spi.c: 19: for (int i=0; i<6; i++)
  2238  0151  0020               	movlb	0	; select bank0
  2239  0152  01B6               	clrf	initializeSpi@i
  2240  0153  01B7               	clrf	initializeSpi@i+1
  2241  0154                     L2:	
  2242  0154  0837               	movf	initializeSpi@i+1,w
  2243  0155  3A80               	xorlw	128
  2244  0156  00B5               	movwf	??_initializeSpi
  2245  0157  3080               	movlw	128
  2246  0158  0235               	subwf	??_initializeSpi,w
  2247  0159  1D03               	skipz
  2248  015A  295D               	goto	u225
  2249  015B  3006               	movlw	6
  2250  015C  0236               	subwf	initializeSpi@i,w
  2251  015D                     u225:	
  2252  015D  1803               	btfsc	3,0
  2253  015E  0008               	return
  2254                           
  2255                           ;spi.c: 20: {
  2256                           ;spi.c: 21: dataBuffer[i] = 0x0;
  2257  015F  0020               	movlb	0	; select bank0
  2258  0160  3536               	lslf	initializeSpi@i,w
  2259  0161  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  2260  0162  0086               	movwf	6
  2261  0163  0187               	clrf	7
  2262  0164  3000               	movlw	0
  2263  0165  3FC0               	movwi [0]fsr1
  2264  0166  3FC1               	movwi [1]fsr1
  2265  0167  3001               	movlw	1
  2266  0168  07B6               	addwf	initializeSpi@i,f
  2267  0169  3000               	movlw	0
  2268  016A  3DB7               	addwfc	initializeSpi@i+1,f
  2269  016B  2954               	goto	L2
  2270  016C                     __end_of_initializeSpi:	
  2271                           
  2272                           	psect	text11
  2273  01BD                     __ptext11:	
  2274 ;; *************** function _initializeInterrupts *****************
  2275 ;; Defined at:
  2276 ;;		line 6 in file "interrupts.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      void 
  2283 ;; Registers used:
  2284 ;;		status,2, status,0, pclath, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2290 ;;      Params:         0       0       0       0
  2291 ;;      Locals:         0       0       0       0
  2292 ;;      Temps:          0       0       0       0
  2293 ;;      Totals:         0       0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    5
  2297 ;; This function calls:
  2298 ;;		_clearAllFlags
  2299 ;;		_globalInterruptDisable
  2300 ;;		_globalInterruptEnable
  2301 ;;		_peripheralInterruptDisable
  2302 ;;		_peripheralInterruptEnable
  2303 ;; This function is called by:
  2304 ;;		_initialize
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _initializeInterrupts
  2310  01BD                     _initializeInterrupts:	
  2311                           
  2312                           ;interrupts.c: 8: globalInterruptDisable();
  2313                           
  2314                           ;incstack = 0
  2315                           ; Regs used in _initializeInterrupts: [status,2+status,0+pclath+cstack]
  2316  01BD  21F4               	fcall	_globalInterruptDisable
  2317                           
  2318                           ;interrupts.c: 9: peripheralInterruptDisable();
  2319  01BE  2202               	fcall	_peripheralInterruptDisable
  2320                           
  2321                           ;interrupts.c: 10: clearAllFlags();
  2322  01BF  21EB               	fcall	_clearAllFlags
  2323                           
  2324                           ;interrupts.c: 13: TMR1GIE = 1;
  2325  01C0  0021               	movlb	1	; select bank1
  2326  01C1  1791               	bsf	17,7	;volatile
  2327                           
  2328                           ;interrupts.c: 14: TMR1IE = 1;
  2329  01C2  1411               	bsf	17,0	;volatile
  2330                           
  2331                           ;interrupts.c: 17: SSP1IE = 1;
  2332  01C3  1591               	bsf	17,3	;volatile
  2333                           
  2334                           ;interrupts.c: 19: globalInterruptEnable();
  2335  01C4  21E6               	fcall	_globalInterruptEnable
  2336                           
  2337                           ;interrupts.c: 20: peripheralInterruptEnable();
  2338  01C5  21F0               	fcall	_peripheralInterruptEnable
  2339  01C6  0008               	return
  2340  01C7                     __end_of_initializeInterrupts:	
  2341                           
  2342                           	psect	text12
  2343  01F0                     __ptext12:	
  2344 ;; *************** function _peripheralInterruptEnable *****************
  2345 ;; Defined at:
  2346 ;;		line 49 in file "interrupts.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;		None
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;		None
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		None
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2360 ;;      Params:         0       0       0       0
  2361 ;;      Locals:         0       0       0       0
  2362 ;;      Temps:          0       0       0       0
  2363 ;;      Totals:         0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    3
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_initializeInterrupts
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _peripheralInterruptEnable
  2376  01F0                     _peripheralInterruptEnable:	
  2377                           
  2378                           ;interrupts.c: 52: PEIE = 1;
  2379                           
  2380                           ;incstack = 0
  2381                           ; Regs used in _peripheralInterruptEnable: []
  2382  01F0  170B               	bsf	11,6	;volatile
  2383                           
  2384                           ;interrupts.c: 53: IOCIE = 1;
  2385  01F1  0021               	movlb	1	; select bank1
  2386  01F2  1610               	bsf	16,4	;volatile
  2387  01F3  0008               	return
  2388  01F4                     __end_of_peripheralInterruptEnable:	
  2389                           
  2390                           	psect	text13
  2391  0202                     __ptext13:	
  2392 ;; *************** function _peripheralInterruptDisable *****************
  2393 ;; Defined at:
  2394 ;;		line 44 in file "interrupts.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		None
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2408 ;;      Params:         0       0       0       0
  2409 ;;      Locals:         0       0       0       0
  2410 ;;      Temps:          0       0       0       0
  2411 ;;      Totals:         0       0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    3
  2415 ;; This function calls:
  2416 ;;		Nothing
  2417 ;; This function is called by:
  2418 ;;		_initializeInterrupts
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           
  2423                           ;psect for function _peripheralInterruptDisable
  2424  0202                     _peripheralInterruptDisable:	
  2425                           
  2426                           ;interrupts.c: 46: PEIE = 0;
  2427                           
  2428                           ;incstack = 0
  2429                           ; Regs used in _peripheralInterruptDisable: []
  2430  0202  130B               	bcf	11,6	;volatile
  2431  0203  0008               	return
  2432  0204                     __end_of_peripheralInterruptDisable:	
  2433                           
  2434                           	psect	text14
  2435  01E6                     __ptext14:	
  2436 ;; *************** function _globalInterruptEnable *****************
  2437 ;; Defined at:
  2438 ;;		line 37 in file "interrupts.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		status,2, status,0, pclath, cstack
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2452 ;;      Params:         0       0       0       0
  2453 ;;      Locals:         0       0       0       0
  2454 ;;      Temps:          0       0       0       0
  2455 ;;      Totals:         0       0       0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used:    1
  2458 ;; Hardware stack levels required when called:    4
  2459 ;; This function calls:
  2460 ;;		_clearAllFlags
  2461 ;; This function is called by:
  2462 ;;		_initialize
  2463 ;;		_initializeInterrupts
  2464 ;;		_resetTimer
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function _globalInterruptEnable
  2470  01E6                     _globalInterruptEnable:	
  2471                           
  2472                           ;interrupts.c: 39: clearAllFlags();
  2473                           
  2474                           ;incstack = 0
  2475                           ; Regs used in _globalInterruptEnable: [status,2+status,0+pclath+cstack]
  2476  01E6  21EB               	fcall	_clearAllFlags
  2477                           
  2478                           ;interrupts.c: 40: TMR1GIE = 1;
  2479  01E7  0021               	movlb	1	; select bank1
  2480  01E8  1791               	bsf	17,7	;volatile
  2481                           
  2482                           ;interrupts.c: 41: GIE = 1;
  2483  01E9  178B               	bsf	11,7	;volatile
  2484  01EA  0008               	return
  2485  01EB                     __end_of_globalInterruptEnable:	
  2486                           
  2487                           	psect	text15
  2488  01EB                     __ptext15:	
  2489 ;; *************** function _clearAllFlags *****************
  2490 ;; Defined at:
  2491 ;;		line 24 in file "interrupts.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;                  1    wreg      void 
  2498 ;; Registers used:
  2499 ;;		None
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2505 ;;      Params:         0       0       0       0
  2506 ;;      Locals:         0       0       0       0
  2507 ;;      Temps:          0       0       0       0
  2508 ;;      Totals:         0       0       0       0
  2509 ;;Total ram usage:        0 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    3
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_initializeInterrupts
  2516 ;;		_globalInterruptEnable
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function _clearAllFlags
  2522  01EB                     _clearAllFlags:	
  2523                           
  2524                           ;interrupts.c: 26: TMR1GIF = 0;
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _clearAllFlags: []
  2528  01EB  0020               	movlb	0	; select bank0
  2529  01EC  1391               	bcf	17,7	;volatile
  2530                           
  2531                           ;interrupts.c: 27: SSP1IF = 0;
  2532  01ED  1191               	bcf	17,3	;volatile
  2533                           
  2534                           ;interrupts.c: 28: TMR1IF = 0;
  2535  01EE  1011               	bcf	17,0	;volatile
  2536  01EF  0008               	return
  2537  01F0                     __end_of_clearAllFlags:	
  2538                           
  2539                           	psect	text16
  2540  01F4                     __ptext16:	
  2541 ;; *************** function _globalInterruptDisable *****************
  2542 ;; Defined at:
  2543 ;;		line 31 in file "interrupts.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		None
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2557 ;;      Params:         0       0       0       0
  2558 ;;      Locals:         0       0       0       0
  2559 ;;      Temps:          0       0       0       0
  2560 ;;      Totals:         0       0       0       0
  2561 ;;Total ram usage:        0 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    3
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_initialize
  2568 ;;		_takeReading
  2569 ;;		_initializeInterrupts
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function _globalInterruptDisable
  2575  01F4                     _globalInterruptDisable:	
  2576                           
  2577                           ;interrupts.c: 33: TMR1GIE = 0;
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in _globalInterruptDisable: []
  2581  01F4  0021               	movlb	1	; select bank1
  2582  01F5  1391               	bcf	17,7	;volatile
  2583                           
  2584                           ;interrupts.c: 34: GIE = 0;
  2585  01F6  138B               	bcf	11,7	;volatile
  2586  01F7  0008               	return
  2587  01F8                     __end_of_globalInterruptDisable:	
  2588                           
  2589                           	psect	intentry
  2590  0004                     __pintentry:	
  2591 ;; *************** function _interruptManager *****************
  2592 ;; Defined at:
  2593 ;;		line 56 in file "interrupts.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2607 ;;      Params:         0       0       0       0
  2608 ;;      Locals:         0       0       0       0
  2609 ;;      Temps:          1       0       0       0
  2610 ;;      Totals:         1       0       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    2
  2614 ;; This function calls:
  2615 ;;		_spiInterrupt
  2616 ;;		_timer1GateInterrupt
  2617 ;; This function is called by:
  2618 ;;		Interrupt level 1
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622  0004                     _interruptManager:	
  2623                           
  2624                           ;incstack = 0
  2625                           ; Regs used in _interruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2626  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2627  0005  3180               	pagesel	$
  2628  0006  0020               	movlb	0	; select bank0
  2629  0007  087F               	movf	127,w
  2630  0008  00F6               	movwf	??_interruptManager
  2631                           
  2632                           ;interrupts.c: 58: if (TMR1GIE == 1 && TMR1GIF == 1)
  2633  0009  0021               	movlb	1	; select bank1
  2634  000A  1F91               	btfss	17,7	;volatile
  2635  000B  2810               	goto	i1l1206
  2636  000C  0020               	movlb	0	; select bank0
  2637  000D  1F91               	btfss	17,7	;volatile
  2638  000E  2810               	goto	i1l1206
  2639                           
  2640                           ;interrupts.c: 59: {
  2641                           ;interrupts.c: 61: timer1GateInterrupt();
  2642  000F  211E               	fcall	_timer1GateInterrupt
  2643  0010                     i1l1206:	
  2644                           
  2645                           ;interrupts.c: 62: }
  2646                           ;interrupts.c: 64: if (SSP1IE == 1 && SSP1IF == 1)
  2647  0010  0021               	movlb	1	; select bank1
  2648  0011  1D91               	btfss	17,3	;volatile
  2649  0012  2817               	goto	i1l151
  2650  0013  0020               	movlb	0	; select bank0
  2651  0014  1D91               	btfss	17,3	;volatile
  2652  0015  2817               	goto	i1l151
  2653                           
  2654                           ;interrupts.c: 65: {
  2655                           ;interrupts.c: 66: spiInterrupt();
  2656  0016  216C               	fcall	_spiInterrupt
  2657  0017                     i1l151:	
  2658  0017  0876               	movf	??_interruptManager,w
  2659  0018  0020               	movlb	0	; select bank0
  2660  0019  00FF               	movwf	127
  2661  001A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2662  001B  0009               	retfie
  2663  001C                     __end_of_interruptManager:	
  2664                           
  2665                           	psect	text18
  2666  011E                     __ptext18:	
  2667 ;; *************** function _timer1GateInterrupt *****************
  2668 ;; Defined at:
  2669 ;;		line 53 in file "timers.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  timerCount      2    4[COMMON] unsigned int 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2683 ;;      Params:         0       0       0       0
  2684 ;;      Locals:         2       0       0       0
  2685 ;;      Temps:          0       0       0       0
  2686 ;;      Totals:         2       0       0       0
  2687 ;;Total ram usage:        2 bytes
  2688 ;; Hardware stack levels used:    1
  2689 ;; Hardware stack levels required when called:    1
  2690 ;; This function calls:
  2691 ;;		_timer1Value
  2692 ;;		i1_globalInterruptDisable
  2693 ;; This function is called by:
  2694 ;;		_interruptManager
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _timer1GateInterrupt
  2700  011E                     _timer1GateInterrupt:	
  2701                           
  2702                           ;timers.c: 55: globalInterruptDisable();
  2703                           
  2704                           ;incstack = 0
  2705                           ; Regs used in _timer1GateInterrupt: [wreg+status,2+status,0+pclath+cstack]
  2706  011E  21F8               	fcall	i1_globalInterruptDisable
  2707                           
  2708                           ;timers.c: 56: unsigned int timerCount = timer1Value();
  2709  011F  21C7               	fcall	_timer1Value
  2710  0120  0871               	movf	?_timer1Value+1,w
  2711  0121  00F5               	movwf	timer1GateInterrupt@timerCount+1
  2712  0122  0870               	movf	?_timer1Value,w
  2713  0123  00F4               	movwf	timer1GateInterrupt@timerCount
  2714                           
  2715                           ;timers.c: 57: summedTimerCount += timerCount;
  2716  0124  0874               	movf	timer1GateInterrupt@timerCount,w
  2717  0125  0020               	movlb	0	; select bank0
  2718  0126  07AC               	addwf	_summedTimerCount,f
  2719  0127  0875               	movf	timer1GateInterrupt@timerCount+1,w
  2720  0128  3DAD               	addwfc	_summedTimerCount+1,f
  2721  0129  3000               	movlw	0
  2722  012A  3DAE               	addwfc	_summedTimerCount+2,f
  2723  012B  3DAF               	addwfc	_summedTimerCount+3,f
  2724                           
  2725                           ;timers.c: 60: if (timerCount < minTimerCount)
  2726  012C  0833               	movf	_minTimerCount+1,w
  2727  012D  0275               	subwf	timer1GateInterrupt@timerCount+1,w
  2728  012E  1D03               	skipz
  2729  012F  2932               	goto	u28_25
  2730  0130  0832               	movf	_minTimerCount,w
  2731  0131  0274               	subwf	timer1GateInterrupt@timerCount,w
  2732  0132                     u28_25:	
  2733  0132  1803               	skipnc
  2734  0133  2938               	goto	i1l198
  2735                           
  2736                           ;timers.c: 61: {
  2737                           ;timers.c: 62: minTimerCount = timerCount;
  2738  0134  0875               	movf	timer1GateInterrupt@timerCount+1,w
  2739  0135  00B3               	movwf	_minTimerCount+1
  2740  0136  0874               	movf	timer1GateInterrupt@timerCount,w
  2741  0137  00B2               	movwf	_minTimerCount
  2742  0138                     i1l198:	
  2743                           
  2744                           ;timers.c: 63: }
  2745                           ;timers.c: 64: if (timerCount > maxTimerCount)
  2746  0138  0875               	movf	timer1GateInterrupt@timerCount+1,w
  2747  0139  0231               	subwf	_maxTimerCount+1,w
  2748  013A  1D03               	skipz
  2749  013B  293E               	goto	u29_25
  2750  013C  0874               	movf	timer1GateInterrupt@timerCount,w
  2751  013D  0230               	subwf	_maxTimerCount,w
  2752  013E                     u29_25:	
  2753  013E  1803               	skipnc
  2754  013F  2944               	goto	i1l1142
  2755                           
  2756                           ;timers.c: 65: {
  2757                           ;timers.c: 66: maxTimerCount = timerCount;
  2758  0140  0875               	movf	timer1GateInterrupt@timerCount+1,w
  2759  0141  00B1               	movwf	_maxTimerCount+1
  2760  0142  0874               	movf	timer1GateInterrupt@timerCount,w
  2761  0143  00B0               	movwf	_maxTimerCount
  2762  0144                     i1l1142:	
  2763                           
  2764                           ;timers.c: 67: }
  2765                           ;timers.c: 68: PINGDriverStatus.takingReading = 0;
  2766  0144  10B4               	bcf	_PINGDriverStatus,1
  2767  0145  0008               	return
  2768  0146                     __end_of_timer1GateInterrupt:	
  2769                           
  2770                           	psect	text19
  2771  01F8                     __ptext19:	
  2772 ;; *************** function i1_globalInterruptDisable *****************
  2773 ;; Defined at:
  2774 ;;		line 31 in file "interrupts.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		None
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2788 ;;      Params:         0       0       0       0
  2789 ;;      Locals:         0       0       0       0
  2790 ;;      Temps:          0       0       0       0
  2791 ;;      Totals:         0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_timer1GateInterrupt
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function i1_globalInterruptDisable
  2803  01F8                     i1_globalInterruptDisable:	
  2804                           
  2805                           ;interrupts.c: 33: TMR1GIE = 0;
  2806                           
  2807                           ;incstack = 0
  2808                           ; Regs used in i1_globalInterruptDisable: []
  2809  01F8  0021               	movlb	1	; select bank1
  2810  01F9  1391               	bcf	17,7	;volatile
  2811                           
  2812                           ;interrupts.c: 34: GIE = 0;
  2813  01FA  138B               	bcf	11,7	;volatile
  2814  01FB  0008               	return
  2815  01FC                     __end_ofi1_globalInterruptDisable:	
  2816                           
  2817                           	psect	text20
  2818  01C7                     __ptext20:	
  2819 ;; *************** function _timer1Value *****************
  2820 ;; Defined at:
  2821 ;;		line 47 in file "timers.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  value           2    2[COMMON] int 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  2    0[COMMON] int 
  2828 ;; Registers used:
  2829 ;;		wreg
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2835 ;;      Params:         2       0       0       0
  2836 ;;      Locals:         2       0       0       0
  2837 ;;      Temps:          0       0       0       0
  2838 ;;      Totals:         4       0       0       0
  2839 ;;Total ram usage:        4 bytes
  2840 ;; Hardware stack levels used:    1
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_timer1GateInterrupt
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function _timer1Value
  2850  01C7                     _timer1Value:	
  2851                           
  2852                           ;timers.c: 49: int value = (TMR1H<<8) | TMR1L;
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _timer1Value: [wreg]
  2856  01C7  0020               	movlb	0	; select bank0
  2857  01C8  081A               	movf	26,w	;volatile
  2858  01C9  00F3               	movwf	timer1Value@value+1
  2859  01CA  0819               	movf	25,w	;volatile
  2860  01CB  00F2               	movwf	timer1Value@value
  2861                           
  2862                           ;timers.c: 50: return value;
  2863  01CC  0873               	movf	timer1Value@value+1,w
  2864  01CD  00F1               	movwf	?_timer1Value+1
  2865  01CE  0872               	movf	timer1Value@value,w
  2866  01CF  00F0               	movwf	?_timer1Value
  2867  01D0  0008               	return
  2868  01D1                     __end_of_timer1Value:	
  2869                           
  2870                           	psect	text21
  2871  016C                     __ptext21:	
  2872 ;; *************** function _spiInterrupt *****************
  2873 ;; Defined at:
  2874 ;;		line 25 in file "spi.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  command         2    2[COMMON] int 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2888 ;;      Params:         0       0       0       0
  2889 ;;      Locals:         2       0       0       0
  2890 ;;      Temps:          2       0       0       0
  2891 ;;      Totals:         4       0       0       0
  2892 ;;Total ram usage:        4 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_interruptManager
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           
  2902                           ;psect for function _spiInterrupt
  2903  016C                     _spiInterrupt:	
  2904                           
  2905                           ;spi.c: 28: int command = SSP1BUF;
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in _spiInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  2909  016C  0024               	movlb	4	; select bank4
  2910  016D  0811               	movf	17,w	;volatile
  2911  016E  00F0               	movwf	??_spiInterrupt
  2912  016F  01F1               	clrf	??_spiInterrupt+1
  2913  0170  0870               	movf	??_spiInterrupt,w
  2914  0171  00F2               	movwf	spiInterrupt@command
  2915  0172  0871               	movf	??_spiInterrupt+1,w
  2916  0173  00F3               	movwf	spiInterrupt@command+1
  2917                           
  2918                           ;spi.c: 29: bufferCount--;
  2919  0174  30FF               	movlw	255
  2920  0175  07F9               	addwf	_bufferCount,f
  2921  0176  30FF               	movlw	255
  2922  0177  3DFA               	addwfc	_bufferCount+1,f
  2923                           
  2924                           ;spi.c: 30: if (bufferCount == 0)
  2925  0178  0879               	movf	_bufferCount,w
  2926  0179  047A               	iorwf	_bufferCount+1,w
  2927  017A  1D03               	btfss	3,2
  2928  017B  297F               	goto	i1l1150
  2929                           
  2930                           ;spi.c: 31: {
  2931                           ;spi.c: 33: PINGDriverStatus.bufferEmpty = 1;
  2932  017C  0020               	movlb	0	; select bank0
  2933  017D  1434               	bsf	_PINGDriverStatus,0
  2934                           
  2935                           ;spi.c: 34: }
  2936  017E  0008               	return
  2937  017F                     i1l1150:	
  2938                           
  2939                           ;spi.c: 35: else
  2940                           ;spi.c: 36: {
  2941                           ;spi.c: 37: SSP1BUF = dataBuffer[bufferCount-1];
  2942  017F  3579               	lslf	_bufferCount,w
  2943  0180  3EFE               	addlw	254
  2944  0181  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  2945  0182  0086               	movwf	6
  2946  0183  0187               	clrf	7
  2947  0184  0801               	movf	1,w
  2948  0185  0024               	movlb	4	; select bank4
  2949  0186  0091               	movwf	17	;volatile
  2950  0187  0008               	return
  2951  0188                     __end_of_spiInterrupt:	
  2952  007E                     btemp	set	126	;btemp
  2953  007E                     int$flags	set	126
  2954  007E                     wtemp	set	126
  2955  007E                     wtemp0	set	126
  2956  0080                     wtemp1	set	128
  2957  0082                     wtemp2	set	130
  2958  0084                     wtemp3	set	132
  2959  0086                     wtemp4	set	134
  2960  0088                     wtemp5	set	136
  2961  007F                     wtemp6	set	127
  2962  007E                     ttemp	set	126
  2963  007E                     ttemp0	set	126
  2964  0081                     ttemp1	set	129
  2965  0084                     ttemp2	set	132
  2966  0087                     ttemp3	set	135
  2967  007F                     ttemp4	set	127
  2968  007E                     ltemp	set	126
  2969  007E                     ltemp0	set	126
  2970  0082                     ltemp1	set	130
  2971  0086                     ltemp2	set	134
  2972  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80     19      40
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interruptManager in COMMON

    _interruptManager->_timer1GateInterrupt
    _timer1GateInterrupt->_timer1Value

Critical Paths under _main in BANK0

    _main->_takeReading
    _resetTimer->_TMR1_WriteTimer
    _storeWordForTransfer->_storeByteForTransfer
    _initialize->_initializeSpi

Critical Paths under _interruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     996
                                              9 BANK0     10    10      0
                     _TMR1_StopTimer
                         _initialize
                         _resetTimer
               _storeWordForTransfer
                        _takeReading
 ---------------------------------------------------------------------------------
 (1) _takeReading                                          3     3      0     229
                                              6 BANK0      3     3      0
             _globalInterruptDisable
                         _resetTimer
 ---------------------------------------------------------------------------------
 (2) _resetTimer                                           0     0      0     161
                    _TMR1_StartTimer
                    _TMR1_WriteTimer
              _globalInterruptEnable
 ---------------------------------------------------------------------------------
 (3) _TMR1_WriteTimer                                      6     4      2     161
                                              0 BANK0      6     4      2
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (4) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _storeWordForTransfer                                 6     4      2     486
                                              2 BANK0      6     4      2
               _storeByteForTransfer
 ---------------------------------------------------------------------------------
 (2) _storeByteForTransfer                                 2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0      68
             _globalInterruptDisable
              _globalInterruptEnable
               _initializeInterrupts
                      _initializeSpi
                    _intializeTimers
 ---------------------------------------------------------------------------------
 (2) _intializeTimers                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializeSpi                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _initializeInterrupts                                 0     0      0       0
                      _clearAllFlags
             _globalInterruptDisable
              _globalInterruptEnable
         _peripheralInterruptDisable
          _peripheralInterruptEnable
 ---------------------------------------------------------------------------------
 (3) _peripheralInterruptEnable                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _peripheralInterruptDisable                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _globalInterruptEnable                                0     0      0       0
                      _clearAllFlags
 ---------------------------------------------------------------------------------
 (4) _clearAllFlags                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _globalInterruptDisable                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interruptManager                                     1     1      0     135
                                              6 COMMON     1     1      0
                       _spiInterrupt
                _timer1GateInterrupt
 ---------------------------------------------------------------------------------
 (6) _timer1GateInterrupt                                  2     2      0     134
                                              4 COMMON     2     2      0
                        _timer1Value
           i1_globalInterruptDisable
 ---------------------------------------------------------------------------------
 (7) i1_globalInterruptDisable                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _timer1Value                                          4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _spiInterrupt                                         4     4      0       1
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR1_StopTimer
   _initialize
     _globalInterruptDisable
     _globalInterruptEnable
       _clearAllFlags
     _initializeInterrupts
       _clearAllFlags
       _globalInterruptDisable
       _globalInterruptEnable
         _clearAllFlags
       _peripheralInterruptDisable
       _peripheralInterruptEnable
     _initializeSpi
     _intializeTimers
   _resetTimer
     _TMR1_StartTimer
     _TMR1_WriteTimer
       _TMR1_StopTimer
     _globalInterruptEnable
       _clearAllFlags
   _storeWordForTransfer
     _storeByteForTransfer
   _takeReading
     _globalInterruptDisable
     _resetTimer
       _TMR1_StartTimer
       _TMR1_WriteTimer
         _TMR1_StopTimer
       _globalInterruptEnable
         _clearAllFlags

 _interruptManager (ROOT)
   _spiInterrupt
   _timer1GateInterrupt
     _timer1Value
     i1_globalInterruptDisable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      34       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      28       6       50.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      34      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Jul 17 06:10:40 2016

                        __CFG_CP$OFF 0000                                   l79 0116  
                        __CFG_LVP$ON 0000                                  _GIE 005F  
                                _RA4 0064                                  u225 015D  
                                u425 0104                         __CFG_CPD$OFF 0000  
                                u435 0114                                  u390 01BA  
                                u475 0045                                  u485 0051  
                                wreg 0009      __size_of_globalInterruptDisable 0004  
                               l1332 0106                                 l1344 00CE  
                               l1384 0033                                 l1376 0039  
                               _PEIE 005E                                 _WPUA 020C  
        ?_peripheralInterruptDisable 0070                         __CFG_WRT$OFF 0000  
                               _main 002B                                 fsr0h 0005  
                               fsr1h 0007                                 fsr0l 0004  
                               indf0 0000                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                      __CFG_BOREN$ON 0000                                 ltemp 007E  
           __end_of_interruptManager 001C                        __CFG_BORV$LOW 0000  
      __size_of_storeWordForTransfer 002F                                 start 001C  
                               ttemp 007E                                 wtemp 007E  
                      __CFG_CSWEN$ON 0000                        __CFG_MCLRE$ON 0000  
             ??_initializeInterrupts 0035                                ?_main 0070  
                      __CFG_WDTE$OFF 0000                      _TMR1_StartTimer 01FF  
                              _T1CON 001B                                _IOCIE 0484  
                     __CFG_DEBUG$OFF 0000                                i1l151 0017  
                              i1l198 0138                                _OSCEN 091D  
                              _TMR1H 001A                                _TMR1L 0019  
                              u28_25 0132                                u29_25 013E  
                              _TRISA 008C                        __CFG_PWRTE$ON 0000  
         ??i1_globalInterruptDisable 0070                       __CFG_FCMEN$OFF 0000  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                __end_of_clearAllFlags 01F0  
                    _TMR1_WriteTimer 01A3                         ?_takeReading 0070  
                    __initialization 001D               _globalInterruptDisable 01F4  
                       __end_of_main 0090                               ??_main 003E  
                      _maxTimerCount 0030                               _ANSELA 018C  
                             _T1GCON 001C                               _T1GPPS 0E13  
                             _RA5PPS 0E95                               i1l1150 017F  
                             i1l1142 0144                               i1l1206 0010  
                             _ODCONA 028C                               _INLVLA 038C  
                             _INTCON 000B                               _OSCFRQ 091F  
                             _TMR1IE 0488                               _TMR1IF 0088  
                             _TMR1ON 00D8                               _SSP1IE 048B  
                             _SSP1IF 008B                               _TRISA4 0464  
       __end_of_storeByteForTransfer 01A3                        main@loopCount 0046  
            __end_of_TMR1_StartTimer 0202                         ?_timer1Value 0070  
                     __CFG_STVREN$ON 0000       __size_of_globalInterruptEnable 0005  
      __end_of_globalInterruptEnable 01EB           ?_peripheralInterruptEnable 0070  
             __size_of_initializeSpi 0026              __end_of_TMR1_WriteTimer 01BD  
            __end_of__initialization 0028                        _minTimerCount 0032  
                     __pcstackCOMMON 0070             __size_of_intializeTimers 0007  
                   timer1Value@value 0072                           _dataBuffer 0020  
       __size_of_timer1GateInterrupt 0028                           __pbssBANK0 0020  
                  ?_interruptManager 0070                           __pmaintext 002B  
                      _initializeSpi 0146                 __size_of_takeReading 002C  
                 ??_interruptManager 0076                     ?_TMR1_StartTimer 0070  
                         __pintentry 0004                  __CFG_RSTOSC$HFINT32 0000  
            __size_of_TMR1_StopTimer 0003         __end_of_storeWordForTransfer 00F2  
               _storeByteForTransfer 0188                              _OSCCON1 0919  
                            _OSCCON2 091A                              _OSCCON3 091B  
                            _TMR1GIE 048F                              _TMR1GIF 008F  
                            _SLRCONA 030C                              _PPSLOCK 0E0F  
                            _SSP1BUF 0211                     ?_TMR1_WriteTimer 0035  
            ?_globalInterruptDisable 0070                       ?_initializeSpi 0070  
      __size_of_initializeInterrupts 000A                 __size_of_timer1Value 000A  
                         _initialize 0090                              __ptext1 00F2  
                            __ptext2 01D1                              __ptext3 01A3  
                            __ptext4 01FC                              __ptext5 01FF  
                            __ptext6 00C3                              __ptext7 0188  
                            __ptext8 0090                              __ptext9 01D9  
                      ?_spiInterrupt 0070                    ??_intializeTimers 0035  
              ?_storeByteForTransfer 0035                              clrloop0 01E1  
                            main@val 0042                 end_of_initialization 0028  
     __end_of_globalInterruptDisable 01F8                     _PINGDriverStatus 0034  
                         _resetTimer 01D1    __size_ofi1_globalInterruptDisable 0004  
          ?i1_globalInterruptDisable 0070                       ??_spiInterrupt 0070  
                          _SSP1SSPPS 0E22               __size_of_clearAllFlags 0005  
        ??_peripheralInterruptEnable 0035                     __CFG_FEXTOSC$OFF 0000  
               TMR1_WriteTimer@value 0035                 TMR1_WriteTimer@state 0039  
                    ??_initializeSpi 0035                 _storeWordForTransfer 00C3  
                         main@result 0044                  _timer1GateInterrupt 011E  
                        ?_initialize 0070                       _TMR1_StopTimer 01FC  
             ??_storeByteForTransfer 0037                  start_initialization 001D  
              _globalInterruptEnable 01E6                 ?_timer1GateInterrupt 0070  
                       takeReading@i 003C         ??_peripheralInterruptDisable 0035  
              ?_storeWordForTransfer 0037                        _clearAllFlags 01EB  
          _peripheralInterruptEnable 01F0                          ?_resetTimer 0070  
                   __CFG_LPBOREN$OFF 0000               __end_of_TMR1_StopTimer 01FF  
          __size_of_interruptManager 0018                          __pbssCOMMON 0077  
                          ___latbits 0000  __size_of_peripheralInterruptDisable 0002  
                      __pcstackBANK0 0035                ??_timer1GateInterrupt 0074  
      timer1GateInterrupt@timerCount 0074                 __end_of_spiInterrupt 0188  
                __size_of_initialize 0033                       ?_clearAllFlags 0070  
                      ??_takeReading 003B                  spiInterrupt@command 0072  
                    _intializeTimers 01D9                      ?_TMR1_StopTimer 0070  
                   __CFG_PPS1WAY$OFF 0000             __size_of_TMR1_StartTimer 0003  
             ?_globalInterruptEnable 0070                  __size_of_resetTimer 0008  
   __end_ofi1_globalInterruptDisable 01FC             storeByteForTransfer@data 0035  
       __end_of_initializeInterrupts 01C7               ??_storeWordForTransfer 0039  
                          clear_ram0 01E0                          _bufferCount 0079  
           __size_of_TMR1_WriteTimer 001A                        ??_timer1Value 0072  
                           _SSP1CON1 0215                             _SSP1CON3 0217  
                           _SSP1STAT 0214                  __end_of_takeReading 011E  
                   _summedTimerCount 002C   __end_of_peripheralInterruptDisable 0204  
         _peripheralInterruptDisable 0202                      ??_clearAllFlags 0035  
            __end_of_intializeTimers 01E0                         ??_initialize 0038  
 __size_of_peripheralInterruptEnable 0004                  __end_of_timer1Value 01D1  
                   _interruptManager 0004                _TMR1_InterruptHandler 0077  
                           __ptext10 0146                             __ptext11 01BD  
                           __ptext20 01C7                             __ptext12 01F0  
                           __ptext21 016C                             __ptext13 0202  
                           __ptext14 01E6                             __ptext15 01EB  
                           __ptext16 01F4                             __ptext18 011E  
                           __ptext19 01F8                         _SSP1CON1bits 0215  
              __size_of_spiInterrupt 001C                     _timerValueStatus 007B  
                  ??_TMR1_StartTimer 0035             i1_globalInterruptDisable 01F8  
                      __size_of_main 0065                   __end_of_initialize 00C3  
                        _takeReading 00F2                         ??_resetTimer 003B  
              __end_of_initializeSpi 016C                             int$flags 007E  
               _initializeInterrupts 01BD                    ??_TMR1_WriteTimer 0037  
                     initializeSpi@i 0036                         _spiInterrupt 016C  
  __end_of_peripheralInterruptEnable 01F4        __size_of_storeByteForTransfer 001B  
           ??_globalInterruptDisable 0035                   __end_of_resetTimer 01D9  
                           intlevel1 0000                     ?_intializeTimers 0070  
                  __CFG_CLKOUTEN$OFF 0000                     ??_TMR1_StopTimer 0035  
                        _timer1Value 01C7                ?_initializeInterrupts 0070  
            ??_globalInterruptEnable 0035          __end_of_timer1GateInterrupt 0146  
                         _SSP1DATPPS 0E21                           _SSP1CLKPPS 0E20  
           storeWordForTransfer@data 0037              storeWordForTransfer@buf 003B  
