

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Sat Jul 16 18:06:21 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F18313
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     	;# 
    34  0001                     	;# 
    35  0002                     	;# 
    36  0003                     	;# 
    37  0004                     	;# 
    38  0005                     	;# 
    39  0006                     	;# 
    40  0007                     	;# 
    41  0008                     	;# 
    42  0009                     	;# 
    43  000A                     	;# 
    44  000B                     	;# 
    45  000C                     	;# 
    46  0010                     	;# 
    47  0011                     	;# 
    48  0012                     	;# 
    49  0013                     	;# 
    50  0014                     	;# 
    51  0015                     	;# 
    52  0016                     	;# 
    53  0017                     	;# 
    54  0018                     	;# 
    55  0019                     	;# 
    56  0019                     	;# 
    57  001A                     	;# 
    58  001B                     	;# 
    59  001C                     	;# 
    60  001D                     	;# 
    61  001E                     	;# 
    62  001F                     	;# 
    63  008C                     	;# 
    64  0090                     	;# 
    65  0091                     	;# 
    66  0092                     	;# 
    67  0093                     	;# 
    68  0094                     	;# 
    69  0097                     	;# 
    70  009B                     	;# 
    71  009B                     	;# 
    72  009C                     	;# 
    73  009D                     	;# 
    74  009E                     	;# 
    75  009F                     	;# 
    76  010C                     	;# 
    77  0111                     	;# 
    78  0112                     	;# 
    79  0115                     	;# 
    80  0116                     	;# 
    81  0117                     	;# 
    82  0118                     	;# 
    83  0119                     	;# 
    84  018C                     	;# 
    85  0197                     	;# 
    86  0199                     	;# 
    87  0199                     	;# 
    88  0199                     	;# 
    89  019A                     	;# 
    90  019A                     	;# 
    91  019A                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019B                     	;# 
    96  019B                     	;# 
    97  019C                     	;# 
    98  019C                     	;# 
    99  019C                     	;# 
   100  019D                     	;# 
   101  019D                     	;# 
   102  019D                     	;# 
   103  019E                     	;# 
   104  019E                     	;# 
   105  019E                     	;# 
   106  019F                     	;# 
   107  019F                     	;# 
   108  019F                     	;# 
   109  019F                     	;# 
   110  019F                     	;# 
   111  020C                     	;# 
   112  0211                     	;# 
   113  0211                     	;# 
   114  0212                     	;# 
   115  0212                     	;# 
   116  0213                     	;# 
   117  0213                     	;# 
   118  0214                     	;# 
   119  0214                     	;# 
   120  0215                     	;# 
   121  0215                     	;# 
   122  0215                     	;# 
   123  0215                     	;# 
   124  0216                     	;# 
   125  0216                     	;# 
   126  0217                     	;# 
   127  0217                     	;# 
   128  028C                     	;# 
   129  0291                     	;# 
   130  0291                     	;# 
   131  0292                     	;# 
   132  0293                     	;# 
   133  0294                     	;# 
   134  0295                     	;# 
   135  0295                     	;# 
   136  0296                     	;# 
   137  0297                     	;# 
   138  0298                     	;# 
   139  029F                     	;# 
   140  030C                     	;# 
   141  038C                     	;# 
   142  0391                     	;# 
   143  0392                     	;# 
   144  0393                     	;# 
   145  039A                     	;# 
   146  039C                     	;# 
   147  039D                     	;# 
   148  039E                     	;# 
   149  039F                     	;# 
   150  040C                     	;# 
   151  041F                     	;# 
   152  048C                     	;# 
   153  0498                     	;# 
   154  0498                     	;# 
   155  0499                     	;# 
   156  049A                     	;# 
   157  049B                     	;# 
   158  049B                     	;# 
   159  049C                     	;# 
   160  049D                     	;# 
   161  049E                     	;# 
   162  049F                     	;# 
   163  0617                     	;# 
   164  0618                     	;# 
   165  0619                     	;# 
   166  0619                     	;# 
   167  061A                     	;# 
   168  061B                     	;# 
   169  061C                     	;# 
   170  061C                     	;# 
   171  0691                     	;# 
   172  0692                     	;# 
   173  0693                     	;# 
   174  0694                     	;# 
   175  0695                     	;# 
   176  0696                     	;# 
   177  0697                     	;# 
   178  0698                     	;# 
   179  0699                     	;# 
   180  0891                     	;# 
   181  0891                     	;# 
   182  0892                     	;# 
   183  0893                     	;# 
   184  0893                     	;# 
   185  0894                     	;# 
   186  0895                     	;# 
   187  0896                     	;# 
   188  089B                     	;# 
   189  0911                     	;# 
   190  0912                     	;# 
   191  0913                     	;# 
   192  0914                     	;# 
   193  0915                     	;# 
   194  0916                     	;# 
   195  0918                     	;# 
   196  0919                     	;# 
   197  091A                     	;# 
   198  091B                     	;# 
   199  091C                     	;# 
   200  091D                     	;# 
   201  091E                     	;# 
   202  091F                     	;# 
   203  0E0F                     	;# 
   204  0E10                     	;# 
   205  0E11                     	;# 
   206  0E12                     	;# 
   207  0E13                     	;# 
   208  0E14                     	;# 
   209  0E15                     	;# 
   210  0E18                     	;# 
   211  0E1A                     	;# 
   212  0E1B                     	;# 
   213  0E1C                     	;# 
   214  0E20                     	;# 
   215  0E21                     	;# 
   216  0E22                     	;# 
   217  0E24                     	;# 
   218  0E25                     	;# 
   219  0E28                     	;# 
   220  0E29                     	;# 
   221  0E2A                     	;# 
   222  0E2B                     	;# 
   223  0E90                     	;# 
   224  0E91                     	;# 
   225  0E92                     	;# 
   226  0E94                     	;# 
   227  0E95                     	;# 
   228  0F0F                     	;# 
   229  0F10                     	;# 
   230  0F11                     	;# 
   231  0F12                     	;# 
   232  0F13                     	;# 
   233  0F14                     	;# 
   234  0F15                     	;# 
   235  0F16                     	;# 
   236  0F17                     	;# 
   237  0F18                     	;# 
   238  0F19                     	;# 
   239  0F1A                     	;# 
   240  0F1B                     	;# 
   241  0F1C                     	;# 
   242  0F1D                     	;# 
   243  0F1E                     	;# 
   244  0F1F                     	;# 
   245  0F20                     	;# 
   246  0F21                     	;# 
   247  0F22                     	;# 
   248  0F23                     	;# 
   249  0FE4                     	;# 
   250  0FE5                     	;# 
   251  0FE6                     	;# 
   252  0FE7                     	;# 
   253  0FE8                     	;# 
   254  0FE9                     	;# 
   255  0FEA                     	;# 
   256  0FEB                     	;# 
   257  0FED                     	;# 
   258  0FEE                     	;# 
   259  0FEF                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  0010                     	;# 
   274  0011                     	;# 
   275  0012                     	;# 
   276  0013                     	;# 
   277  0014                     	;# 
   278  0015                     	;# 
   279  0016                     	;# 
   280  0017                     	;# 
   281  0018                     	;# 
   282  0019                     	;# 
   283  0019                     	;# 
   284  001A                     	;# 
   285  001B                     	;# 
   286  001C                     	;# 
   287  001D                     	;# 
   288  001E                     	;# 
   289  001F                     	;# 
   290  008C                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0097                     	;# 
   297  009B                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  0111                     	;# 
   305  0112                     	;# 
   306  0115                     	;# 
   307  0116                     	;# 
   308  0117                     	;# 
   309  0118                     	;# 
   310  0119                     	;# 
   311  018C                     	;# 
   312  0197                     	;# 
   313  0199                     	;# 
   314  0199                     	;# 
   315  0199                     	;# 
   316  019A                     	;# 
   317  019A                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019C                     	;# 
   325  019C                     	;# 
   326  019C                     	;# 
   327  019D                     	;# 
   328  019D                     	;# 
   329  019D                     	;# 
   330  019E                     	;# 
   331  019E                     	;# 
   332  019E                     	;# 
   333  019F                     	;# 
   334  019F                     	;# 
   335  019F                     	;# 
   336  019F                     	;# 
   337  019F                     	;# 
   338  020C                     	;# 
   339  0211                     	;# 
   340  0211                     	;# 
   341  0212                     	;# 
   342  0212                     	;# 
   343  0213                     	;# 
   344  0213                     	;# 
   345  0214                     	;# 
   346  0214                     	;# 
   347  0215                     	;# 
   348  0215                     	;# 
   349  0215                     	;# 
   350  0215                     	;# 
   351  0216                     	;# 
   352  0216                     	;# 
   353  0217                     	;# 
   354  0217                     	;# 
   355  028C                     	;# 
   356  0291                     	;# 
   357  0291                     	;# 
   358  0292                     	;# 
   359  0293                     	;# 
   360  0294                     	;# 
   361  0295                     	;# 
   362  0295                     	;# 
   363  0296                     	;# 
   364  0297                     	;# 
   365  0298                     	;# 
   366  029F                     	;# 
   367  030C                     	;# 
   368  038C                     	;# 
   369  0391                     	;# 
   370  0392                     	;# 
   371  0393                     	;# 
   372  039A                     	;# 
   373  039C                     	;# 
   374  039D                     	;# 
   375  039E                     	;# 
   376  039F                     	;# 
   377  040C                     	;# 
   378  041F                     	;# 
   379  048C                     	;# 
   380  0498                     	;# 
   381  0498                     	;# 
   382  0499                     	;# 
   383  049A                     	;# 
   384  049B                     	;# 
   385  049B                     	;# 
   386  049C                     	;# 
   387  049D                     	;# 
   388  049E                     	;# 
   389  049F                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  0619                     	;# 
   394  061A                     	;# 
   395  061B                     	;# 
   396  061C                     	;# 
   397  061C                     	;# 
   398  0691                     	;# 
   399  0692                     	;# 
   400  0693                     	;# 
   401  0694                     	;# 
   402  0695                     	;# 
   403  0696                     	;# 
   404  0697                     	;# 
   405  0698                     	;# 
   406  0699                     	;# 
   407  0891                     	;# 
   408  0891                     	;# 
   409  0892                     	;# 
   410  0893                     	;# 
   411  0893                     	;# 
   412  0894                     	;# 
   413  0895                     	;# 
   414  0896                     	;# 
   415  089B                     	;# 
   416  0911                     	;# 
   417  0912                     	;# 
   418  0913                     	;# 
   419  0914                     	;# 
   420  0915                     	;# 
   421  0916                     	;# 
   422  0918                     	;# 
   423  0919                     	;# 
   424  091A                     	;# 
   425  091B                     	;# 
   426  091C                     	;# 
   427  091D                     	;# 
   428  091E                     	;# 
   429  091F                     	;# 
   430  0E0F                     	;# 
   431  0E10                     	;# 
   432  0E11                     	;# 
   433  0E12                     	;# 
   434  0E13                     	;# 
   435  0E14                     	;# 
   436  0E15                     	;# 
   437  0E18                     	;# 
   438  0E1A                     	;# 
   439  0E1B                     	;# 
   440  0E1C                     	;# 
   441  0E20                     	;# 
   442  0E21                     	;# 
   443  0E22                     	;# 
   444  0E24                     	;# 
   445  0E25                     	;# 
   446  0E28                     	;# 
   447  0E29                     	;# 
   448  0E2A                     	;# 
   449  0E2B                     	;# 
   450  0E90                     	;# 
   451  0E91                     	;# 
   452  0E92                     	;# 
   453  0E94                     	;# 
   454  0E95                     	;# 
   455  0F0F                     	;# 
   456  0F10                     	;# 
   457  0F11                     	;# 
   458  0F12                     	;# 
   459  0F13                     	;# 
   460  0F14                     	;# 
   461  0F15                     	;# 
   462  0F16                     	;# 
   463  0F17                     	;# 
   464  0F18                     	;# 
   465  0F19                     	;# 
   466  0F1A                     	;# 
   467  0F1B                     	;# 
   468  0F1C                     	;# 
   469  0F1D                     	;# 
   470  0F1E                     	;# 
   471  0F1F                     	;# 
   472  0F20                     	;# 
   473  0F21                     	;# 
   474  0F22                     	;# 
   475  0F23                     	;# 
   476  0FE4                     	;# 
   477  0FE5                     	;# 
   478  0FE6                     	;# 
   479  0FE7                     	;# 
   480  0FE8                     	;# 
   481  0FE9                     	;# 
   482  0FEA                     	;# 
   483  0FEB                     	;# 
   484  0FED                     	;# 
   485  0FEE                     	;# 
   486  0FEF                     	;# 
   487  0000                     	;# 
   488  0001                     	;# 
   489  0002                     	;# 
   490  0003                     	;# 
   491  0004                     	;# 
   492  0005                     	;# 
   493  0006                     	;# 
   494  0007                     	;# 
   495  0008                     	;# 
   496  0009                     	;# 
   497  000A                     	;# 
   498  000B                     	;# 
   499  000C                     	;# 
   500  0010                     	;# 
   501  0011                     	;# 
   502  0012                     	;# 
   503  0013                     	;# 
   504  0014                     	;# 
   505  0015                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  0019                     	;# 
   511  001A                     	;# 
   512  001B                     	;# 
   513  001C                     	;# 
   514  001D                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  008C                     	;# 
   518  0090                     	;# 
   519  0091                     	;# 
   520  0092                     	;# 
   521  0093                     	;# 
   522  0094                     	;# 
   523  0097                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  009F                     	;# 
   530  010C                     	;# 
   531  0111                     	;# 
   532  0112                     	;# 
   533  0115                     	;# 
   534  0116                     	;# 
   535  0117                     	;# 
   536  0118                     	;# 
   537  0119                     	;# 
   538  018C                     	;# 
   539  0197                     	;# 
   540  0199                     	;# 
   541  0199                     	;# 
   542  0199                     	;# 
   543  019A                     	;# 
   544  019A                     	;# 
   545  019A                     	;# 
   546  019B                     	;# 
   547  019B                     	;# 
   548  019B                     	;# 
   549  019B                     	;# 
   550  019B                     	;# 
   551  019C                     	;# 
   552  019C                     	;# 
   553  019C                     	;# 
   554  019D                     	;# 
   555  019D                     	;# 
   556  019D                     	;# 
   557  019E                     	;# 
   558  019E                     	;# 
   559  019E                     	;# 
   560  019F                     	;# 
   561  019F                     	;# 
   562  019F                     	;# 
   563  019F                     	;# 
   564  019F                     	;# 
   565  020C                     	;# 
   566  0211                     	;# 
   567  0211                     	;# 
   568  0212                     	;# 
   569  0212                     	;# 
   570  0213                     	;# 
   571  0213                     	;# 
   572  0214                     	;# 
   573  0214                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0215                     	;# 
   577  0215                     	;# 
   578  0216                     	;# 
   579  0216                     	;# 
   580  0217                     	;# 
   581  0217                     	;# 
   582  028C                     	;# 
   583  0291                     	;# 
   584  0291                     	;# 
   585  0292                     	;# 
   586  0293                     	;# 
   587  0294                     	;# 
   588  0295                     	;# 
   589  0295                     	;# 
   590  0296                     	;# 
   591  0297                     	;# 
   592  0298                     	;# 
   593  029F                     	;# 
   594  030C                     	;# 
   595  038C                     	;# 
   596  0391                     	;# 
   597  0392                     	;# 
   598  0393                     	;# 
   599  039A                     	;# 
   600  039C                     	;# 
   601  039D                     	;# 
   602  039E                     	;# 
   603  039F                     	;# 
   604  040C                     	;# 
   605  041F                     	;# 
   606  048C                     	;# 
   607  0498                     	;# 
   608  0498                     	;# 
   609  0499                     	;# 
   610  049A                     	;# 
   611  049B                     	;# 
   612  049B                     	;# 
   613  049C                     	;# 
   614  049D                     	;# 
   615  049E                     	;# 
   616  049F                     	;# 
   617  0617                     	;# 
   618  0618                     	;# 
   619  0619                     	;# 
   620  0619                     	;# 
   621  061A                     	;# 
   622  061B                     	;# 
   623  061C                     	;# 
   624  061C                     	;# 
   625  0691                     	;# 
   626  0692                     	;# 
   627  0693                     	;# 
   628  0694                     	;# 
   629  0695                     	;# 
   630  0696                     	;# 
   631  0697                     	;# 
   632  0698                     	;# 
   633  0699                     	;# 
   634  0891                     	;# 
   635  0891                     	;# 
   636  0892                     	;# 
   637  0893                     	;# 
   638  0893                     	;# 
   639  0894                     	;# 
   640  0895                     	;# 
   641  0896                     	;# 
   642  089B                     	;# 
   643  0911                     	;# 
   644  0912                     	;# 
   645  0913                     	;# 
   646  0914                     	;# 
   647  0915                     	;# 
   648  0916                     	;# 
   649  0918                     	;# 
   650  0919                     	;# 
   651  091A                     	;# 
   652  091B                     	;# 
   653  091C                     	;# 
   654  091D                     	;# 
   655  091E                     	;# 
   656  091F                     	;# 
   657  0E0F                     	;# 
   658  0E10                     	;# 
   659  0E11                     	;# 
   660  0E12                     	;# 
   661  0E13                     	;# 
   662  0E14                     	;# 
   663  0E15                     	;# 
   664  0E18                     	;# 
   665  0E1A                     	;# 
   666  0E1B                     	;# 
   667  0E1C                     	;# 
   668  0E20                     	;# 
   669  0E21                     	;# 
   670  0E22                     	;# 
   671  0E24                     	;# 
   672  0E25                     	;# 
   673  0E28                     	;# 
   674  0E29                     	;# 
   675  0E2A                     	;# 
   676  0E2B                     	;# 
   677  0E90                     	;# 
   678  0E91                     	;# 
   679  0E92                     	;# 
   680  0E94                     	;# 
   681  0E95                     	;# 
   682  0F0F                     	;# 
   683  0F10                     	;# 
   684  0F11                     	;# 
   685  0F12                     	;# 
   686  0F13                     	;# 
   687  0F14                     	;# 
   688  0F15                     	;# 
   689  0F16                     	;# 
   690  0F17                     	;# 
   691  0F18                     	;# 
   692  0F19                     	;# 
   693  0F1A                     	;# 
   694  0F1B                     	;# 
   695  0F1C                     	;# 
   696  0F1D                     	;# 
   697  0F1E                     	;# 
   698  0F1F                     	;# 
   699  0F20                     	;# 
   700  0F21                     	;# 
   701  0F22                     	;# 
   702  0F23                     	;# 
   703  0FE4                     	;# 
   704  0FE5                     	;# 
   705  0FE6                     	;# 
   706  0FE7                     	;# 
   707  0FE8                     	;# 
   708  0FE9                     	;# 
   709  0FEA                     	;# 
   710  0FEB                     	;# 
   711  0FED                     	;# 
   712  0FEE                     	;# 
   713  0FEF                     	;# 
   714  0000                     	;# 
   715  0001                     	;# 
   716  0002                     	;# 
   717  0003                     	;# 
   718  0004                     	;# 
   719  0005                     	;# 
   720  0006                     	;# 
   721  0007                     	;# 
   722  0008                     	;# 
   723  0009                     	;# 
   724  000A                     	;# 
   725  000B                     	;# 
   726  000C                     	;# 
   727  0010                     	;# 
   728  0011                     	;# 
   729  0012                     	;# 
   730  0013                     	;# 
   731  0014                     	;# 
   732  0015                     	;# 
   733  0016                     	;# 
   734  0017                     	;# 
   735  0018                     	;# 
   736  0019                     	;# 
   737  0019                     	;# 
   738  001A                     	;# 
   739  001B                     	;# 
   740  001C                     	;# 
   741  001D                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  008C                     	;# 
   745  0090                     	;# 
   746  0091                     	;# 
   747  0092                     	;# 
   748  0093                     	;# 
   749  0094                     	;# 
   750  0097                     	;# 
   751  009B                     	;# 
   752  009B                     	;# 
   753  009C                     	;# 
   754  009D                     	;# 
   755  009E                     	;# 
   756  009F                     	;# 
   757  010C                     	;# 
   758  0111                     	;# 
   759  0112                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  018C                     	;# 
   766  0197                     	;# 
   767  0199                     	;# 
   768  0199                     	;# 
   769  0199                     	;# 
   770  019A                     	;# 
   771  019A                     	;# 
   772  019A                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  019C                     	;# 
   780  019C                     	;# 
   781  019D                     	;# 
   782  019D                     	;# 
   783  019D                     	;# 
   784  019E                     	;# 
   785  019E                     	;# 
   786  019E                     	;# 
   787  019F                     	;# 
   788  019F                     	;# 
   789  019F                     	;# 
   790  019F                     	;# 
   791  019F                     	;# 
   792  020C                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0215                     	;# 
   805  0216                     	;# 
   806  0216                     	;# 
   807  0217                     	;# 
   808  0217                     	;# 
   809  028C                     	;# 
   810  0291                     	;# 
   811  0291                     	;# 
   812  0292                     	;# 
   813  0293                     	;# 
   814  0294                     	;# 
   815  0295                     	;# 
   816  0295                     	;# 
   817  0296                     	;# 
   818  0297                     	;# 
   819  0298                     	;# 
   820  029F                     	;# 
   821  030C                     	;# 
   822  038C                     	;# 
   823  0391                     	;# 
   824  0392                     	;# 
   825  0393                     	;# 
   826  039A                     	;# 
   827  039C                     	;# 
   828  039D                     	;# 
   829  039E                     	;# 
   830  039F                     	;# 
   831  040C                     	;# 
   832  041F                     	;# 
   833  048C                     	;# 
   834  0498                     	;# 
   835  0498                     	;# 
   836  0499                     	;# 
   837  049A                     	;# 
   838  049B                     	;# 
   839  049B                     	;# 
   840  049C                     	;# 
   841  049D                     	;# 
   842  049E                     	;# 
   843  049F                     	;# 
   844  0617                     	;# 
   845  0618                     	;# 
   846  0619                     	;# 
   847  0619                     	;# 
   848  061A                     	;# 
   849  061B                     	;# 
   850  061C                     	;# 
   851  061C                     	;# 
   852  0691                     	;# 
   853  0692                     	;# 
   854  0693                     	;# 
   855  0694                     	;# 
   856  0695                     	;# 
   857  0696                     	;# 
   858  0697                     	;# 
   859  0698                     	;# 
   860  0699                     	;# 
   861  0891                     	;# 
   862  0891                     	;# 
   863  0892                     	;# 
   864  0893                     	;# 
   865  0893                     	;# 
   866  0894                     	;# 
   867  0895                     	;# 
   868  0896                     	;# 
   869  089B                     	;# 
   870  0911                     	;# 
   871  0912                     	;# 
   872  0913                     	;# 
   873  0914                     	;# 
   874  0915                     	;# 
   875  0916                     	;# 
   876  0918                     	;# 
   877  0919                     	;# 
   878  091A                     	;# 
   879  091B                     	;# 
   880  091C                     	;# 
   881  091D                     	;# 
   882  091E                     	;# 
   883  091F                     	;# 
   884  0E0F                     	;# 
   885  0E10                     	;# 
   886  0E11                     	;# 
   887  0E12                     	;# 
   888  0E13                     	;# 
   889  0E14                     	;# 
   890  0E15                     	;# 
   891  0E18                     	;# 
   892  0E1A                     	;# 
   893  0E1B                     	;# 
   894  0E1C                     	;# 
   895  0E20                     	;# 
   896  0E21                     	;# 
   897  0E22                     	;# 
   898  0E24                     	;# 
   899  0E25                     	;# 
   900  0E28                     	;# 
   901  0E29                     	;# 
   902  0E2A                     	;# 
   903  0E2B                     	;# 
   904  0E90                     	;# 
   905  0E91                     	;# 
   906  0E92                     	;# 
   907  0E94                     	;# 
   908  0E95                     	;# 
   909  0F0F                     	;# 
   910  0F10                     	;# 
   911  0F11                     	;# 
   912  0F12                     	;# 
   913  0F13                     	;# 
   914  0F14                     	;# 
   915  0F15                     	;# 
   916  0F16                     	;# 
   917  0F17                     	;# 
   918  0F18                     	;# 
   919  0F19                     	;# 
   920  0F1A                     	;# 
   921  0F1B                     	;# 
   922  0F1C                     	;# 
   923  0F1D                     	;# 
   924  0F1E                     	;# 
   925  0F1F                     	;# 
   926  0F20                     	;# 
   927  0F21                     	;# 
   928  0F22                     	;# 
   929  0F23                     	;# 
   930  0FE4                     	;# 
   931  0FE5                     	;# 
   932  0FE6                     	;# 
   933  0FE7                     	;# 
   934  0FE8                     	;# 
   935  0FE9                     	;# 
   936  0FEA                     	;# 
   937  0FEB                     	;# 
   938  0FED                     	;# 
   939  0FEE                     	;# 
   940  0FEF                     	;# 
   941  000B                     _INTCON	set	11
   942  001B                     _T1CON	set	27
   943  001C                     _T1GCON	set	28
   944  001A                     _TMR1H	set	26
   945  0019                     _TMR1L	set	25
   946  005F                     _GIE	set	95
   947  005E                     _PEIE	set	94
   948  0064                     _RA4	set	100
   949  008B                     _SSP1IF	set	139
   950  008F                     _TMR1GIF	set	143
   951  0088                     _TMR1IF	set	136
   952  00D8                     _TMR1ON	set	216
   953  008C                     _TRISA	set	140
   954  0484                     _IOCIE	set	1156
   955  048B                     _SSP1IE	set	1163
   956  048F                     _TMR1GIE	set	1167
   957  0488                     _TMR1IE	set	1160
   958  0464                     _TRISA4	set	1124
   959  018C                     _ANSELA	set	396
   960  0211                     _SSP1BUF	set	529
   961  0215                     _SSP1CON1	set	533
   962  0215                     _SSP1CON1bits	set	533
   963  0217                     _SSP1CON3	set	535
   964  0214                     _SSP1STAT	set	532
   965  020C                     _WPUA	set	524
   966  028C                     _ODCONA	set	652
   967  030C                     _SLRCONA	set	780
   968  038C                     _INLVLA	set	908
   969  0919                     _OSCCON1	set	2329
   970  091A                     _OSCCON2	set	2330
   971  091B                     _OSCCON3	set	2331
   972  091D                     _OSCEN	set	2333
   973  091F                     _OSCFRQ	set	2335
   974  0E0F                     _PPSLOCK	set	3599
   975  0E20                     _SSP1CLKPPS	set	3616
   976  0E21                     _SSP1DATPPS	set	3617
   977  0E22                     _SSP1SSPPS	set	3618
   978  0E13                     _T1GPPS	set	3603
   979  0E95                     _RA5PPS	set	3733
   980                           
   981                           ; #config settings
   982  0000                     
   983                           	psect	cinit
   984  001D                     start_initialization:	
   985  001D                     __initialization:	
   986                           
   987                           ; Clear objects allocated to COMMON
   988  001D  01F0               	clrf	__pbssCOMMON& (0+127)
   989  001E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   990  001F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   991  0020  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   992  0021  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   993  0022  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   994  0023  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   995                           
   996                           ; Clear objects allocated to BANK0
   997  0024  3020               	movlw	low __pbssBANK0
   998  0025  0084               	movwf	4
   999  0026  3000               	movlw	high __pbssBANK0
  1000  0027  0085               	movwf	5
  1001  0028  3013               	movlw	19
  1002  0029  21B6               	fcall	clear_ram0
  1003  002A                     end_of_initialization:	
  1004                           ;End of C runtime variable initialization code
  1005                           
  1006  002A                     __end_of__initialization:	
  1007  002A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1008  002B  0020               	movlb	0
  1009  002C  282D               	ljmp	_main	;jump to C main() function
  1010                           
  1011                           	psect	bssCOMMON
  1012  0070                     __pbssCOMMON:	
  1013  0070                     _bufferCount:	
  1014  0070                     	ds	2
  1015  0072                     _maxTimerCount:	
  1016  0072                     	ds	2
  1017  0074                     _minTimerCount:	
  1018  0074                     	ds	2
  1019  0076                     _timerValueStatus:	
  1020  0076                     	ds	1
  1021                           
  1022                           	psect	bssBANK0
  1023  0020                     __pbssBANK0:	
  1024  0020                     _dataBuffer:	
  1025  0020                     	ds	12
  1026  002C                     _summedTimerCount:	
  1027  002C                     	ds	4
  1028  0030                     _TMR1_InterruptHandler:	
  1029  0030                     	ds	2
  1030  0032                     _PINGDriverStatus:	
  1031  0032                     	ds	1
  1032                           
  1033                           	psect	clrtext
  1034  01B6                     clear_ram0:	
  1035                           ;	Called with FSR0 containing the base address, and
  1036                           ;	WREG with the size to clear
  1037                           
  1038  01B6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1039  01B7                     clrloop0:	
  1040  01B7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1041  01B8  3101               	addfsr 0,1
  1042  01B9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1043  01BA  29B7               	goto	clrloop0	;have we reached the end yet?
  1044  01BB  3400               	retlw	0	;all done for this memory range, return
  1045                           
  1046                           	psect	cstackCOMMON
  1047  0077                     __pcstackCOMMON:	
  1048  0077                     ?_globalInterruptDisable:	
  1049  0077                     ?_globalInterruptEnable:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0077                     ?_intializeTimers:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0077                     ?_initializeInterrupts:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0077                     ?_initializeSpi:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0077                     ?_resetTimer:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0077                     ?_TMR1_StopTimer:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0077                     ?_peripheralInterruptDisable:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0077                     ?_clearAllFlags:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0077                     ?_peripheralInterruptEnable:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0077                     ?_timer1GateInterrupt:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0077                     ?_spiInterrupt:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0077                     ??_spiInterrupt:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0077                     ?_initialize:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0077                     ?_takeReading:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0077                     ?_main:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0077                     ?_interruptManager:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0077                     ?_TMR1_StartTimer:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0077                     ?i1_globalInterruptDisable:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0077                     ??i1_globalInterruptDisable:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0077                     ?_timer1Value:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109                           
  1110                           ; 2 bytes @ 0x0
  1111  0077                     	ds	2
  1112  0079                     ??_timer1Value:	
  1113  0079                     timer1Value@value:	
  1114                           ; 1 bytes @ 0x2
  1115                           
  1116  0079                     spiInterrupt@command:	
  1117                           ; 2 bytes @ 0x2
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x2
  1121  0079                     	ds	2
  1122  007B                     ??_timer1GateInterrupt:	
  1123  007B                     timer1GateInterrupt@timerCount:	
  1124                           ; 1 bytes @ 0x4
  1125                           
  1126                           
  1127                           ; 2 bytes @ 0x4
  1128  007B                     	ds	2
  1129  007D                     ??_interruptManager:	
  1130                           
  1131                           ; 1 bytes @ 0x6
  1132  007D                     	ds	1
  1133                           
  1134                           	psect	cstackBANK0
  1135  0033                     __pcstackBANK0:	
  1136  0033                     ??_globalInterruptDisable:	
  1137  0033                     ??_globalInterruptEnable:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0033                     ??_intializeTimers:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0033                     ??_initializeInterrupts:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0033                     ??_initializeSpi:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0033                     ??_TMR1_StopTimer:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0033                     ??_peripheralInterruptDisable:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0033                     ??_clearAllFlags:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0033                     ??_peripheralInterruptEnable:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0033                     ?_TMR1_WriteTimer:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164  0033                     ??_TMR1_StartTimer:	
  1165                           ; 1 bytes @ 0x0
  1166                           
  1167  0033                     ?_storeByteForTransfer:	
  1168                           ; 1 bytes @ 0x0
  1169                           
  1170  0033                     TMR1_WriteTimer@value:	
  1171                           ; 1 bytes @ 0x0
  1172                           
  1173  0033                     storeByteForTransfer@data:	
  1174                           ; 2 bytes @ 0x0
  1175                           
  1176                           
  1177                           ; 2 bytes @ 0x0
  1178  0033                     	ds	1
  1179  0034                     initializeSpi@i:	
  1180                           
  1181                           ; 2 bytes @ 0x1
  1182  0034                     	ds	1
  1183  0035                     ??_TMR1_WriteTimer:	
  1184  0035                     ??_storeByteForTransfer:	
  1185                           ; 1 bytes @ 0x2
  1186                           
  1187  0035                     ?_storeWordForTransfer:	
  1188                           ; 1 bytes @ 0x2
  1189                           
  1190  0035                     storeWordForTransfer@data:	
  1191                           ; 2 bytes @ 0x2
  1192                           
  1193                           
  1194                           ; 2 bytes @ 0x2
  1195  0035                     	ds	1
  1196  0036                     ??_initialize:	
  1197                           
  1198                           ; 1 bytes @ 0x3
  1199  0036                     	ds	1
  1200  0037                     ??_storeWordForTransfer:	
  1201  0037                     TMR1_WriteTimer@state:	
  1202                           ; 1 bytes @ 0x4
  1203                           
  1204                           
  1205                           ; 2 bytes @ 0x4
  1206  0037                     	ds	2
  1207  0039                     ??_resetTimer:	
  1208  0039                     ??_takeReading:	
  1209                           ; 1 bytes @ 0x6
  1210                           
  1211  0039                     storeWordForTransfer@buf:	
  1212                           ; 1 bytes @ 0x6
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x6
  1216  0039                     	ds	1
  1217  003A                     takeReading@i:	
  1218                           
  1219                           ; 2 bytes @ 0x7
  1220  003A                     	ds	2
  1221  003C                     ??_main:	
  1222                           
  1223                           ; 1 bytes @ 0x9
  1224  003C                     	ds	1
  1225  003D                     main@val:	
  1226                           
  1227                           ; 2 bytes @ 0xA
  1228  003D                     	ds	2
  1229  003F                     main@result:	
  1230                           
  1231                           ; 2 bytes @ 0xC
  1232  003F                     	ds	2
  1233  0041                     main@loopCount:	
  1234                           
  1235                           ; 2 bytes @ 0xE
  1236  0041                     	ds	2
  1237                           
  1238                           	psect	maintext
  1239  002D                     __pmaintext:	
  1240 ;;
  1241 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1242 ;;
  1243 ;; *************** function _main *****************
  1244 ;; Defined at:
  1245 ;;		line 124 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  result          2   12[BANK0 ] int 
  1250 ;;  loopCount       2   14[BANK0 ] int 
  1251 ;;  val             2   10[BANK0 ] int 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : B1F/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1261 ;;      Params:         0       0       0       0
  1262 ;;      Locals:         0       6       0       0
  1263 ;;      Temps:          0       1       0       0
  1264 ;;      Totals:         0       7       0       0
  1265 ;;Total ram usage:        7 bytes
  1266 ;; Hardware stack levels required when called:    7
  1267 ;; This function calls:
  1268 ;;		_TMR1_StopTimer
  1269 ;;		_initialize
  1270 ;;		_resetTimer
  1271 ;;		_storeWordForTransfer
  1272 ;;		_takeReading
  1273 ;; This function is called by:
  1274 ;;		Startup code after reset
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _main
  1280  002D                     _main:	
  1281                           
  1282                           ;main.c: 127: initialize();
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1286  002D  2067               	fcall	_initialize
  1287                           
  1288                           ;main.c: 129: resetTimer();
  1289  002E  21A7               	fcall	_resetTimer
  1290                           
  1291                           ;main.c: 130: int val = 0;
  1292  002F  0020               	movlb	0	; select bank0
  1293  0030  01BD               	clrf	main@val
  1294  0031  01BE               	clrf	main@val+1
  1295                           
  1296                           ;main.c: 132: PINGDriverStatus.bufferEmpty = 0;
  1297  0032  1032               	bcf	_PINGDriverStatus,0
  1298                           
  1299                           ;main.c: 133: PINGDriverStatus.takingReading = 0;
  1300  0033  10B2               	bcf	_PINGDriverStatus,1
  1301  0034  2854               	goto	L1
  1302  0035                     l1354:	
  1303                           ;main.c: 149: {
  1304                           ;main.c: 151: continue;
  1305                           
  1306                           ;main.c: 144: {
  1307                           ;main.c: 145: continue;
  1308                           
  1309                           ;main.c: 139: maxTimerCount = 0x0000;
  1310                           
  1311                           ;main.c: 138: minTimerCount = 0xFFFF;
  1312                           
  1313                           ;main.c: 136: int loopCount = 1<<7;
  1314                           
  1315                           ;main.c: 135: summedTimerCount = 0x00000000;
  1316                           
  1317                           
  1318                           ;main.c: 157: {
  1319                           ;main.c: 158: takeReading();
  1320  0035  20C9               	fcall	_takeReading
  1321                           
  1322                           ;main.c: 159: loopCount--;
  1323  0036  30FF               	movlw	255
  1324  0037  0020               	movlb	0	; select bank0
  1325  0038  07C1               	addwf	main@loopCount,f
  1326  0039  30FF               	movlw	255
  1327  003A  3DC2               	addwfc	main@loopCount+1,f
  1328  003B                     l1346:	
  1329                           ;main.c: 141: while(1)
  1330                           
  1331                           ;main.c: 160: }
  1332                           
  1333                           
  1334                           ;main.c: 142: {
  1335                           ;main.c: 143: if (PINGDriverStatus.bufferEmpty == 0)
  1336  003B  1832               	btfsc	_PINGDriverStatus,0
  1337                           
  1338                           ;main.c: 146: }
  1339                           ;main.c: 148: if (PINGDriverStatus.takingReading)
  1340  003C  18B2               	btfsc	_PINGDriverStatus,1
  1341  003D  283B               	goto	l1346
  1342                           
  1343                           ;main.c: 152: }
  1344                           ;main.c: 156: if (loopCount > 0)
  1345  003E  0842               	movf	main@loopCount+1,w
  1346  003F  3A80               	xorlw	128
  1347  0040  00BC               	movwf	??_main
  1348  0041  3080               	movlw	128
  1349  0042  023C               	subwf	??_main,w
  1350  0043  1D03               	skipz
  1351  0044  2847               	goto	u455
  1352  0045  3001               	movlw	1
  1353  0046  0241               	subwf	main@loopCount,w
  1354  0047                     u455:	
  1355  0047  1803               	btfsc	3,0
  1356  0048  2835               	goto	l1354
  1357                           
  1358                           ;main.c: 166: int result = storeWordForTransfer(summedTimerCount&0xFFFF);
  1359  0049  0020               	movlb	0	; select bank0
  1360  004A  082D               	movf	_summedTimerCount+1,w
  1361  004B  00B6               	movwf	storeWordForTransfer@data+1
  1362  004C  082C               	movf	_summedTimerCount,w
  1363  004D  00B5               	movwf	storeWordForTransfer@data
  1364  004E  209A               	fcall	_storeWordForTransfer
  1365  004F  0020               	movlb	0	; select bank0
  1366  0050  0836               	movf	?_storeWordForTransfer+1,w
  1367  0051  00C0               	movwf	main@result+1
  1368  0052  0835               	movf	?_storeWordForTransfer,w
  1369  0053  00BF               	movwf	main@result
  1370  0054                     L1:	
  1371                           
  1372                           ;main.c: 168: summedTimerCount = 0x00000000;
  1373  0054  3000               	movlw	0
  1374  0055  00AF               	movwf	_summedTimerCount+3
  1375  0056  3000               	movlw	0
  1376  0057  00AE               	movwf	_summedTimerCount+2
  1377  0058  3000               	movlw	0
  1378  0059  00AD               	movwf	_summedTimerCount+1
  1379  005A  3000               	movlw	0
  1380  005B  00AC               	movwf	_summedTimerCount
  1381                           
  1382                           ;main.c: 169: loopCount = 1<<7;
  1383  005C  3080               	movlw	128
  1384  005D  00C1               	movwf	main@loopCount
  1385  005E  3000               	movlw	0
  1386  005F  00C2               	movwf	main@loopCount+1
  1387                           
  1388                           ;main.c: 170: minTimerCount = 0xFFFF;
  1389  0060  30FF               	movlw	255
  1390  0061  00F4               	movwf	_minTimerCount
  1391  0062  30FF               	movlw	255
  1392  0063  00F5               	movwf	_minTimerCount+1
  1393                           
  1394                           ;main.c: 171: maxTimerCount = 0x0000;
  1395  0064  01F2               	clrf	_maxTimerCount
  1396  0065  01F3               	clrf	_maxTimerCount+1
  1397  0066  283B               	goto	l1346
  1398  0067                     __end_of_main:	
  1399                           ;main.c: 172: }
  1400                           ;main.c: 173: }
  1401                           ;main.c: 174: TMR1_StopTimer();
  1402                           
  1403                           
  1404                           	psect	text1
  1405  00C9                     __ptext1:	
  1406 ;; *************** function _takeReading *****************
  1407 ;; Defined at:
  1408 ;;		line 103 in file "main.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  i               2    7[BANK0 ] int 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1422 ;;      Params:         0       0       0       0
  1423 ;;      Locals:         0       2       0       0
  1424 ;;      Temps:          0       1       0       0
  1425 ;;      Totals:         0       3       0       0
  1426 ;;Total ram usage:        3 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    6
  1429 ;; This function calls:
  1430 ;;		_resetTimer
  1431 ;; This function is called by:
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           
  1437                           ;psect for function _takeReading
  1438  00C9                     _takeReading:	
  1439                           
  1440                           ;main.c: 106: RA4 = 0;
  1441                           
  1442                           ;incstack = 0
  1443                           ; Regs used in _takeReading: [wreg+status,2+status,0+pclath+cstack]
  1444  00C9  0020               	movlb	0	; select bank0
  1445  00CA  120C               	bcf	12,4	;volatile
  1446                           
  1447                           ;main.c: 107: TRISA4 = 0;
  1448  00CB  0021               	movlb	1	; select bank1
  1449  00CC  120C               	bcf	12,4	;volatile
  1450                           
  1451                           ;main.c: 108: RA4 = 1;
  1452  00CD  0020               	movlb	0	; select bank0
  1453  00CE  160C               	bsf	12,4	;volatile
  1454                           
  1455                           ;main.c: 111: for (int i=0; i<1; i++)
  1456  00CF  01BA               	clrf	takeReading@i
  1457  00D0  01BB               	clrf	takeReading@i+1
  1458  00D1  083B               	movf	takeReading@i+1,w
  1459  00D2  3A80               	xorlw	128
  1460  00D3  00B9               	movwf	??_takeReading
  1461  00D4  3080               	movlw	128
  1462  00D5  0239               	subwf	??_takeReading,w
  1463  00D6  1D03               	skipz
  1464  00D7  28DA               	goto	u405
  1465  00D8  3001               	movlw	1
  1466  00D9  023A               	subwf	takeReading@i,w
  1467  00DA                     u405:	
  1468  00DA  1803               	btfsc	3,0
  1469  00DB  28EC               	goto	l79
  1470  00DC                     l1302:	
  1471                           
  1472                           ;main.c: 112: {
  1473  00DC  3001               	movlw	1
  1474  00DD  0020               	movlb	0	; select bank0
  1475  00DE  07BA               	addwf	takeReading@i,f
  1476  00DF  3000               	movlw	0
  1477  00E0  3DBB               	addwfc	takeReading@i+1,f
  1478  00E1  083B               	movf	takeReading@i+1,w
  1479  00E2  3A80               	xorlw	128
  1480  00E3  00B9               	movwf	??_takeReading
  1481  00E4  3080               	movlw	128
  1482  00E5  0239               	subwf	??_takeReading,w
  1483  00E6  1D03               	skipz
  1484  00E7  28EA               	goto	u415
  1485  00E8  3001               	movlw	1
  1486  00E9  023A               	subwf	takeReading@i,w
  1487  00EA                     u415:	
  1488  00EA  1C03               	skipc
  1489  00EB  28DC               	goto	l1302
  1490  00EC                     l79:	
  1491                           
  1492                           ;main.c: 114: }
  1493                           ;main.c: 115: RA4 = 0;
  1494  00EC  0020               	movlb	0	; select bank0
  1495  00ED  120C               	bcf	12,4	;volatile
  1496                           
  1497                           ;main.c: 116: TRISA4 = 1;
  1498  00EE  0021               	movlb	1	; select bank1
  1499  00EF  160C               	bsf	12,4	;volatile
  1500                           
  1501                           ;main.c: 117: resetTimer();
  1502  00F0  21A7               	fcall	_resetTimer
  1503                           
  1504                           ;main.c: 118: PINGDriverStatus.takingReading = 1;
  1505  00F1  0020               	movlb	0	; select bank0
  1506  00F2  14B2               	bsf	_PINGDriverStatus,1
  1507  00F3  0008               	return
  1508  00F4                     __end_of_takeReading:	
  1509                           
  1510                           	psect	text2
  1511  01A7                     __ptext2:	
  1512 ;; *************** function _resetTimer *****************
  1513 ;; Defined at:
  1514 ;;		line 40 in file "timers.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1528 ;;      Params:         0       0       0       0
  1529 ;;      Locals:         0       0       0       0
  1530 ;;      Temps:          0       0       0       0
  1531 ;;      Totals:         0       0       0       0
  1532 ;;Total ram usage:        0 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    5
  1535 ;; This function calls:
  1536 ;;		_TMR1_StartTimer
  1537 ;;		_TMR1_WriteTimer
  1538 ;;		_globalInterruptEnable
  1539 ;; This function is called by:
  1540 ;;		_takeReading
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           
  1546                           ;psect for function _resetTimer
  1547  01A7                     _resetTimer:	
  1548                           
  1549                           ;timers.c: 42: TMR1_WriteTimer(0);
  1550                           
  1551                           ;incstack = 0
  1552                           ; Regs used in _resetTimer: [wreg+status,2+status,0+pclath+cstack]
  1553  01A7  3000               	movlw	0
  1554  01A8  0020               	movlb	0	; select bank0
  1555  01A9  00B3               	movwf	TMR1_WriteTimer@value
  1556  01AA  00B4               	movwf	TMR1_WriteTimer@value+1
  1557  01AB  2179               	fcall	_TMR1_WriteTimer
  1558                           
  1559                           ;timers.c: 43: globalInterruptEnable();
  1560  01AC  21BC               	fcall	_globalInterruptEnable
  1561                           
  1562                           ;timers.c: 44: TMR1_StartTimer();
  1563  01AD  21D5               	fcall	_TMR1_StartTimer
  1564  01AE  0008               	return
  1565  01AF                     __end_of_resetTimer:	
  1566                           
  1567                           	psect	text3
  1568  0179                     __ptext3:	
  1569 ;; *************** function _TMR1_WriteTimer *****************
  1570 ;; Defined at:
  1571 ;;		line 26 in file "timers.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  value           2    0[BANK0 ] int 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  state           2    4[BANK0 ] int 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0, pclath, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1585 ;;      Params:         0       2       0       0
  1586 ;;      Locals:         0       2       0       0
  1587 ;;      Temps:          0       2       0       0
  1588 ;;      Totals:         0       6       0       0
  1589 ;;Total ram usage:        6 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    4
  1592 ;; This function calls:
  1593 ;;		_TMR1_StopTimer
  1594 ;; This function is called by:
  1595 ;;		_resetTimer
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function _TMR1_WriteTimer
  1601  0179                     _TMR1_WriteTimer:	
  1602                           
  1603                           ;timers.c: 28: int state = TMR1ON;
  1604                           
  1605                           ;incstack = 0
  1606                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2+status,0+pclath+cstack]
  1607  0179  1003               	clrc
  1608  017A  0020               	movlb	0	; select bank0
  1609  017B  181B               	btfsc	27,0	;volatile
  1610  017C  1403               	setc
  1611  017D  3000               	movlw	0
  1612  017E  3D09               	addwfc	9,w
  1613  017F  00B5               	movwf	??_TMR1_WriteTimer
  1614  0180  01B6               	clrf	??_TMR1_WriteTimer+1
  1615  0181  0835               	movf	??_TMR1_WriteTimer,w
  1616  0182  00B7               	movwf	TMR1_WriteTimer@state
  1617  0183  0836               	movf	??_TMR1_WriteTimer+1,w
  1618  0184  00B8               	movwf	TMR1_WriteTimer@state+1
  1619                           
  1620                           ;timers.c: 29: TMR1_StopTimer();
  1621  0185  21D2               	fcall	_TMR1_StopTimer
  1622                           
  1623                           ;timers.c: 30: TMR1H = value>>8;
  1624  0186  0020               	movlb	0	; select bank0
  1625  0187  0834               	movf	TMR1_WriteTimer@value+1,w
  1626  0188  009A               	movwf	26	;volatile
  1627                           
  1628                           ;timers.c: 31: TMR1L = value&0xFF;
  1629  0189  0833               	movf	TMR1_WriteTimer@value,w
  1630  018A  0099               	movwf	25	;volatile
  1631                           
  1632                           ;timers.c: 32: TMR1ON = state;
  1633  018B  1C37               	btfss	TMR1_WriteTimer@state,0
  1634  018C  2990               	goto	u370
  1635  018D  0020               	movlb	0	; select bank0
  1636  018E  141B               	bsf	27,0	;volatile
  1637  018F  0008               	return
  1638  0190                     u370:	
  1639  0190  0020               	movlb	0	; select bank0
  1640  0191  101B               	bcf	27,0	;volatile
  1641  0192  0008               	return
  1642  0193                     __end_of_TMR1_WriteTimer:	
  1643                           
  1644                           	psect	text4
  1645  01D2                     __ptext4:	
  1646 ;; *************** function _TMR1_StopTimer *****************
  1647 ;; Defined at:
  1648 ;;		line 21 in file "timers.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		None
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1662 ;;      Params:         0       0       0       0
  1663 ;;      Locals:         0       0       0       0
  1664 ;;      Temps:          0       0       0       0
  1665 ;;      Totals:         0       0       0       0
  1666 ;;Total ram usage:        0 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    3
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_main
  1673 ;;		_TMR1_WriteTimer
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           
  1678                           ;psect for function _TMR1_StopTimer
  1679  01D2                     _TMR1_StopTimer:	
  1680                           
  1681                           ;timers.c: 23: TMR1ON = 0;
  1682                           
  1683                           ;incstack = 0
  1684                           ; Regs used in _TMR1_StopTimer: []
  1685  01D2  0020               	movlb	0	; select bank0
  1686  01D3  101B               	bcf	27,0	;volatile
  1687  01D4  0008               	return
  1688  01D5                     __end_of_TMR1_StopTimer:	
  1689                           
  1690                           	psect	text5
  1691  01D5                     __ptext5:	
  1692 ;; *************** function _TMR1_StartTimer *****************
  1693 ;; Defined at:
  1694 ;;		line 35 in file "timers.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;		None
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;		None
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		None
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1708 ;;      Params:         0       0       0       0
  1709 ;;      Locals:         0       0       0       0
  1710 ;;      Temps:          0       0       0       0
  1711 ;;      Totals:         0       0       0       0
  1712 ;;Total ram usage:        0 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    3
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_resetTimer
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           
  1723                           ;psect for function _TMR1_StartTimer
  1724  01D5                     _TMR1_StartTimer:	
  1725                           
  1726                           ;timers.c: 37: TMR1ON = 1;
  1727                           
  1728                           ;incstack = 0
  1729                           ; Regs used in _TMR1_StartTimer: []
  1730  01D5  0020               	movlb	0	; select bank0
  1731  01D6  141B               	bsf	27,0	;volatile
  1732  01D7  0008               	return
  1733  01D8                     __end_of_TMR1_StartTimer:	
  1734                           
  1735                           	psect	text6
  1736  009A                     __ptext6:	
  1737 ;; *************** function _storeWordForTransfer *****************
  1738 ;; Defined at:
  1739 ;;		line 52 in file "spi.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  data            2    2[BANK0 ] unsigned int 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  buf             2    6[BANK0 ] short 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2    2[BANK0 ] int 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1753 ;;      Params:         0       2       0       0
  1754 ;;      Locals:         0       2       0       0
  1755 ;;      Temps:          0       2       0       0
  1756 ;;      Totals:         0       6       0       0
  1757 ;;Total ram usage:        6 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    4
  1760 ;; This function calls:
  1761 ;;		_storeByteForTransfer
  1762 ;; This function is called by:
  1763 ;;		_main
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function _storeWordForTransfer
  1769  009A                     _storeWordForTransfer:	
  1770                           
  1771                           ;spi.c: 56: if (bufferCount == 6)
  1772                           
  1773                           ;incstack = 0
  1774                           ; Regs used in _storeWordForTransfer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1775  009A  3006               	movlw	6
  1776  009B  0670               	xorwf	_bufferCount,w
  1777  009C  0471               	iorwf	_bufferCount+1,w
  1778  009D  1D03               	btfss	3,2
  1779  009E  28A5               	goto	l1314
  1780                           
  1781                           ;spi.c: 57: {
  1782                           ;spi.c: 58: return -1;
  1783  009F  30FF               	movlw	255
  1784  00A0  0020               	movlb	0	; select bank0
  1785  00A1  00B5               	movwf	?_storeWordForTransfer
  1786  00A2  30FF               	movlw	255
  1787  00A3  00B6               	movwf	?_storeWordForTransfer+1
  1788  00A4  0008               	return
  1789  00A5                     l1314:	
  1790                           
  1791                           ;spi.c: 59: }
  1792                           ;spi.c: 60: short buf = data & 0xFF;
  1793  00A5  30FF               	movlw	255
  1794  00A6  0020               	movlb	0	; select bank0
  1795  00A7  0535               	andwf	storeWordForTransfer@data,w
  1796  00A8  00B9               	movwf	storeWordForTransfer@buf
  1797  00A9  3000               	movlw	0
  1798  00AA  0536               	andwf	storeWordForTransfer@data+1,w
  1799  00AB  00BA               	movwf	storeWordForTransfer@buf+1
  1800                           
  1801                           ;spi.c: 61: storeByteForTransfer(buf);
  1802  00AC  083A               	movf	storeWordForTransfer@buf+1,w
  1803  00AD  00B4               	movwf	storeByteForTransfer@data+1
  1804  00AE  0839               	movf	storeWordForTransfer@buf,w
  1805  00AF  00B3               	movwf	storeByteForTransfer@data
  1806  00B0  215E               	fcall	_storeByteForTransfer
  1807                           
  1808                           ;spi.c: 62: buf = (data >> 8) & 0xFF;
  1809  00B1  0020               	movlb	0	; select bank0
  1810  00B2  0836               	movf	storeWordForTransfer@data+1,w
  1811  00B3  00B8               	movwf	??_storeWordForTransfer+1
  1812  00B4  0835               	movf	storeWordForTransfer@data,w
  1813  00B5  00B7               	movwf	??_storeWordForTransfer
  1814  00B6  0838               	movf	??_storeWordForTransfer+1,w
  1815  00B7  00B7               	movwf	??_storeWordForTransfer
  1816  00B8  01B8               	clrf	??_storeWordForTransfer+1
  1817  00B9  30FF               	movlw	255
  1818  00BA  0537               	andwf	??_storeWordForTransfer,w
  1819  00BB  00B9               	movwf	storeWordForTransfer@buf
  1820  00BC  3000               	movlw	0
  1821  00BD  0538               	andwf	??_storeWordForTransfer+1,w
  1822  00BE  00BA               	movwf	storeWordForTransfer@buf+1
  1823                           
  1824                           ;spi.c: 63: storeByteForTransfer(buf);
  1825  00BF  083A               	movf	storeWordForTransfer@buf+1,w
  1826  00C0  00B4               	movwf	storeByteForTransfer@data+1
  1827  00C1  0839               	movf	storeWordForTransfer@buf,w
  1828  00C2  00B3               	movwf	storeByteForTransfer@data
  1829  00C3  215E               	fcall	_storeByteForTransfer
  1830                           
  1831                           ;spi.c: 64: PINGDriverStatus.bufferEmpty = 0;
  1832  00C4  0020               	movlb	0	; select bank0
  1833  00C5  1032               	bcf	_PINGDriverStatus,0
  1834                           
  1835                           ;spi.c: 65: return 0;
  1836  00C6  01B5               	clrf	?_storeWordForTransfer
  1837  00C7  01B6               	clrf	?_storeWordForTransfer+1
  1838  00C8  0008               	return
  1839  00C9                     __end_of_storeWordForTransfer:	
  1840                           
  1841                           	psect	text7
  1842  015E                     __ptext7:	
  1843 ;; *************** function _storeByteForTransfer *****************
  1844 ;; Defined at:
  1845 ;;		line 41 in file "spi.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  data            2    0[BANK0 ] unsigned short 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;		None
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1859 ;;      Params:         0       2       0       0
  1860 ;;      Locals:         0       0       0       0
  1861 ;;      Temps:          0       0       0       0
  1862 ;;      Totals:         0       2       0       0
  1863 ;;Total ram usage:        2 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; Hardware stack levels required when called:    3
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_storeWordForTransfer
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           
  1874                           ;psect for function _storeByteForTransfer
  1875  015E                     _storeByteForTransfer:	
  1876                           
  1877                           ;spi.c: 43: dataBuffer[bufferCount] = data;
  1878                           
  1879                           ;incstack = 0
  1880                           ; Regs used in _storeByteForTransfer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1881  015E  3570               	lslf	_bufferCount,w
  1882  015F  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  1883  0160  0086               	movwf	6
  1884  0161  0187               	clrf	7
  1885  0162  0020               	movlb	0	; select bank0
  1886  0163  0833               	movf	storeByteForTransfer@data,w
  1887  0164  3FC0               	movwi [0]fsr1
  1888  0165  0834               	movf	storeByteForTransfer@data+1,w
  1889  0166  3FC1               	movwi [1]fsr1
  1890                           
  1891                           ;spi.c: 44: bufferCount++;
  1892  0167  3001               	movlw	1
  1893  0168  07F0               	addwf	_bufferCount,f
  1894  0169  3000               	movlw	0
  1895  016A  3DF1               	addwfc	_bufferCount+1,f
  1896                           
  1897                           ;spi.c: 45: if (bufferCount == 6)
  1898  016B  3006               	movlw	6
  1899  016C  0670               	xorwf	_bufferCount,w
  1900  016D  0471               	iorwf	_bufferCount+1,w
  1901  016E  1D03               	btfss	3,2
  1902  016F  0008               	return
  1903                           
  1904                           ;spi.c: 46: {
  1905                           ;spi.c: 48: SSP1BUF = dataBuffer[bufferCount-1];
  1906  0170  3570               	lslf	_bufferCount,w
  1907  0171  3EFE               	addlw	254
  1908  0172  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  1909  0173  0086               	movwf	6
  1910  0174  0187               	clrf	7
  1911  0175  0801               	movf	1,w
  1912  0176  0024               	movlb	4	; select bank4
  1913  0177  0091               	movwf	17	;volatile
  1914  0178  0008               	return
  1915  0179                     __end_of_storeByteForTransfer:	
  1916                           
  1917                           	psect	text8
  1918  0067                     __ptext8:	
  1919 ;; *************** function _initialize *****************
  1920 ;; Defined at:
  1921 ;;		line 59 in file "main.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1935 ;;      Params:         0       0       0       0
  1936 ;;      Locals:         0       0       0       0
  1937 ;;      Temps:          0       0       0       0
  1938 ;;      Totals:         0       0       0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    6
  1942 ;; This function calls:
  1943 ;;		_globalInterruptDisable
  1944 ;;		_globalInterruptEnable
  1945 ;;		_initializeInterrupts
  1946 ;;		_initializeSpi
  1947 ;;		_intializeTimers
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _initialize
  1955  0067                     _initialize:	
  1956                           
  1957                           ;main.c: 63: OSCFRQ = 0x6;
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in _initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1961  0067  3006               	movlw	6
  1962  0068  0032               	movlb	18	; select bank18
  1963  0069  009F               	movwf	31	;volatile
  1964                           
  1965                           ;main.c: 64: OSCCON1 = 0x0;
  1966  006A  0199               	clrf	25	;volatile
  1967                           
  1968                           ;main.c: 65: OSCCON2 = 0x0;
  1969  006B  019A               	clrf	26	;volatile
  1970                           
  1971                           ;main.c: 66: OSCCON3 = 0x0;
  1972  006C  019B               	clrf	27	;volatile
  1973                           
  1974                           ;main.c: 67: OSCEN = 0x64;
  1975  006D  3064               	movlw	100
  1976  006E  009D               	movwf	29	;volatile
  1977                           
  1978                           ;main.c: 68: INTCON = 0x0;
  1979  006F  018B               	clrf	11	;volatile
  1980                           
  1981                           ;main.c: 71: TRISA = 0x1F;
  1982  0070  301F               	movlw	31
  1983  0071  0021               	movlb	1	; select bank1
  1984  0072  008C               	movwf	12	;volatile
  1985                           
  1986                           ;main.c: 72: ANSELA = 0x00;
  1987  0073  0023               	movlb	3	; select bank3
  1988  0074  018C               	clrf	12	;volatile
  1989                           
  1990                           ;main.c: 73: WPUA = 0x00;
  1991  0075  0024               	movlb	4	; select bank4
  1992  0076  018C               	clrf	12	;volatile
  1993                           
  1994                           ;main.c: 74: ODCONA = 0x00;
  1995  0077  0025               	movlb	5	; select bank5
  1996  0078  018C               	clrf	12	;volatile
  1997                           
  1998                           ;main.c: 75: SLRCONA = 0x00;
  1999  0079  0026               	movlb	6	; select bank6
  2000  007A  018C               	clrf	12	;volatile
  2001                           
  2002                           ;main.c: 76: INLVLA = 0x00;
  2003  007B  0027               	movlb	7	; select bank7
  2004  007C  018C               	clrf	12	;volatile
  2005                           
  2006                           ;main.c: 79: globalInterruptDisable();
  2007  007D  21CA               	fcall	_globalInterruptDisable
  2008                           
  2009                           ;main.c: 80: PPSLOCK = 0x55;
  2010  007E  3055               	movlw	85
  2011  007F  003C               	movlb	28	; select bank28
  2012  0080  008F               	movwf	15	;volatile
  2013                           
  2014                           ;main.c: 81: PPSLOCK = 0xAA;
  2015  0081  30AA               	movlw	170
  2016  0082  008F               	movwf	15	;volatile
  2017                           
  2018                           ;main.c: 82: PPSLOCK = 0x00;
  2019  0083  018F               	clrf	15	;volatile
  2020                           
  2021                           ;main.c: 84: SSP1CLKPPS = 0x1;
  2022  0084  3001               	movlw	1
  2023  0085  00A0               	movwf	32	;volatile
  2024                           
  2025                           ;main.c: 85: SSP1DATPPS = 0x2;
  2026  0086  3002               	movlw	2
  2027  0087  00A1               	movwf	33	;volatile
  2028                           
  2029                           ;main.c: 86: SSP1SSPPS = 0x0;
  2030  0088  01A2               	clrf	34	;volatile
  2031                           
  2032                           ;main.c: 87: RA5PPS = 0x19;
  2033  0089  3019               	movlw	25
  2034  008A  003D               	movlb	29	; select bank29
  2035  008B  0095               	movwf	21	;volatile
  2036                           
  2037                           ;main.c: 88: T1GPPS = 0x4;
  2038  008C  3004               	movlw	4
  2039  008D  003C               	movlb	28	; select bank28
  2040  008E  0093               	movwf	19	;volatile
  2041                           
  2042                           ;main.c: 91: PPSLOCK = 0x55;
  2043  008F  3055               	movlw	85
  2044  0090  008F               	movwf	15	;volatile
  2045                           
  2046                           ;main.c: 92: PPSLOCK = 0xAA;
  2047  0091  30AA               	movlw	170
  2048  0092  008F               	movwf	15	;volatile
  2049                           
  2050                           ;main.c: 93: PPSLOCK = 0x1;
  2051  0093  3001               	movlw	1
  2052  0094  008F               	movwf	15	;volatile
  2053                           
  2054                           ;main.c: 95: globalInterruptEnable();
  2055  0095  21BC               	fcall	_globalInterruptEnable
  2056                           
  2057                           ;main.c: 96: intializeTimers();
  2058  0096  21AF               	fcall	_intializeTimers
  2059                           
  2060                           ;main.c: 97: initializeInterrupts();
  2061  0097  2193               	fcall	_initializeInterrupts
  2062                           
  2063                           ;main.c: 98: initializeSpi();
  2064  0098  211C               	fcall	_initializeSpi
  2065  0099  0008               	return
  2066  009A                     __end_of_initialize:	
  2067                           
  2068                           	psect	text9
  2069  01AF                     __ptext9:	
  2070 ;; *************** function _intializeTimers *****************
  2071 ;; Defined at:
  2072 ;;		line 9 in file "timers.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  1    wreg      void 
  2079 ;; Registers used:
  2080 ;;		wreg
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2086 ;;      Params:         0       0       0       0
  2087 ;;      Locals:         0       0       0       0
  2088 ;;      Temps:          0       0       0       0
  2089 ;;      Totals:         0       0       0       0
  2090 ;;Total ram usage:        0 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    3
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_initialize
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _intializeTimers
  2102  01AF                     _intializeTimers:	
  2103                           
  2104                           ;timers.c: 12: T1CON = 0x0C;
  2105                           
  2106                           ;incstack = 0
  2107                           ; Regs used in _intializeTimers: [wreg]
  2108  01AF  300C               	movlw	12
  2109  01B0  0020               	movlb	0	; select bank0
  2110  01B1  009B               	movwf	27	;volatile
  2111                           
  2112                           ;timers.c: 15: T1GCON = 0xC0;
  2113  01B2  30C0               	movlw	192
  2114  01B3  009C               	movwf	28	;volatile
  2115                           
  2116                           ;timers.c: 18: TMR1ON = 1;
  2117  01B4  141B               	bsf	27,0	;volatile
  2118  01B5  0008               	return
  2119  01B6                     __end_of_intializeTimers:	
  2120                           
  2121                           	psect	text10
  2122  011C                     __ptext10:	
  2123 ;; *************** function _initializeSpi *****************
  2124 ;; Defined at:
  2125 ;;		line 8 in file "spi.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  i               2    1[BANK0 ] int 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2139 ;;      Params:         0       0       0       0
  2140 ;;      Locals:         0       2       0       0
  2141 ;;      Temps:          0       1       0       0
  2142 ;;      Totals:         0       3       0       0
  2143 ;;Total ram usage:        3 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    3
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_initialize
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _initializeSpi
  2155  011C                     _initializeSpi:	
  2156                           
  2157                           ;spi.c: 11: SSP1CON1 = 0x0;
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _initializeSpi: [wreg+fsr1l+fsr1h+status,2+status,0]
  2161  011C  0024               	movlb	4	; select bank4
  2162  011D  0195               	clrf	21	;volatile
  2163                           
  2164                           ;spi.c: 12: SSP1STAT = 0x0;
  2165  011E  0194               	clrf	20	;volatile
  2166                           
  2167                           ;spi.c: 13: SSP1CON1bits.SSPM = 0x4;
  2168  011F  0815               	movf	21,w	;volatile
  2169  0120  39F0               	andlw	-16
  2170  0121  3804               	iorlw	4
  2171  0122  0095               	movwf	21	;volatile
  2172                           
  2173                           ;spi.c: 14: SSP1CON3 = 0x0;
  2174  0123  0197               	clrf	23	;volatile
  2175                           
  2176                           ;spi.c: 15: SSP1CON1bits.SSPEN = 0x1;
  2177  0124  1695               	bsf	21,5	;volatile
  2178                           
  2179                           ;spi.c: 18: bufferCount = 0x0;
  2180  0125  01F0               	clrf	_bufferCount
  2181  0126  01F1               	clrf	_bufferCount+1
  2182                           
  2183                           ;spi.c: 19: for (int i=0; i<6; i++)
  2184  0127  0020               	movlb	0	; select bank0
  2185  0128  01B4               	clrf	initializeSpi@i
  2186  0129  01B5               	clrf	initializeSpi@i+1
  2187  012A                     L2:	
  2188  012A  0835               	movf	initializeSpi@i+1,w
  2189  012B  3A80               	xorlw	128
  2190  012C  00B3               	movwf	??_initializeSpi
  2191  012D  3080               	movlw	128
  2192  012E  0233               	subwf	??_initializeSpi,w
  2193  012F  1D03               	skipz
  2194  0130  2933               	goto	u215
  2195  0131  3006               	movlw	6
  2196  0132  0234               	subwf	initializeSpi@i,w
  2197  0133                     u215:	
  2198  0133  1803               	btfsc	3,0
  2199  0134  0008               	return
  2200                           
  2201                           ;spi.c: 20: {
  2202                           ;spi.c: 21: dataBuffer[i] = 0x0;
  2203  0135  0020               	movlb	0	; select bank0
  2204  0136  3534               	lslf	initializeSpi@i,w
  2205  0137  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  2206  0138  0086               	movwf	6
  2207  0139  0187               	clrf	7
  2208  013A  3000               	movlw	0
  2209  013B  3FC0               	movwi [0]fsr1
  2210  013C  3FC1               	movwi [1]fsr1
  2211  013D  3001               	movlw	1
  2212  013E  07B4               	addwf	initializeSpi@i,f
  2213  013F  3000               	movlw	0
  2214  0140  3DB5               	addwfc	initializeSpi@i+1,f
  2215  0141  292A               	goto	L2
  2216  0142                     __end_of_initializeSpi:	
  2217                           
  2218                           	psect	text11
  2219  0193                     __ptext11:	
  2220 ;; *************** function _initializeInterrupts *****************
  2221 ;; Defined at:
  2222 ;;		line 6 in file "interrupts.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		status,2, status,0, pclath, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2236 ;;      Params:         0       0       0       0
  2237 ;;      Locals:         0       0       0       0
  2238 ;;      Temps:          0       0       0       0
  2239 ;;      Totals:         0       0       0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    5
  2243 ;; This function calls:
  2244 ;;		_clearAllFlags
  2245 ;;		_globalInterruptDisable
  2246 ;;		_globalInterruptEnable
  2247 ;;		_peripheralInterruptDisable
  2248 ;;		_peripheralInterruptEnable
  2249 ;; This function is called by:
  2250 ;;		_initialize
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function _initializeInterrupts
  2256  0193                     _initializeInterrupts:	
  2257                           
  2258                           ;interrupts.c: 8: globalInterruptDisable();
  2259                           
  2260                           ;incstack = 0
  2261                           ; Regs used in _initializeInterrupts: [status,2+status,0+pclath+cstack]
  2262  0193  21CA               	fcall	_globalInterruptDisable
  2263                           
  2264                           ;interrupts.c: 9: peripheralInterruptDisable();
  2265  0194  21D8               	fcall	_peripheralInterruptDisable
  2266                           
  2267                           ;interrupts.c: 10: clearAllFlags();
  2268  0195  21C1               	fcall	_clearAllFlags
  2269                           
  2270                           ;interrupts.c: 13: TMR1GIE = 1;
  2271  0196  0021               	movlb	1	; select bank1
  2272  0197  1791               	bsf	17,7	;volatile
  2273                           
  2274                           ;interrupts.c: 14: TMR1IE = 1;
  2275  0198  1411               	bsf	17,0	;volatile
  2276                           
  2277                           ;interrupts.c: 17: SSP1IE = 1;
  2278  0199  1591               	bsf	17,3	;volatile
  2279                           
  2280                           ;interrupts.c: 19: globalInterruptEnable();
  2281  019A  21BC               	fcall	_globalInterruptEnable
  2282                           
  2283                           ;interrupts.c: 20: peripheralInterruptEnable();
  2284  019B  21C6               	fcall	_peripheralInterruptEnable
  2285  019C  0008               	return
  2286  019D                     __end_of_initializeInterrupts:	
  2287                           
  2288                           	psect	text12
  2289  01C6                     __ptext12:	
  2290 ;; *************** function _peripheralInterruptEnable *****************
  2291 ;; Defined at:
  2292 ;;		line 49 in file "interrupts.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		None
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2306 ;;      Params:         0       0       0       0
  2307 ;;      Locals:         0       0       0       0
  2308 ;;      Temps:          0       0       0       0
  2309 ;;      Totals:         0       0       0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    3
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_initializeInterrupts
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           
  2321                           ;psect for function _peripheralInterruptEnable
  2322  01C6                     _peripheralInterruptEnable:	
  2323                           
  2324                           ;interrupts.c: 52: PEIE = 1;
  2325                           
  2326                           ;incstack = 0
  2327                           ; Regs used in _peripheralInterruptEnable: []
  2328  01C6  170B               	bsf	11,6	;volatile
  2329                           
  2330                           ;interrupts.c: 53: IOCIE = 1;
  2331  01C7  0021               	movlb	1	; select bank1
  2332  01C8  1610               	bsf	16,4	;volatile
  2333  01C9  0008               	return
  2334  01CA                     __end_of_peripheralInterruptEnable:	
  2335                           
  2336                           	psect	text13
  2337  01D8                     __ptext13:	
  2338 ;; *************** function _peripheralInterruptDisable *****************
  2339 ;; Defined at:
  2340 ;;		line 44 in file "interrupts.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		None
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2354 ;;      Params:         0       0       0       0
  2355 ;;      Locals:         0       0       0       0
  2356 ;;      Temps:          0       0       0       0
  2357 ;;      Totals:         0       0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    3
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_initializeInterrupts
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           
  2369                           ;psect for function _peripheralInterruptDisable
  2370  01D8                     _peripheralInterruptDisable:	
  2371                           
  2372                           ;interrupts.c: 46: PEIE = 0;
  2373                           
  2374                           ;incstack = 0
  2375                           ; Regs used in _peripheralInterruptDisable: []
  2376  01D8  130B               	bcf	11,6	;volatile
  2377  01D9  0008               	return
  2378  01DA                     __end_of_peripheralInterruptDisable:	
  2379                           
  2380                           	psect	text14
  2381  01BC                     __ptext14:	
  2382 ;; *************** function _globalInterruptEnable *****************
  2383 ;; Defined at:
  2384 ;;		line 37 in file "interrupts.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		status,2, status,0, pclath, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2398 ;;      Params:         0       0       0       0
  2399 ;;      Locals:         0       0       0       0
  2400 ;;      Temps:          0       0       0       0
  2401 ;;      Totals:         0       0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; Hardware stack levels required when called:    4
  2405 ;; This function calls:
  2406 ;;		_clearAllFlags
  2407 ;; This function is called by:
  2408 ;;		_initialize
  2409 ;;		_initializeInterrupts
  2410 ;;		_resetTimer
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _globalInterruptEnable
  2416  01BC                     _globalInterruptEnable:	
  2417                           
  2418                           ;interrupts.c: 39: clearAllFlags();
  2419                           
  2420                           ;incstack = 0
  2421                           ; Regs used in _globalInterruptEnable: [status,2+status,0+pclath+cstack]
  2422  01BC  21C1               	fcall	_clearAllFlags
  2423                           
  2424                           ;interrupts.c: 40: TMR1GIE = 1;
  2425  01BD  0021               	movlb	1	; select bank1
  2426  01BE  1791               	bsf	17,7	;volatile
  2427                           
  2428                           ;interrupts.c: 41: GIE = 1;
  2429  01BF  178B               	bsf	11,7	;volatile
  2430  01C0  0008               	return
  2431  01C1                     __end_of_globalInterruptEnable:	
  2432                           
  2433                           	psect	text15
  2434  01C1                     __ptext15:	
  2435 ;; *************** function _clearAllFlags *****************
  2436 ;; Defined at:
  2437 ;;		line 24 in file "interrupts.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;		None
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		None
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2451 ;;      Params:         0       0       0       0
  2452 ;;      Locals:         0       0       0       0
  2453 ;;      Temps:          0       0       0       0
  2454 ;;      Totals:         0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    3
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_initializeInterrupts
  2462 ;;		_globalInterruptEnable
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           
  2467                           ;psect for function _clearAllFlags
  2468  01C1                     _clearAllFlags:	
  2469                           
  2470                           ;interrupts.c: 26: TMR1GIF = 0;
  2471                           
  2472                           ;incstack = 0
  2473                           ; Regs used in _clearAllFlags: []
  2474  01C1  0020               	movlb	0	; select bank0
  2475  01C2  1391               	bcf	17,7	;volatile
  2476                           
  2477                           ;interrupts.c: 27: SSP1IF = 0;
  2478  01C3  1191               	bcf	17,3	;volatile
  2479                           
  2480                           ;interrupts.c: 28: TMR1IF = 0;
  2481  01C4  1011               	bcf	17,0	;volatile
  2482  01C5  0008               	return
  2483  01C6                     __end_of_clearAllFlags:	
  2484                           
  2485                           	psect	text16
  2486  01CA                     __ptext16:	
  2487 ;; *************** function _globalInterruptDisable *****************
  2488 ;; Defined at:
  2489 ;;		line 31 in file "interrupts.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		None
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2503 ;;      Params:         0       0       0       0
  2504 ;;      Locals:         0       0       0       0
  2505 ;;      Temps:          0       0       0       0
  2506 ;;      Totals:         0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    3
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_initialize
  2514 ;;		_initializeInterrupts
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           
  2519                           ;psect for function _globalInterruptDisable
  2520  01CA                     _globalInterruptDisable:	
  2521                           
  2522                           ;interrupts.c: 33: TMR1GIE = 0;
  2523                           
  2524                           ;incstack = 0
  2525                           ; Regs used in _globalInterruptDisable: []
  2526  01CA  0021               	movlb	1	; select bank1
  2527  01CB  1391               	bcf	17,7	;volatile
  2528                           
  2529                           ;interrupts.c: 34: GIE = 0;
  2530  01CC  138B               	bcf	11,7	;volatile
  2531  01CD  0008               	return
  2532  01CE                     __end_of_globalInterruptDisable:	
  2533                           
  2534                           	psect	intentry
  2535  0004                     __pintentry:	
  2536 ;; *************** function _interruptManager *****************
  2537 ;; Defined at:
  2538 ;;		line 56 in file "interrupts.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;		None
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;		None
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2552 ;;      Params:         0       0       0       0
  2553 ;;      Locals:         0       0       0       0
  2554 ;;      Temps:          1       0       0       0
  2555 ;;      Totals:         1       0       0       0
  2556 ;;Total ram usage:        1 bytes
  2557 ;; Hardware stack levels used:    1
  2558 ;; Hardware stack levels required when called:    2
  2559 ;; This function calls:
  2560 ;;		_spiInterrupt
  2561 ;;		_timer1GateInterrupt
  2562 ;; This function is called by:
  2563 ;;		Interrupt level 1
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567  0004                     _interruptManager:	
  2568                           
  2569                           ;incstack = 0
  2570                           ; Regs used in _interruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2571  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2572  0005  3180               	pagesel	$
  2573  0006  0020               	movlb	0	; select bank0
  2574  0007  087F               	movf	127,w
  2575  0008  00FD               	movwf	??_interruptManager
  2576                           
  2577                           ;interrupts.c: 58: if (TMR1GIE == 1 && TMR1GIF == 1)
  2578  0009  0021               	movlb	1	; select bank1
  2579  000A  1F91               	btfss	17,7	;volatile
  2580  000B  2810               	goto	i1l1182
  2581  000C  0020               	movlb	0	; select bank0
  2582  000D  1F91               	btfss	17,7	;volatile
  2583  000E  2810               	goto	i1l1182
  2584                           
  2585                           ;interrupts.c: 59: {
  2586                           ;interrupts.c: 61: timer1GateInterrupt();
  2587  000F  20F4               	fcall	_timer1GateInterrupt
  2588  0010                     i1l1182:	
  2589                           
  2590                           ;interrupts.c: 62: }
  2591                           ;interrupts.c: 64: if (SSP1IE == 1 && SSP1IF == 1)
  2592  0010  0021               	movlb	1	; select bank1
  2593  0011  1D91               	btfss	17,3	;volatile
  2594  0012  2817               	goto	i1l151
  2595  0013  0020               	movlb	0	; select bank0
  2596  0014  1D91               	btfss	17,3	;volatile
  2597  0015  2817               	goto	i1l151
  2598                           
  2599                           ;interrupts.c: 65: {
  2600                           ;interrupts.c: 66: spiInterrupt();
  2601  0016  2142               	fcall	_spiInterrupt
  2602  0017                     i1l151:	
  2603  0017  087D               	movf	??_interruptManager,w
  2604  0018  0020               	movlb	0	; select bank0
  2605  0019  00FF               	movwf	127
  2606  001A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2607  001B  0009               	retfie
  2608  001C                     __end_of_interruptManager:	
  2609                           
  2610                           	psect	text18
  2611  00F4                     __ptext18:	
  2612 ;; *************** function _timer1GateInterrupt *****************
  2613 ;; Defined at:
  2614 ;;		line 53 in file "timers.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  timerCount      2    4[COMMON] unsigned int 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2628 ;;      Params:         0       0       0       0
  2629 ;;      Locals:         2       0       0       0
  2630 ;;      Temps:          0       0       0       0
  2631 ;;      Totals:         2       0       0       0
  2632 ;;Total ram usage:        2 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    1
  2635 ;; This function calls:
  2636 ;;		_timer1Value
  2637 ;;		i1_globalInterruptDisable
  2638 ;; This function is called by:
  2639 ;;		_interruptManager
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function _timer1GateInterrupt
  2645  00F4                     _timer1GateInterrupt:	
  2646                           
  2647                           ;timers.c: 55: globalInterruptDisable();
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in _timer1GateInterrupt: [wreg+status,2+status,0+pclath+cstack]
  2651  00F4  21CE               	fcall	i1_globalInterruptDisable
  2652                           
  2653                           ;timers.c: 56: unsigned int timerCount = timer1Value();
  2654  00F5  219D               	fcall	_timer1Value
  2655  00F6  0878               	movf	?_timer1Value+1,w
  2656  00F7  00FC               	movwf	timer1GateInterrupt@timerCount+1
  2657  00F8  0877               	movf	?_timer1Value,w
  2658  00F9  00FB               	movwf	timer1GateInterrupt@timerCount
  2659                           
  2660                           ;timers.c: 57: summedTimerCount += timerCount;
  2661  00FA  087B               	movf	timer1GateInterrupt@timerCount,w
  2662  00FB  0020               	movlb	0	; select bank0
  2663  00FC  07AC               	addwf	_summedTimerCount,f
  2664  00FD  087C               	movf	timer1GateInterrupt@timerCount+1,w
  2665  00FE  3DAD               	addwfc	_summedTimerCount+1,f
  2666  00FF  3000               	movlw	0
  2667  0100  3DAE               	addwfc	_summedTimerCount+2,f
  2668  0101  3DAF               	addwfc	_summedTimerCount+3,f
  2669                           
  2670                           ;timers.c: 60: if (timerCount < minTimerCount)
  2671  0102  0875               	movf	_minTimerCount+1,w
  2672  0103  027C               	subwf	timer1GateInterrupt@timerCount+1,w
  2673  0104  1D03               	skipz
  2674  0105  2908               	goto	u27_25
  2675  0106  0874               	movf	_minTimerCount,w
  2676  0107  027B               	subwf	timer1GateInterrupt@timerCount,w
  2677  0108                     u27_25:	
  2678  0108  1803               	skipnc
  2679  0109  290E               	goto	i1l198
  2680                           
  2681                           ;timers.c: 61: {
  2682                           ;timers.c: 62: minTimerCount = timerCount;
  2683  010A  087C               	movf	timer1GateInterrupt@timerCount+1,w
  2684  010B  00F5               	movwf	_minTimerCount+1
  2685  010C  087B               	movf	timer1GateInterrupt@timerCount,w
  2686  010D  00F4               	movwf	_minTimerCount
  2687  010E                     i1l198:	
  2688                           
  2689                           ;timers.c: 63: }
  2690                           ;timers.c: 64: if (timerCount > maxTimerCount)
  2691  010E  087C               	movf	timer1GateInterrupt@timerCount+1,w
  2692  010F  0273               	subwf	_maxTimerCount+1,w
  2693  0110  1D03               	skipz
  2694  0111  2914               	goto	u28_25
  2695  0112  087B               	movf	timer1GateInterrupt@timerCount,w
  2696  0113  0272               	subwf	_maxTimerCount,w
  2697  0114                     u28_25:	
  2698  0114  1803               	skipnc
  2699  0115  291A               	goto	i1l1124
  2700                           
  2701                           ;timers.c: 65: {
  2702                           ;timers.c: 66: maxTimerCount = timerCount;
  2703  0116  087C               	movf	timer1GateInterrupt@timerCount+1,w
  2704  0117  00F3               	movwf	_maxTimerCount+1
  2705  0118  087B               	movf	timer1GateInterrupt@timerCount,w
  2706  0119  00F2               	movwf	_maxTimerCount
  2707  011A                     i1l1124:	
  2708                           
  2709                           ;timers.c: 67: }
  2710                           ;timers.c: 68: PINGDriverStatus.takingReading = 0;
  2711  011A  10B2               	bcf	_PINGDriverStatus,1
  2712  011B  0008               	return
  2713  011C                     __end_of_timer1GateInterrupt:	
  2714                           
  2715                           	psect	text19
  2716  01CE                     __ptext19:	
  2717 ;; *************** function i1_globalInterruptDisable *****************
  2718 ;; Defined at:
  2719 ;;		line 31 in file "interrupts.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		None
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2733 ;;      Params:         0       0       0       0
  2734 ;;      Locals:         0       0       0       0
  2735 ;;      Temps:          0       0       0       0
  2736 ;;      Totals:         0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_timer1GateInterrupt
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           
  2747                           ;psect for function i1_globalInterruptDisable
  2748  01CE                     i1_globalInterruptDisable:	
  2749                           
  2750                           ;interrupts.c: 33: TMR1GIE = 0;
  2751                           
  2752                           ;incstack = 0
  2753                           ; Regs used in i1_globalInterruptDisable: []
  2754  01CE  0021               	movlb	1	; select bank1
  2755  01CF  1391               	bcf	17,7	;volatile
  2756                           
  2757                           ;interrupts.c: 34: GIE = 0;
  2758  01D0  138B               	bcf	11,7	;volatile
  2759  01D1  0008               	return
  2760  01D2                     __end_ofi1_globalInterruptDisable:	
  2761                           
  2762                           	psect	text20
  2763  019D                     __ptext20:	
  2764 ;; *************** function _timer1Value *****************
  2765 ;; Defined at:
  2766 ;;		line 47 in file "timers.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  value           2    2[COMMON] int 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  2    0[COMMON] int 
  2773 ;; Registers used:
  2774 ;;		wreg
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2780 ;;      Params:         2       0       0       0
  2781 ;;      Locals:         2       0       0       0
  2782 ;;      Temps:          0       0       0       0
  2783 ;;      Totals:         4       0       0       0
  2784 ;;Total ram usage:        4 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_timer1GateInterrupt
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           
  2794                           ;psect for function _timer1Value
  2795  019D                     _timer1Value:	
  2796                           
  2797                           ;timers.c: 49: int value = (TMR1H<<8) | TMR1L;
  2798                           
  2799                           ;incstack = 0
  2800                           ; Regs used in _timer1Value: [wreg]
  2801  019D  0020               	movlb	0	; select bank0
  2802  019E  081A               	movf	26,w	;volatile
  2803  019F  00FA               	movwf	timer1Value@value+1
  2804  01A0  0819               	movf	25,w	;volatile
  2805  01A1  00F9               	movwf	timer1Value@value
  2806                           
  2807                           ;timers.c: 50: return value;
  2808  01A2  087A               	movf	timer1Value@value+1,w
  2809  01A3  00F8               	movwf	?_timer1Value+1
  2810  01A4  0879               	movf	timer1Value@value,w
  2811  01A5  00F7               	movwf	?_timer1Value
  2812  01A6  0008               	return
  2813  01A7                     __end_of_timer1Value:	
  2814                           
  2815                           	psect	text21
  2816  0142                     __ptext21:	
  2817 ;; *************** function _spiInterrupt *****************
  2818 ;; Defined at:
  2819 ;;		line 25 in file "spi.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;		None
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  command         2    2[COMMON] int 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2833 ;;      Params:         0       0       0       0
  2834 ;;      Locals:         2       0       0       0
  2835 ;;      Temps:          2       0       0       0
  2836 ;;      Totals:         4       0       0       0
  2837 ;;Total ram usage:        4 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_interruptManager
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _spiInterrupt
  2848  0142                     _spiInterrupt:	
  2849                           
  2850                           ;spi.c: 28: int command = SSP1BUF;
  2851                           
  2852                           ;incstack = 0
  2853                           ; Regs used in _spiInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  2854  0142  0024               	movlb	4	; select bank4
  2855  0143  0811               	movf	17,w	;volatile
  2856  0144  00F7               	movwf	??_spiInterrupt
  2857  0145  01F8               	clrf	??_spiInterrupt+1
  2858  0146  0877               	movf	??_spiInterrupt,w
  2859  0147  00F9               	movwf	spiInterrupt@command
  2860  0148  0878               	movf	??_spiInterrupt+1,w
  2861  0149  00FA               	movwf	spiInterrupt@command+1
  2862                           
  2863                           ;spi.c: 29: bufferCount--;
  2864  014A  30FF               	movlw	255
  2865  014B  07F0               	addwf	_bufferCount,f
  2866  014C  30FF               	movlw	255
  2867  014D  3DF1               	addwfc	_bufferCount+1,f
  2868                           
  2869                           ;spi.c: 30: if (bufferCount == 0)
  2870  014E  0870               	movf	_bufferCount,w
  2871  014F  0471               	iorwf	_bufferCount+1,w
  2872  0150  1D03               	btfss	3,2
  2873  0151  2955               	goto	i1l1132
  2874                           
  2875                           ;spi.c: 31: {
  2876                           ;spi.c: 33: PINGDriverStatus.bufferEmpty = 1;
  2877  0152  0020               	movlb	0	; select bank0
  2878  0153  1432               	bsf	_PINGDriverStatus,0
  2879                           
  2880                           ;spi.c: 34: }
  2881  0154  0008               	return
  2882  0155                     i1l1132:	
  2883                           
  2884                           ;spi.c: 35: else
  2885                           ;spi.c: 36: {
  2886                           ;spi.c: 37: SSP1BUF = dataBuffer[bufferCount-1];
  2887  0155  3570               	lslf	_bufferCount,w
  2888  0156  3EFE               	addlw	254
  2889  0157  3E20               	addlw	(low (_dataBuffer| 0))& (0+255)
  2890  0158  0086               	movwf	6
  2891  0159  0187               	clrf	7
  2892  015A  0801               	movf	1,w
  2893  015B  0024               	movlb	4	; select bank4
  2894  015C  0091               	movwf	17	;volatile
  2895  015D  0008               	return
  2896  015E                     __end_of_spiInterrupt:	
  2897  007E                     btemp	set	126	;btemp
  2898  007E                     int$flags	set	126
  2899  007E                     wtemp	set	126
  2900  007E                     wtemp0	set	126
  2901  0080                     wtemp1	set	128
  2902  0082                     wtemp2	set	130
  2903  0084                     wtemp3	set	132
  2904  0086                     wtemp4	set	134
  2905  0088                     wtemp5	set	136
  2906  007F                     wtemp6	set	127
  2907  007E                     ttemp	set	126
  2908  007E                     ttemp0	set	126
  2909  0081                     ttemp1	set	129
  2910  0084                     ttemp2	set	132
  2911  0087                     ttemp3	set	135
  2912  007F                     ttemp4	set	127
  2913  007E                     ltemp	set	126
  2914  007E                     ltemp0	set	126
  2915  0082                     ltemp1	set	130
  2916  0086                     ltemp2	set	134
  2917  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     16      35
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _interruptManager in COMMON

    _interruptManager->_timer1GateInterrupt
    _timer1GateInterrupt->_timer1Value

Critical Paths under _main in BANK0

    _main->_takeReading
    _resetTimer->_TMR1_WriteTimer
    _storeWordForTransfer->_storeByteForTransfer
    _initialize->_initializeSpi

Critical Paths under _interruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     860
                                              9 BANK0      7     7      0
                     _TMR1_StopTimer
                         _initialize
                         _resetTimer
               _storeWordForTransfer
                        _takeReading
 ---------------------------------------------------------------------------------
 (1) _takeReading                                          3     3      0     229
                                              6 BANK0      3     3      0
                         _resetTimer
 ---------------------------------------------------------------------------------
 (2) _resetTimer                                           0     0      0     161
                    _TMR1_StartTimer
                    _TMR1_WriteTimer
              _globalInterruptEnable
 ---------------------------------------------------------------------------------
 (3) _TMR1_WriteTimer                                      6     4      2     161
                                              0 BANK0      6     4      2
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (4) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _storeWordForTransfer                                 6     4      2     356
                                              2 BANK0      6     4      2
               _storeByteForTransfer
 ---------------------------------------------------------------------------------
 (2) _storeByteForTransfer                                 2     0      2     161
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           0     0      0      68
             _globalInterruptDisable
              _globalInterruptEnable
               _initializeInterrupts
                      _initializeSpi
                    _intializeTimers
 ---------------------------------------------------------------------------------
 (2) _intializeTimers                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initializeSpi                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _initializeInterrupts                                 0     0      0       0
                      _clearAllFlags
             _globalInterruptDisable
              _globalInterruptEnable
         _peripheralInterruptDisable
          _peripheralInterruptEnable
 ---------------------------------------------------------------------------------
 (3) _peripheralInterruptEnable                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _peripheralInterruptDisable                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _globalInterruptEnable                                0     0      0       0
                      _clearAllFlags
 ---------------------------------------------------------------------------------
 (4) _clearAllFlags                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _globalInterruptDisable                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _interruptManager                                     1     1      0     135
                                              6 COMMON     1     1      0
                       _spiInterrupt
                _timer1GateInterrupt
 ---------------------------------------------------------------------------------
 (6) _timer1GateInterrupt                                  2     2      0     134
                                              4 COMMON     2     2      0
                        _timer1Value
           i1_globalInterruptDisable
 ---------------------------------------------------------------------------------
 (7) i1_globalInterruptDisable                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _timer1Value                                          4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _spiInterrupt                                         4     4      0       1
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TMR1_StopTimer
   _initialize
     _globalInterruptDisable
     _globalInterruptEnable
       _clearAllFlags
     _initializeInterrupts
       _clearAllFlags
       _globalInterruptDisable
       _globalInterruptEnable
         _clearAllFlags
       _peripheralInterruptDisable
       _peripheralInterruptEnable
     _initializeSpi
     _intializeTimers
   _resetTimer
     _TMR1_StartTimer
     _TMR1_WriteTimer
       _TMR1_StopTimer
     _globalInterruptEnable
       _clearAllFlags
   _storeWordForTransfer
     _storeByteForTransfer
   _takeReading
     _resetTimer
       _TMR1_StartTimer
       _TMR1_WriteTimer
         _TMR1_StopTimer
       _globalInterruptEnable
         _clearAllFlags

 _interruptManager (ROOT)
   _spiInterrupt
   _timer1GateInterrupt
     _timer1Value
     i1_globalInterruptDisable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      31       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     10      23       6       43.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      31      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sat Jul 16 18:06:21 2016

                        __CFG_CP$OFF 0000                                   l79 00EC  
                        __CFG_LVP$ON 0000                                  _GIE 005F  
                                _RA4 0064                                  u215 0133  
                                u405 00DA                                  u415 00EA  
                                u370 0190                         __CFG_CPD$OFF 0000  
                                u455 0047                                  wreg 0009  
    __size_of_globalInterruptDisable 0004                                 l1302 00DC  
                               l1314 00A5                                 l1354 0035  
                               l1346 003B                                 _PEIE 005E  
                               _WPUA 020C          ?_peripheralInterruptDisable 0077  
                       __CFG_WRT$OFF 0000                                 _main 002D  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                               ltemp 007E             __end_of_interruptManager 001C  
                      __CFG_BORV$LOW 0000        __size_of_storeWordForTransfer 002F  
                               start 001C                                 ttemp 007E  
                               wtemp 007E                        __CFG_CSWEN$ON 0000  
                      __CFG_MCLRE$ON 0000               ??_initializeInterrupts 0033  
                              ?_main 0077                        __CFG_WDTE$OFF 0000  
                    _TMR1_StartTimer 01D5                                _T1CON 001B  
                              _IOCIE 0484                       __CFG_DEBUG$OFF 0000  
                              i1l151 0017                                i1l198 010E  
                              _OSCEN 091D                                _TMR1H 001A  
                              _TMR1L 0019                                u27_25 0108  
                              u28_25 0114                                _TRISA 008C  
                      __CFG_PWRTE$ON 0000           ??i1_globalInterruptDisable 0077  
                     __CFG_FCMEN$OFF 0000                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
              __end_of_clearAllFlags 01C6                      _TMR1_WriteTimer 0179  
                       ?_takeReading 0077                      __initialization 001D  
             _globalInterruptDisable 01CA                         __end_of_main 0067  
                             ??_main 003C                        _maxTimerCount 0072  
                             _ANSELA 018C                               _T1GCON 001C  
                             _T1GPPS 0E13                               _RA5PPS 0E95  
                             i1l1132 0155                               i1l1124 011A  
                             i1l1182 0010                               _ODCONA 028C  
                             _INLVLA 038C                               _INTCON 000B  
                             _OSCFRQ 091F                               _TMR1IE 0488  
                             _TMR1IF 0088                               _TMR1ON 00D8  
                             _SSP1IE 048B                               _SSP1IF 008B  
                             _TRISA4 0464         __end_of_storeByteForTransfer 0179  
                      main@loopCount 0041              __end_of_TMR1_StartTimer 01D8  
                       ?_timer1Value 0077                       __CFG_STVREN$ON 0000  
     __size_of_globalInterruptEnable 0005        __end_of_globalInterruptEnable 01C1  
         ?_peripheralInterruptEnable 0077               __size_of_initializeSpi 0026  
            __end_of_TMR1_WriteTimer 0193              __end_of__initialization 002A  
                      _minTimerCount 0074                       __pcstackCOMMON 0077  
           __size_of_intializeTimers 0007                     timer1Value@value 0079  
                         _dataBuffer 0020         __size_of_timer1GateInterrupt 0028  
                         __pbssBANK0 0020                    ?_interruptManager 0077  
                         __pmaintext 002D                        _initializeSpi 011C  
               __size_of_takeReading 002B                   ??_interruptManager 007D  
                   ?_TMR1_StartTimer 0077                           __pintentry 0004  
                __CFG_RSTOSC$HFINT32 0000              __size_of_TMR1_StopTimer 0003  
       __end_of_storeWordForTransfer 00C9                 _storeByteForTransfer 015E  
                            _OSCCON1 0919                              _OSCCON2 091A  
                            _OSCCON3 091B                              _TMR1GIE 048F  
                            _TMR1GIF 008F                              _SLRCONA 030C  
                            _PPSLOCK 0E0F                              _SSP1BUF 0211  
                   ?_TMR1_WriteTimer 0033              ?_globalInterruptDisable 0077  
                     ?_initializeSpi 0077        __size_of_initializeInterrupts 000A  
               __size_of_timer1Value 000A                           _initialize 0067  
                            __ptext1 00C9                              __ptext2 01A7  
                            __ptext3 0179                              __ptext4 01D2  
                            __ptext5 01D5                              __ptext6 009A  
                            __ptext7 015E                              __ptext8 0067  
                            __ptext9 01AF                        ?_spiInterrupt 0077  
                  ??_intializeTimers 0033                ?_storeByteForTransfer 0033  
                            clrloop0 01B7                              main@val 003D  
               end_of_initialization 002A       __end_of_globalInterruptDisable 01CE  
                   _PINGDriverStatus 0032                           _resetTimer 01A7  
  __size_ofi1_globalInterruptDisable 0004            ?i1_globalInterruptDisable 0077  
                     ??_spiInterrupt 0077                            _SSP1SSPPS 0E22  
             __size_of_clearAllFlags 0005          ??_peripheralInterruptEnable 0033  
                   __CFG_FEXTOSC$OFF 0000                 TMR1_WriteTimer@value 0033  
               TMR1_WriteTimer@state 0037                      ??_initializeSpi 0033  
               _storeWordForTransfer 009A                           main@result 003F  
                _timer1GateInterrupt 00F4                          ?_initialize 0077  
                     _TMR1_StopTimer 01D2               ??_storeByteForTransfer 0035  
                start_initialization 001D                _globalInterruptEnable 01BC  
               ?_timer1GateInterrupt 0077                         takeReading@i 003A  
       ??_peripheralInterruptDisable 0033                ?_storeWordForTransfer 0035  
                      _clearAllFlags 01C1            _peripheralInterruptEnable 01C6  
                        ?_resetTimer 0077                     __CFG_LPBOREN$OFF 0000  
             __end_of_TMR1_StopTimer 01D5            __size_of_interruptManager 0018  
                        __pbssCOMMON 0070                            ___latbits 0000  
__size_of_peripheralInterruptDisable 0002                        __pcstackBANK0 0033  
              ??_timer1GateInterrupt 007B        timer1GateInterrupt@timerCount 007B  
               __end_of_spiInterrupt 015E                  __size_of_initialize 0033  
                     ?_clearAllFlags 0077                        ??_takeReading 0039  
                spiInterrupt@command 0079                      _intializeTimers 01AF  
                    ?_TMR1_StopTimer 0077                     __CFG_PPS1WAY$OFF 0000  
           __size_of_TMR1_StartTimer 0003               ?_globalInterruptEnable 0077  
                __size_of_resetTimer 0008     __end_ofi1_globalInterruptDisable 01D2  
           storeByteForTransfer@data 0033         __end_of_initializeInterrupts 019D  
             ??_storeWordForTransfer 0037                            clear_ram0 01B6  
                        _bufferCount 0070             __size_of_TMR1_WriteTimer 001A  
                      ??_timer1Value 0079                             _SSP1CON1 0215  
                           _SSP1CON3 0217                             _SSP1STAT 0214  
                __end_of_takeReading 00F4                     _summedTimerCount 002C  
 __end_of_peripheralInterruptDisable 01DA           _peripheralInterruptDisable 01D8  
                    ??_clearAllFlags 0033              __end_of_intializeTimers 01B6  
                       ??_initialize 0036   __size_of_peripheralInterruptEnable 0004  
                __end_of_timer1Value 01A7                     _interruptManager 0004  
              _TMR1_InterruptHandler 0030                             __ptext10 011C  
                           __ptext11 0193                             __ptext20 019D  
                           __ptext12 01C6                             __ptext21 0142  
                           __ptext13 01D8                             __ptext14 01BC  
                           __ptext15 01C1                             __ptext16 01CA  
                           __ptext18 00F4                             __ptext19 01CE  
                       _SSP1CON1bits 0215                __size_of_spiInterrupt 001C  
                   _timerValueStatus 0076                    ??_TMR1_StartTimer 0033  
           i1_globalInterruptDisable 01CE                        __size_of_main 003A  
                 __end_of_initialize 009A                          _takeReading 00C9  
                       ??_resetTimer 0039                __end_of_initializeSpi 0142  
                           int$flags 007E                 _initializeInterrupts 0193  
                  ??_TMR1_WriteTimer 0035                       initializeSpi@i 0034  
                       _spiInterrupt 0142    __end_of_peripheralInterruptEnable 01CA  
      __size_of_storeByteForTransfer 001B             ??_globalInterruptDisable 0033  
                 __end_of_resetTimer 01AF                             intlevel1 0000  
                   ?_intializeTimers 0077                    __CFG_CLKOUTEN$OFF 0000  
                   ??_TMR1_StopTimer 0033                          _timer1Value 019D  
              ?_initializeInterrupts 0077              ??_globalInterruptEnable 0033  
        __end_of_timer1GateInterrupt 011C                           _SSP1DATPPS 0E21  
                         _SSP1CLKPPS 0E20             storeWordForTransfer@data 0035  
            storeWordForTransfer@buf 0039  
